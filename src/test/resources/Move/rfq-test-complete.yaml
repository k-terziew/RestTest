---
swagger: "2.0"
info:
  version: "MASTER"
  title: "Nexus RFQ Service API"
basePath: "/"
schemes:
- "http"
paths:
  /api/app/rfq/admin/config/spring:
    get:
      operationId: "getSpringConfiguration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "object"
            additionalProperties:
              type: "string"
  /api/app/rfq/analytics/zip:
    get:
      operationId: "exportRfqs"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/analytics:
    get:
      operationId: "getRawRfq"
      consumes:
      - "application/json"
      produces:
      - "application/json; charset=UTF-8"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RequesterAggregatedRfqDto"
  /api/app/rfq/analytics/{id}:
    get:
      operationId: "getRawRfqs"
      consumes:
      - "application/json"
      produces:
      - "application/json; charset=UTF-8"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequesterAggregatedRfqDto"
  /api/app/rfq/requester/rfq/{rfqId}/elaborations/{id}:
    get:
      operationId: "getElaboration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/ElaborationDto"
  /api/app/rfq/requester/rfq/{rfqId}/elaborations:
    get:
      operationId: "findAllElaborations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ElaborationDto"
  /api/app/rfq/requester/rfq/elaborations:
    post:
      operationId: "requestNewElaboration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RequestElaborationDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/rfq/{rfqId}/elaborations/test:
    get:
      operationId: "getNewTestElaborationMapping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/FimbleRequest"
    post:
      operationId: "requestNewTestElaboration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/BrokerMessagePayload"
  /api/app/rfq/requester/rfq/csib/quote/test:
    post:
      operationId: "sendTestCsQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/rfq/socgen/quote/test:
    post:
      operationId: "sendTestSocGenQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/rfq/golsac/quote/test:
    post:
      operationId: "sendTestGolSacQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/elar/{id}:
    get:
      operationId: "getElarByRfqId"
      consumes:
      - "application/json"
      produces:
      - "text/plain"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "type"
        in: "query"
        required: false
        type: "string"
      - name: "forceUpload"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
  /api/app/rfq/elar:
    post:
      operationId: "exportToElar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DateRangeDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/{rfqId}/internal/assetclass:
    post:
      operationId: "setAssetClass"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqInternalAssetClassDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/{rfqId}/internal/rmfullname:
    post:
      operationId: "setRmFullName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqInternalRmFullNameDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/{rfqId}/internal/rmbusinessarea:
    post:
      operationId: "setRmBusinessArea"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqInternalRmBusinessAreaDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/{rfqId}/internal/offerings:
    post:
      operationId: "setOfferings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqInternalOfferingsDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/log/info:
    post:
      operationId: "createInfoLogEntry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/log/warning:
    post:
      operationId: "createWarningLogEntry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/log/error:
    post:
      operationId: "createErrorLogEntry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/lookup/rmFullNames:
    get:
      operationId: "rmFullName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              type: "string"
  /api/app/rfq/lookup/initiatives:
    get:
      operationId: "initiative"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              type: "string"
  /api/app/rfq/provider/web/rfq/{rfqId}/feedback:
    get:
      operationId: "findCompetitionFeedback"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CompetitionFeedbackDto"
    post:
      operationId: "saveCompetitionFeedback"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CompetitionFeedbackDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/CompetitionFeedbackDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/documents/{documentId}:
    get:
      operationId: "getDocument"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/documents:
    get:
      operationId: "getAllDocuments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqDocumentWebDto"
    post:
      operationId: "uploadDocument"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/MultipartFormDataInput"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/documents/{documentId}/file:
    get:
      operationId: "downloadDocument"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        default:
          description: "successful operation"
    post:
      operationId: "uploadRequestedDocument"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/MultipartFormDataInput"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/feetables:
    get:
      operationId: "findAllFeeTables"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FeeTableWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/feetables/active:
    get:
      operationId: "getActiveFeeTable"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/FeeTableWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/feetablemessages:
    get:
      operationId: "findAllFeeTableMessages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FeeTableMessageDto"
  /api/app/rfq/provider/web/rfq/{requestedQuoteId}/notionalincrease/{notionalIncreaseId}/confirmfee:
    post:
      operationId: "confirmFee"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "notionalIncreaseId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/NotionalIncreaseChangeStatusWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreaseWebDto"
  /api/app/rfq/provider/web/rfq/{requestedQuoteId}/notionalincrease/{notionalIncreaseId}/submitfee:
    post:
      operationId: "submitFee"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "notionalIncreaseId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/NotionalIncreaseSubmitFeeWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreaseWebDto"
  /api/app/rfq/provider/web/rfq/{requestedQuoteId}/notionalincrease/{notionalIncreaseId}/rejectrequest:
    post:
      operationId: "rejectRequest"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "notionalIncreaseId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/NotionalIncreaseChangeStatusWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreaseWebDto"
  /api/app/rfq/provider/web/rfq/{requestedQuoteId}/notionalincrease/received:
    get:
      operationId: "getReceivedNotionalIncreases"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreasesWithAggregationWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/terms:
    get:
      operationId: "getAllTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TermsWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/terms/{termsId}:
    get:
      operationId: "getTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "termsId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TermsWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/terms/{termsId}/actions/submit:
    post:
      operationId: "submitTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "termsId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "validateOnly"
        in: "query"
        required: false
        type: "boolean"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SubmitTermsWebDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/queuemessage/{correlationId}:
    get:
      operationId: "getByCorrelationId"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QueueMessageWebDto"
  /api/app/rfq/queuemessage/search:
    post:
      operationId: "search"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QueueMessageSearchDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QueueMessageWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/documents/{documentId}:
    get:
      operationId: "getDocument_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/documents:
    get:
      operationId: "getAllDocuments_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqDocumentWebDto"
    post:
      operationId: "requestDocument"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqRequestDocumentWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/documents/{documentId}/file:
    get:
      operationId: "downloadDocument_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/web/rfq/{rfqId}/documents/{documentId}/actions/accept:
    post:
      operationId: "acceptDocument"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqReviewDocumentWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/documents/actions/import-all:
    post:
      operationId: "reImportDocumentsToSunshine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/web/rfq/{rfqId}/documents/{documentId}/actions/reject:
    post:
      operationId: "rejectDocument"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqReviewDocumentWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/documents/{documentId}/actions/cancel:
    post:
      operationId: "cancelDocument"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDocumentWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/feetables:
    get:
      operationId: "findAllFeeTables_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FeeTableWebDto"
    post:
      operationId: "createFeeTable"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "validateOnly"
        in: "query"
        required: false
        type: "boolean"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SubmitFeeTableDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/web/rfq/{rfqId}/feetables/active:
    get:
      operationId: "getActiveFeeTable_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/FeeTableWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/feetables/{feeTableId}:
    get:
      operationId: "getFeeTable"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "feeTableId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/FeeTableWebDto"
    put:
      operationId: "updateFeeTable"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "feeTableId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "validateOnly"
        in: "query"
        required: false
        type: "boolean"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SubmitFeeTableDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/web/rfq/{rfqId}/feetablemessages:
    get:
      operationId: "findAllFeeTableMessages_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FeeTableMessageDto"
  /api/app/rfq/requester/web/latch/{masterId}:
    get:
      operationId: "getRfqLatch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "masterId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqLatchDto"
  /api/app/rfq/requester/web/latch/{masterId}/refresh:
    post:
      operationId: "refreshRfqLatch"
      consumes:
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "masterId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqLatchDto"
  /api/app/rfq/requester/web/latch/{masterId}/release:
    post:
      operationId: "releaseRfqLatch"
      consumes:
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "masterId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqLatchDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/notionalincrease:
    post:
      operationId: "createRequest"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/NotionalIncreaseCreateRequestWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreaseWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/notionalincrease/sent:
    get:
      operationId: "getSentNotionalIncreases"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreasesWithAggregationWebDto"
  /api/app/rfq/requester/web/master/{masterId}/notionalincrease/sent:
    get:
      operationId: "getSentNotionalIncreasesForMaster"
      parameters:
      - name: "masterId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NotionalIncreasesWithAggregationWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/notionalincrease/{notionalIncreaseId}/rejectfee:
    post:
      operationId: "rejectFee"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "notionalIncreaseId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/NotionalIncreaseChangeStatusWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreaseWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/notionalincrease/{notionalIncreaseId}/acceptfee:
    post:
      operationId: "acceptFee"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "notionalIncreaseId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/NotionalIncreaseChangeStatusWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/NotionalIncreaseWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/terms:
    get:
      operationId: "getAllTerms_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TermsWebDto"
    post:
      operationId: "requestTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TermsWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/terms/{termsId}:
    get:
      operationId: "getTerms_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "termsId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TermsWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/terms/{termsId}/actions/accept:
    post:
      operationId: "acceptTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "termsId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TermsWebDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/terms/{termsId}/actions/reject:
    post:
      operationId: "rejectTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "termsId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TermsWebDto"
  /api/app/rfq/export:
    post:
      operationId: "exportRfqs_1"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqExportRequestDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/externalmessaging/receive:
    post:
      operationId: "receive"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqExternalMessageDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqExternalMessageDto"
  /api/app/rfq/web/externalmessaging/messages/{rfqId}/{providerTenantId}:
    get:
      operationId: "messages"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "providerTenantId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "includeRelated"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqExternalMessageFullWebDto"
  /api/app/rfq/web/externalmessaging/send/{rfqId}:
    post:
      operationId: "send"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqExternalMessageRequestWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqExternalMessageWebDto"
  /api/app/rfq/web/externalmessaging/unreadmessagescount/{rfqId}:
    get:
      operationId: "unreadMessagesCount"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "includeRelated"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "integer"
            format: "int32"
  /api/app/rfq/web/externalmessaging/overview/{rfqId}:
    get:
      operationId: "overview"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "includeRelated"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqExternalMessagingOverviewWebDto"
  /api/app/rfq/provider/assignments:
    post:
      operationId: "createAssignment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqAssignmentSubmitDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqAssignmentDto"
  /api/app/rfq/provider/assignments/rfq/{rfqId}:
    get:
      operationId: "findRfqAssignmentsByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqAssignmentDto"
  /api/app/rfq/provider/assignments/rfq/{rfqId}/active:
    get:
      operationId: "getActiveAssignmentByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqAssignmentDto"
  /api/app/rfq/provider/comments:
    post:
      operationId: "createComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqCommentSubmitDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqCommentDto"
  /api/app/rfq/provider/comments/rfq/{rfqId}:
    get:
      operationId: "findRfqCommentsByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqCommentDto"
  /api/app/rfq/provider/comments/master/{masterId}:
    get:
      operationId: "findRfqCommentsByMasterId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "masterId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqCommentDto"
  /api/app/rfq/provider/export:
    post:
      operationId: "exportRfqs_2"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RequestedQuoteExportRequestDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/provider/web/externalmessaging/messages/{requestedQuoteId}:
    get:
      operationId: "messages_1"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "includeRelated"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqExternalMessageFullWebDto"
  /api/app/rfq/provider/web/externalmessaging/send/{requestedQuoteId}:
    post:
      operationId: "send_1"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqProviderExternalMessageRequestWebDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqExternalMessageWebDto"
  /api/app/rfq/provider/web/externalmessaging/unreadmessagescount/{requestedQuoteId}:
    get:
      operationId: "unreadMessagesCount_1"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "includeRelated"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "integer"
            format: "int32"
  /api/app/rfq/provider/pricer-requests/{pricerRequestId}:
    get:
      operationId: "getPricerRequestById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pricerRequestId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/PricerRequestDto"
  /api/app/rfq/provider/pricer-requests/requested-quote/{requestedQuoteId}:
    get:
      operationId: "findPricerRequestsByRequestedQuoteId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PricerRequestDto"
  /api/app/rfq/provider/pricer-requests/requested-quote/{requestedQuoteId}/last:
    get:
      operationId: "findLastPricerRequestByRequestedQuoteId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/PricerRequestDto"
  /api/app/rfq/provider/rfq/{rfqId}/refreshquote:
    post:
      operationId: "refreshQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/provider/deselectprovider:
    put:
      operationId: "deselectProvider"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/provider/request-last-look:
    post:
      operationId: "requestLastLook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/LastLookDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/provider/set-title:
    put:
      operationId: "setTitle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TitleDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/provider/set-sunshine-id:
    put:
      operationId: "setSunshineId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SunshineDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/provider/request-quote:
    post:
      operationId: "requestQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/provider/set-request-status:
    put:
      operationId: "setRequestStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqStatusEventDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/provider/web/{rfqId}/events:
    get:
      operationId: "getAllEvents"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqEventDto"
  /api/app/rfq/provider/web/{id}:
    get:
      operationId: "getById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequestedQuoteWebDto"
  /api/app/rfq/provider/web/quote:
    put:
      operationId: "sendQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QuoteFrontEndDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequestedQuoteWebDto"
  /api/app/rfq/provider/web/last-look-quote:
    put:
      operationId: "sendLastLookQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QuoteFrontEndDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequestedQuoteWebDto"
  /api/app/rfq/provider/web/search:
    post:
      operationId: "searchRequestedQuotes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RequestedQuoteSearchRequestDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequestedQuoteSearchResponseDto"
  /api/app/rfq/provider/web/overview/config:
    get:
      operationId: "createRfqOverviewTableConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TableWebConfiguration"
  /api/app/rfq/provider/web/summary/{rfqId}:
    get:
      operationId: "generateSummary"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqSummaryResponseDto"
  /api/app/rfq/provider/web/re-index:
    put:
      operationId: "reindex"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/provider/web/tradeexecuted/{requestedQuoteId}:
    put:
      operationId: "confirmTrade"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequestedQuoteWebDto"
  /api/app/rfq/provider/web/traderejected/{requestedQuoteId}:
    put:
      operationId: "rejectTrade"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "requestedQuoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequestedQuoteWebDto"
  /api/app/rfq/provider/web/rfq/{rfqId}/quotes:
    get:
      operationId: "getAllSentQuotes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QuoteDto"
  /api/app/rfq/provider/web/search/config:
    post:
      operationId: "createRequestedQuoteSearchQueryConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RequestedQuoteSearchRequestDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/QueryConfiguration"
  /api/app/rfq/provider/web/rfqId/{rfqId}:
    get:
      operationId: "getByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequestedQuoteWebDto"
  /api/app/rfq/provider/web/aggregated/{rfqId}:
    get:
      operationId: "getAggregatedByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/ProviderAggregatedRfqDto"
  /api/app/rfq/provider/web/re-index/{rfqId}:
    put:
      operationId: "index"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/assignments:
    post:
      operationId: "createAssignment_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqAssignmentSubmitDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqAssignmentDto"
  /api/app/rfq/requester/assignments/rfq/{rfqId}:
    get:
      operationId: "findRfqAssignmentsByRfqId_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqAssignmentDto"
  /api/app/rfq/requester/assignments/rfq/{rfqId}/active:
    get:
      operationId: "getCurrentAssignmentByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqAssignmentDto"
  /api/app/rfq/requester/comments:
    post:
      operationId: "addComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqCommentSubmitDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqCommentDto"
  /api/app/rfq/requester/comments/rfq/{rfqId}:
    get:
      operationId: "getRfqCommentsByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqCommentDto"
  /api/app/rfq/requester/comments/master/{masterId}:
    get:
      operationId: "getRfqCommentsByMasterId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "masterId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqCommentDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/orders:
    get:
      operationId: "findRfqOrdersByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "includeRelated"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqRequesterOrderDto"
    post:
      operationId: "createOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqRequesterOrderSubmitDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqRequesterOrderDto"
  /api/app/rfq/requester/web/rfq/{rfqId}/orders/{orderId}:
    get:
      operationId: "getRfqOrderByOrderId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqRequesterOrderDto"
    delete:
      operationId: "deleteRfqOrderByOrderId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "orderId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqRequesterOrderDto"
  /api/app/rfq/requester/send-quote:
    put:
      operationId: "sendQuote_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QuoteDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/requester/confirm-trade-execution:
    put:
      operationId: "confirmTradeExecution"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/requester/reject-trade-execution:
    put:
      operationId: "rejectTradeExecution"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/requester/import-product-in-sunshine:
    put:
      operationId: "importProductInSunshine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/SunshineProductImportResultDto"
  /api/app/rfq/requester/import-mifid-in-sunshine:
    put:
      operationId: "importMifidInSunshine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/requester/import-full-product-in-sunshine:
    put:
      summary: "Import RFQ's full product (including MiFID costs) in Sunshine"
      description: ""
      operationId: "importFullProductInSunshine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SunshineProductImportResultDto"
  /api/app/rfq/providers:
    get:
      operationId: "allProviders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProviderDto"
            uniqueItems: true
  /api/app/rfq/{rfqId}/variations:
    get:
      operationId: "getVariations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqVariationDto"
  /api/app/rfq/{rfqId}/events:
    get:
      operationId: "getAllEvents_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqEventDto"
  /api/app/rfq/{rfqId}/adjustments:
    get:
      operationId: "getAdjustments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqAdjustmentDto"
  /api/app/rfq/{rfqId}/title:
    put:
      operationId: "updateTitle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqSubmitTitleDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/search/config:
    post:
      operationId: "createRfqSearchQueryConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqSearchRequestDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/QueryConfiguration"
  /api/app/rfq/{id}:
    get:
      operationId: "getById_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/search:
    post:
      operationId: "searchRfqs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqSearchRequestDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqSearchResponseDto"
  /api/app/rfq/fromproduct/{productId}:
    get:
      operationId: "createFromProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq:
    get:
      operationId: "createRfq"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productType"
        in: "query"
        required: false
        type: "string"
        enum:
        - "AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_BONUS_CERTIFICATE"
        - "BONUS_CERTIFICATE"
        - "BRC"
        - "ABRC"
        - "CBRC"
        - "RC"
        - "ARC"
        - "CRC"
        - "PRO_NOTE"
        - "CALLABLE_PRO_NOTE"
        - "AUTOCALLABLE_PRO_NOTE"
        - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
        - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
        - "GENERIC_PRODUCT"
        - "RATE_NOTE"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
    post:
      operationId: "save"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqDto"
      responses:
        default:
          description: "successful operation"
    put:
      operationId: "update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/overview/config:
    get:
      operationId: "createRfqOverviewTableConfig_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TableWebConfiguration"
  /api/app/rfq/aggregated/{id}:
    get:
      operationId: "getAggregatedById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RequesterAggregatedRfqDto"
  /api/app/rfq/aggregated/{id}/xml:
    get:
      operationId: "getAggregatedByIdAsXml"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
  /api/app/rfq/mdm/{rfqId}:
    get:
      operationId: "getMdmByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/MoveDataModel"
  /api/app/rfq/ibt/{rfqId}:
    post:
      operationId: "getTermsFromIbt"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/MultipartFormDataInput"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/TermsProductDto"
  /api/app/rfq/mdm/sunshine/{rfqId}:
    get:
      operationId: "getMdmToSunshineProductByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
  /api/app/rfq/mdm/sunshine/mifid/{rfqId}:
    get:
      operationId: "getMdmToSunshineMifidByRfqId"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
  /api/app/rfq/summary/{rfqId}:
    get:
      operationId: "generateSummary_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqSummaryResponseDto"
  /api/app/rfq/summary:
    post:
      operationId: "generateSummary_2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqSummaryDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqSummaryResponseDto"
  /api/app/rfq/versions/last/{id}:
    get:
      operationId: "getPreviousVersion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqDto"
  /api/app/rfq/versions/{id}:
    get:
      operationId: "getPreviousVersions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqDto"
  /api/app/rfq/underlying/lookup:
    get:
      operationId: "underlyingLookup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        required: false
        type: "string"
        enum:
        - "EQUITY"
        - "INDEX"
        - "CMDTY"
        - "CORP"
        - "CRNCY"
        - "GOVT"
        - "PFD"
        - "DI"
        - "OTHER"
      - name: "query"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RfqUnderlyingDto"
  /api/app/rfq/acceptquote:
    put:
      operationId: "acceptQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/rejectquote:
    put:
      operationId: "rejectQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/refreshquote:
    put:
      operationId: "refreshQuote_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/acceptprovider:
    put:
      operationId: "acceptProvider"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/deselectprovider:
    put:
      operationId: "deselectProvider_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
            enum:
            - "SUCCESS"
            - "ERROR"
            - "FAILURE"
            - "RETRYING"
  /api/app/rfq/closecompetition:
    put:
      operationId: "closeCompetition"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/{rfqId}/reopen-competition:
    put:
      operationId: "reopenCompetition"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/{rfqId}/reopen-competition/{providerTenantId}:
    put:
      operationId: "reopenCompetitionForProvider"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "providerTenantId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/{rfqId}/quotes/last:
    get:
      operationId: "getCompetitionQuotes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "useVariationParent"
        in: "query"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QuoteProviderDataDto"
  /api/app/rfq/{rfqId}/amended/new:
    get:
      operationId: "createdAmendedChildRfq"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/{rfqId}/amended:
    post:
      operationId: "saveAmendedChildRfq"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/{rfqId}/converted/new:
    get:
      operationId: "createConvertedChildRfq"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "requestType"
        in: "query"
        required: false
        type: "string"
        enum:
        - "INDICATION"
        - "COMPETITION"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/{rfqId}/converted:
    post:
      operationId: "saveConvertedChildRfq"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqDto"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/{rfqId}/variations/new:
    get:
      operationId: "createVariation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "solvingFor"
        in: "query"
        required: false
        type: "string"
        enum:
        - "BARRIER"
        - "BARRIER_LOWER"
        - "BARRIER_UPPER"
        - "BONUS_LEVEL"
        - "CAP"
        - "COUPON"
        - "COUPON_BARRIER"
        - "COUPON_SPREAD"
        - "COUPON_CAP"
        - "COUPON_FLOOR"
        - "EARLY_REDEMPTION_BARRIER_RATE"
        - "EARLY_REDEMPTION_EXIT_RATE"
        - "FEE_SGC_GROSS"
        - "FEE_CO_STRUCTURING"
        - "ISSUE_PRICE_LEVEL"
        - "ISSUE_PRICE_RATE"
        - "PARTICIPATION"
        - "PROTECTION"
        - "REBATE"
        - "STRIKE"
        - "TENOR"
        - "OTHER"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/{rfqId}/adjustments/new:
    get:
      operationId: "createAdjustment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/{id}/providers/unassociated:
    get:
      operationId: "unassociatedProviders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProviderDto"
            uniqueItems: true
  /api/app/rfq/{id}/providers:
    post:
      operationId: "sendRfqToNewProviders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TenantListDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/re-index:
    put:
      operationId: "reindex_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/{rfqId}/request-last-look/{competitorQuoteId}:
    put:
      operationId: "requestLastLook_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      - name: "competitorQuoteId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/querylog:
    get:
      operationId: "logQueriesForSeconds"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "string"
  /api/app/rfq/re-index/{rfqId}:
    put:
      operationId: "index_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rfqId"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        default:
          description: "successful operation"
  /api/app/rfq/validate:
    put:
      operationId: "validate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RfqValidationDto"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/app/rfq/copy/{id}:
    get:
      operationId: "copy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            $ref: "#/definitions/RfqResponseDto"
  /api/public/rfq/assets/{asset}:
    get:
      operationId: "getAsset"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "asset"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
definitions:
  Action:
    type: "object"
    required:
    - "key"
    - "label"
    - "type"
    discriminator: "type"
    properties:
      type:
        type: "string"
        readOnly: true
        enum:
        - "QUOTE_ACTION"
        - "WEB_ACTION"
      key:
        type: "string"
        readOnly: true
      label:
        type: "string"
        readOnly: true
  AirbagCertificateDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        participation:
          type: "number"
        strikeRate:
          type: "number"
  AutocallableAirbagCertificateDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        strikeRate:
          type: "number"
  AutocallableBarrierReverseConvertibleDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        elaborationStatus:
          type: "string"
          enum:
          - "PENDING"
          - "SUCCEEDED"
          - "INVALIDATED"
          - "FAILED"
        strikeRate:
          type: "number"
  AutocallableBonusCertificateDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        capPreserved:
          type: "boolean"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        upsidePreserved:
          type: "boolean"
  AutocallableProNoteDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        protection:
          type: "number"
        strikeRate:
          type: "number"
  AutocallableReverseConvertibleDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        elaborationStatus:
          type: "string"
          enum:
          - "PENDING"
          - "SUCCEEDED"
          - "INVALIDATED"
          - "FAILED"
        strikeRate:
          type: "number"
  BarrierDto:
    type: "object"
    properties:
      barrierLevel1:
        type: "number"
      barrierRebate:
        type: "number"
      barrierUpper:
        type: "number"
      barrierLower:
        type: "number"
      barrierObsFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "BERMUDAN"
        - "EUROPEAN"
      barrierObsType:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "WORST_OF"
        - "BEST_OF"
        - "BASKET"
      barrierObsStyle:
        type: "string"
        enum:
        - "CLOSING"
        - "CONTINUOUS"
  BarrierReverseConvertibleDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        elaborationStatus:
          type: "string"
          enum:
          - "PENDING"
          - "SUCCEEDED"
          - "INVALIDATED"
          - "FAILED"
        strikeRate:
          type: "number"
  BonusCertificateDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        capPreserved:
          type: "boolean"
        participation:
          type: "number"
        upsidePreserved:
          type: "boolean"
  CallableBarrierReverseConvertibleDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        elaborationStatus:
          type: "string"
          enum:
          - "PENDING"
          - "SUCCEEDED"
          - "INVALIDATED"
          - "FAILED"
        strikeRate:
          type: "number"
  CallableProNoteDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        protection:
          type: "number"
        strikeRate:
          type: "number"
  CallableReverseConvertibleDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        elaborationStatus:
          type: "string"
          enum:
          - "PENDING"
          - "SUCCEEDED"
          - "INVALIDATED"
          - "FAILED"
        strikeRate:
          type: "number"
  CouponDto:
    type: "object"
    properties:
      coupon:
        type: "number"
      couponFrequency:
        type: "string"
        enum:
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "BULLET"
      couponType:
        type: "string"
        enum:
        - "FIXED"
        - "FLOAT"
        - "STEP_UP"
        - "NO_COUPON"
      couponMemory:
        type: "string"
        enum:
        - "YES"
        - "NO"
      conditionalCoupon:
        type: "boolean"
      couponBarrier:
        type: "number"
      couponObsFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "EUROPEAN"
        - "BERMUDAN"
      couponObsStyle:
        type: "string"
        enum:
        - "CLOSING"
        - "CONTINUOUS"
      couponObsType:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "WORST_OF"
        - "BEST_OF"
        - "BASKET"
      couponReferenceRate:
        type: "string"
      couponFloor:
        type: "number"
      couponSpread:
        type: "number"
      couponCap:
        type: "number"
      couponStep:
        type: "number"
      couponStepFrequency:
        type: "string"
        enum:
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "BULLET"
  DataProvider:
    type: "object"
    properties:
      url:
        type: "string"
      queryParams:
        type: "object"
        additionalProperties:
          type: "string"
  Digits:
    type: "object"
    properties:
      integer:
        type: "integer"
        format: "int32"
      fraction:
        type: "integer"
        format: "int32"
  EarlyRedemptionDto:
    type: "object"
    properties:
      earlyRedemptionType:
        type: "string"
        enum:
        - "FIXED_MATURITY"
        - "CALLABLE"
        - "CALLABLE_WITH_EXIT_RATE"
        - "AUTOCALLABLE"
      earlyRedemptionFirstObservationTenor:
        type: "string"
      earlyRedemptionObservationFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
      earlyRedemptionBarrierObservationType:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "WORST_OF"
        - "BEST_OF"
        - "BASKET"
      earlyRedemptionStep:
        type: "number"
      earlyRedemptionBarrierRate:
        type: "number"
      earlyRedemptionPriceRate:
        type: "number"
      earlyRedemptionExitRate:
        type: "number"
  FeeDto:
    type: "object"
    required:
    - "calculationType"
    - "id"
    - "status"
    - "type"
    properties:
      id:
        type: "integer"
        format: "int64"
      grossParentId:
        type: "integer"
        format: "int64"
      splitParentId:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "CO_STRUCTURING_FEE"
        - "SGC_NET"
        - "SGC_GROSS"
        - "SUBSCRIPTION_FEE"
      amount:
        type: "number"
      status:
        type: "string"
        enum:
        - "INDICATIVE"
        - "FIXED"
      calculationType:
        type: "string"
        enum:
        - "NOTIONAL_PERCENTAGE"
        - "ISSUE_PRICE_PERCENTAGE"
        - "NAV_PERCENTAGE"
      paymentDate:
        type: "string"
        format: "date"
      isSplit:
        type: "boolean"
      isNew:
        type: "boolean"
  GenericProductDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        sunshineProductType:
          type: "string"
          enum:
          - "ACCUMULATOR_NOTES"
          - "AIRBAG_CERTIFICATE"
          - "AUTOCALLABLE_BARRIER_REVERSE_CONVERTIBLE"
          - "AUTOCALLABLE_BONUS_CERTIFICATE"
          - "AUTOCALLABLE_REVERSE_CONVERTIBLE"
          - "BARRIER_DISCOUNT_CERTIFICATE"
          - "BARRIER_REVERSE_CONVERTIBLE"
          - "BONUS_CERTIFICATE"
          - "CALLABLE_BARRIER_REVERSE_CONVERTIBLE"
          - "CALLABLE_DAILY_ACCRUAL_NOTES"
          - "CALLABLE_RANGE_ACCRUAL_NOTES"
          - "CAPPED_OUTPERFORMANCE_CERTIFICATE"
          - "CREDIT_LINKED_NOTES"
          - "DISCOUNT_CERTIFICATE"
          - "DROP_BACK_CERTIFICATE"
          - "EXPRESS_CERTIFICATE"
          - "FINER_S"
          - "FIXED_RATE_NOTE"
          - "FLOATING_RATE_NOTE"
          - "INFLATION_LINKED_NOTES"
          - "MINI_FUTURES"
          - "OUTPERFORMANCE_BONUS_CERTIFICATE"
          - "OUTPERFORMANCE_CERTIFICATE"
          - "PRO_NOTE_WITH_BONUS_COUPON"
          - "PRO_NOTE_WITH_COUPON"
          - "PRO_NOTE_WITH_DOUBLE_KNOCK_OUT"
          - "PRO_NOTE_WITH_KNOCK_OUT"
          - "PRO_NOTE_WITH_PARTICIPATION"
          - "PRO_NOTE_WITH_VARIABLE_COUPON"
          - "REVERSE_CONVERTIBLE"
          - "STABILITY_NOTE"
          - "STEEPENER"
          - "STEP_UP_NOTES"
          - "TRACKER_CERTIFICATE"
          - "TRIGGER_TWIN_WIN_CERTIFICATES"
          - "TWIN_WIN_CERTIFICATE"
          - "VARIOUS_LEVERAGE_WITH_KNOCK_OUT"
          - "VARIOUS_LEVERAGE_WITHOUT_KNOCK_OUT"
          - "VARIOUS_PARTICIPATION"
          - "VARIOUS_PRO_NOTES"
          - "VARIOUS_PRODUCTS"
          - "VARIOUS_YIELD_ENHANCEMENT"
          - "WARRANT"
          - "WARRANTS"
  Length:
    type: "object"
    properties:
      min:
        type: "integer"
        format: "int32"
      max:
        type: "integer"
        format: "int32"
  NotionalIncreaseExtDto:
    type: "object"
    required:
    - "ackStatus"
    - "creationTimestamp"
    - "notional"
    - "notionalIncreaseId"
    - "providerTenantId"
    - "requesterTenantId"
    - "rfqId"
    - "status"
    properties:
      notionalIncreaseId:
        type: "string"
        format: "uuid"
      rfqId:
        type: "string"
        format: "uuid"
      status:
        type: "string"
        enum:
        - "NEW"
        - "REQUEST_REJECTED"
        - "FEE_SUBMITTED"
        - "FEE_REJECTED"
        - "IN_EXECUTION"
        - "EXECUTED"
        - "SENT"
        - "FAILED"
      requesterTenantId:
        type: "integer"
        format: "int64"
      requesterUserId:
        type: "string"
      providerTenantId:
        type: "integer"
        format: "int64"
      notional:
        type: "number"
      creationTimestamp:
        type: "string"
        format: "date-time"
      executionTimestamp:
        type: "string"
        format: "date-time"
      rejectionTimestamp:
        type: "string"
        format: "date-time"
      fee:
        type: "number"
      updateTimestamp:
        type: "string"
        format: "date-time"
      ackStatus:
        type: "string"
        enum:
        - "NONE"
        - "DRAFTED_MESSAGE"
        - "SENT_MESSAGE"
        - "RECEIVED_MESSAGE"
        - "PROCESSED_MESSAGE"
        - "FAILED_MESSAGE"
        - "FAILED_ACK"
        - "FAILED_NACK"
        - "DRAFTED_ACK"
        - "DRAFTED_NACK"
        - "SENT_ACK"
        - "SENT_NACK"
        - "RECEIVED_NACK"
        - "RECEIVED_ACK"
      lastQueueMessageId:
        type: "integer"
        format: "int64"
  Option:
    type: "object"
    properties:
      label:
        type: "string"
      value:
        type: "object"
      order:
        type: "integer"
        format: "int32"
      disabled:
        type: "boolean"
  ProNoteDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        participation:
          type: "number"
        protection:
          type: "number"
        strikeRate:
          type: "number"
  ProNoteWithLimitedParticipationDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        bonusLevel:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        participation:
          type: "number"
        protection:
          type: "number"
        strikeRate:
          type: "number"
  ProNoteWithTwinWinParticipationDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        bonusLevel:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        participation:
          type: "number"
        protection:
          type: "number"
        strikeRate:
          type: "number"
  ProviderDto:
    type: "object"
    properties:
      name:
        type: "string"
      url:
        type: "string"
      contactEmailAddress:
        type: "string"
      tenantId:
        type: "integer"
        format: "int64"
      isPreferred:
        type: "boolean"
      isConnected:
        type: "boolean"
  QuoteAction:
    type: "object"
    required:
    - "key"
    - "label"
    - "type"
    properties:
      type:
        type: "string"
        readOnly: true
        enum:
        - "QUOTE_ACTION"
        - "WEB_ACTION"
      key:
        type: "string"
        readOnly: true
      label:
        type: "string"
        readOnly: true
  QuoteData:
    type: "object"
    required:
    - "sellingRestrictions"
    properties:
      providerTenantId:
        type: "integer"
        format: "int64"
      isPreferred:
        type: "boolean"
      isConnected:
        type: "boolean"
      name:
        type: "string"
      contactEmailAddress:
        type: "string"
      rfqId:
        type: "string"
        format: "uuid"
      quote:
        type: "string"
      solutionStatus:
        type: "string"
        enum:
        - "ACCEPTED"
        - "REJECTED"
        - "WAITING"
      rejectionReason:
        type: "string"
        enum:
        - "NO_QUOTE_ON_UNDERLYING"
        - "NO_QUOTE_ON_STRUCTURE"
        - "NOT_ENOUGH_TIME"
        - "SIZE_TOO_LOW"
        - "SIZE_TOO_HIGH"
        - "DOES_NOT_SOLVE"
        - "AUTO_PRICER_ERROR"
        - "TECHNICAL_ERROR"
        - "OTHER"
      rejectionComment:
        type: "string"
      issuer:
        type: "string"
      status:
        type: "string"
        enum:
        - "ACCEPTED"
        - "REJECTED"
        - "WAITING"
        - "SENDING_FAILED"
      quoteId:
        type: "string"
        format: "uuid"
      isLastLook:
        type: "boolean"
      creationDateTime:
        type: "string"
        format: "date-time"
      providerAcceptedFlag:
        type: "boolean"
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/SellingRestrictionDto"
      quoteValidUntil:
        type: "string"
        format: "date-time"
      creationUserId:
        type: "string"
      creationUserFullName:
        type: "string"
  QuoteDto:
    type: "object"
    required:
    - "creationDateTime"
    - "providerTenantId"
    - "requesterTenantId"
    - "rfqId"
    - "sellingRestrictions"
    - "solutionStatus"
    - "status"
    properties:
      id:
        type: "string"
        format: "uuid"
      providerTenantId:
        type: "integer"
        format: "int64"
      requesterTenantId:
        type: "integer"
        format: "int64"
      rfqId:
        type: "string"
        format: "uuid"
      quote:
        type: "string"
      solutionStatus:
        type: "string"
        enum:
        - "ACCEPTED"
        - "REJECTED"
        - "WAITING"
      issuer:
        type: "string"
      status:
        type: "string"
        enum:
        - "ACCEPTED"
        - "REJECTED"
        - "WAITING"
        - "SENDING_FAILED"
      isLastLook:
        type: "boolean"
      creationDateTime:
        type: "string"
        format: "date-time"
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/SellingRestrictionDto"
      rejectionReason:
        type: "string"
        enum:
        - "NO_QUOTE_ON_UNDERLYING"
        - "NO_QUOTE_ON_STRUCTURE"
        - "NOT_ENOUGH_TIME"
        - "SIZE_TOO_LOW"
        - "SIZE_TOO_HIGH"
        - "DOES_NOT_SOLVE"
        - "AUTO_PRICER_ERROR"
        - "TECHNICAL_ERROR"
        - "OTHER"
      rejectionComment:
        type: "string"
      quoteValidUntil:
        type: "string"
        format: "date-time"
      pricerRequestId:
        type: "integer"
        format: "int64"
      creationUserId:
        type: "string"
      creationUserFullName:
        type: "string"
  QuoteProviderDataDto:
    type: "object"
    properties:
      quote:
        $ref: "#/definitions/QuoteData"
      config:
        $ref: "#/definitions/WebConfigurationElement"
      actions:
        type: "array"
        items:
          $ref: "#/definitions/QuoteAction"
  RateNoteDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
  RequesterAggregatedRfqDto:
    type: "object"
    properties:
      rfq:
        $ref: "#/definitions/RfqDto"
      acceptedProvider:
        $ref: "#/definitions/ProviderDto"
      acceptedQuote:
        $ref: "#/definitions/QuoteDto"
      lastReceivedQuotes:
        type: "array"
        items:
          $ref: "#/definitions/QuoteProviderDataDto"
      notionalIncreases:
        type: "array"
        items:
          $ref: "#/definitions/NotionalIncreaseExtDto"
      originalNotional:
        type: "number"
      totalNotional:
        type: "number"
      originalFee:
        type: "number"
      averageFee:
        type: "number"
      rfqOrders:
        type: "array"
        items:
          $ref: "#/definitions/RfqRequesterOrderDto"
      terms:
        $ref: "#/definitions/TermsDto"
      variations:
        type: "array"
        items:
          $ref: "#/definitions/RfqVariationDto"
      adjustments:
        type: "array"
        items:
          $ref: "#/definitions/RfqAdjustmentDto"
      quote:
        $ref: "#/definitions/QuoteDto"
  ReverseConvertibleDto:
    allOf:
    - $ref: "#/definitions/RfqDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        elaborationStatus:
          type: "string"
          enum:
          - "PENDING"
          - "SUCCEEDED"
          - "INVALIDATED"
          - "FAILED"
        strikeRate:
          type: "number"
  RfqAdjustmentDto:
    type: "object"
    properties:
      adjustment:
        $ref: "#/definitions/ShortRfqDto"
      config:
        $ref: "#/definitions/WebConfigurationElement"
      actions:
        type: "array"
        items:
          $ref: "#/definitions/WebAction"
  RfqDocumentRequisiteRowDto:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "KID"
        - "TERMSHEET"
        - "BIB"
        - "TARGET_MARKET_DOCUMENT"
      isEnglishLanguage:
        type: "boolean"
      isGermanLanguage:
        type: "boolean"
      isFrenchLanguage:
        type: "boolean"
      isSpanishLanguage:
        type: "boolean"
      isRussianLanguage:
        type: "boolean"
      isItalianLanguage:
        type: "boolean"
  RfqDto:
    type: "object"
    required:
    - "connectedProviderTenantIds"
    - "documentRequisites"
    - "nonConnectedProviderTenantIds"
    - "offerings"
    - "productType"
    - "status"
    - "ukRelevant"
    discriminator: "productType"
    properties:
      acceptedProviderTenantId:
        type: "integer"
        format: "int64"
      adjustmentParentId:
        type: "string"
        format: "uuid"
      connectedProviderTenantIds:
        type: "array"
        uniqueItems: true
        items:
          type: "integer"
          format: "int64"
      creationDateTime:
        type: "string"
        format: "date-time"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      deadline:
        type: "string"
        format: "date-time"
      denomination:
        type: "number"
      distributionType:
        type: "string"
        enum:
        - "PRIVATE_PLACEMENT"
        - "SUBSCRIPTION"
      documentRequisites:
        type: "array"
        items:
          $ref: "#/definitions/RfqDocumentRequisiteRowDto"
      executionDateTime:
        type: "string"
        format: "date-time"
      fees:
        type: "array"
        items:
          $ref: "#/definitions/FeeDto"
      finalFixingDate:
        type: "string"
        format: "date"
      finalRepaymentDate:
        type: "string"
        format: "date"
      fixingType:
        type: "string"
        enum:
        - "CLOSING"
        - "LIVE_STRIKE"
      hasCustomTitle:
        type: "boolean"
      id:
        type: "string"
        format: "uuid"
      initialFixingDate:
        type: "string"
        format: "date"
      initiative:
        type: "string"
      internalAssetClass:
        type: "string"
        enum:
        - "EQUITY"
        - "FIXED_INCOME"
        - "FX"
        - "COMMODITY"
        - "FUNDS"
      internalRmBusinessArea:
        type: "string"
        enum:
        - "APAC_ZH"
        - "IWM_BRAZIL"
        - "IWM_EMERGING_EUROPE"
        - "IWM_EUROPE"
        - "IWM_LAT_AM"
        - "IWM_MIDDLE_EAST_AND_AFRICA"
        - "IWM_PBI"
        - "SUB_EAM"
        - "SUB_PREMIUM_CLIENTS"
        - "SUB_WMC"
        - "VARIOUS"
      isAdjustment:
        type: "boolean"
      isVariation:
        type: "boolean"
      issueDate:
        type: "string"
        format: "date"
      issuePriceLevel:
        type: "number"
      issuePriceRate:
        type: "number"
      masterId:
        type: "string"
      nonConnectedProviderTenantIds:
        type: "array"
        uniqueItems: true
        items:
          type: "integer"
          format: "int64"
      notional:
        type: "number"
      offerings:
        type: "array"
        items:
          type: "string"
      parentId:
        type: "string"
        format: "uuid"
      productType:
        type: "string"
        enum:
        - "AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_BONUS_CERTIFICATE"
        - "BONUS_CERTIFICATE"
        - "BRC"
        - "ABRC"
        - "CBRC"
        - "RC"
        - "ARC"
        - "CRC"
        - "PRO_NOTE"
        - "CALLABLE_PRO_NOTE"
        - "AUTOCALLABLE_PRO_NOTE"
        - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
        - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
        - "GENERIC_PRODUCT"
        - "RATE_NOTE"
      providerNote:
        type: "string"
      providerTenantIds:
        type: "array"
        uniqueItems: true
        items:
          type: "integer"
          format: "int64"
      quanto:
        type: "boolean"
      quotationType:
        type: "string"
        enum:
        - "UNIT_PRICE"
        - "PERCENTAGE_PRICE"
      requestDateTime:
        type: "string"
        format: "date-time"
      requestType:
        type: "string"
        enum:
        - "INDICATION"
        - "COMPETITION"
      requesterFirstName:
        type: "string"
      requesterLastName:
        type: "string"
      requesterName:
        type: "string"
        readOnly: true
      requireIndicativeDocuments:
        type: "boolean"
      rmFullName:
        type: "string"
      settlement:
        type: "string"
        enum:
        - "CASH"
        - "PHYSICAL"
        - "CASH_PHYSICAL"
      settlementLag:
        type: "string"
      solvingFor:
        type: "string"
        enum:
        - "BARRIER"
        - "BARRIER_LOWER"
        - "BARRIER_UPPER"
        - "BONUS_LEVEL"
        - "CAP"
        - "COUPON"
        - "COUPON_BARRIER"
        - "COUPON_SPREAD"
        - "COUPON_CAP"
        - "COUPON_FLOOR"
        - "EARLY_REDEMPTION_BARRIER_RATE"
        - "EARLY_REDEMPTION_EXIT_RATE"
        - "FEE_SGC_GROSS"
        - "FEE_CO_STRUCTURING"
        - "ISSUE_PRICE_LEVEL"
        - "ISSUE_PRICE_RATE"
        - "PARTICIPATION"
        - "PROTECTION"
        - "REBATE"
        - "STRIKE"
        - "TENOR"
        - "OTHER"
      sspaCode:
        type: "integer"
        format: "int32"
      status:
        type: "string"
        enum:
        - "DRAFT"
        - "SUBMITTED"
        - "SENT"
        - "AMENDED"
        - "CONVERTED"
        - "SEND_FAILED"
        - "IN_PROGRESS"
        - "RECEIVED_ALL"
        - "COMPETITION_CLOSED"
        - "LAST_LOOK_REQUEST_SENT"
        - "LAST_LOOK_RESPONSE_RECEIVED"
        - "PROVIDER_ACCEPTED"
        - "PROCESSED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "REJECTED"
        - "ADJUSTMENT_SENT"
        - "ADJUSTMENT_QUOTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "QUOTE_REJECTED"
        - "EXECUTED"
        - "CANCELLED"
        - "PRE_CANCELLED"
        - "FINAL_TERMS_RECEIVED"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
      submissionDateTime:
        type: "string"
        format: "date-time"
      submitterFirstName:
        type: "string"
      submitterLastName:
        type: "string"
      submitterName:
        type: "string"
        readOnly: true
      subscriptionEndDate:
        type: "string"
        format: "date"
      subscriptionStartDate:
        type: "string"
        format: "date"
      sunshineId:
        type: "integer"
        format: "int32"
      tenantId:
        type: "integer"
        format: "int64"
      tenor:
        type: "string"
      title:
        type: "string"
      ukRelevant:
        type: "array"
        items:
          type: "string"
      underlyingExposure:
        type: "string"
        enum:
        - "BEST_OF"
        - "WORST_OF"
        - "SINGLE_UNDERLYING"
        - "BASKET"
        - "BASKET_OR_WORST_OF"
        - "NO_UNDERLYING"
      underlyings:
        type: "array"
        items:
          $ref: "#/definitions/RfqUnderlyingDto"
      userId:
        type: "string"
      variationParentId:
        type: "string"
        format: "uuid"
      version:
        type: "integer"
        format: "int32"
  RfqRequesterOrderDto:
    type: "object"
    required:
    - "comment"
    - "createTime"
    - "currency"
    - "id"
    - "notional"
    - "rfqId"
    - "tenantType"
    - "updateTime"
    properties:
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      rfqId:
        type: "string"
        format: "uuid"
      createTime:
        type: "string"
        format: "date-time"
      updateTime:
        type: "string"
        format: "date-time"
      comment:
        type: "string"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      notional:
        type: "number"
  RfqUnderlyingDto:
    type: "object"
    required:
    - "bbgTicker"
    - "type"
    properties:
      bbgTicker:
        type: "string"
      type:
        type: "string"
        enum:
        - "EQUITY"
        - "INDEX"
        - "CMDTY"
        - "CORP"
        - "CRNCY"
        - "GOVT"
        - "PFD"
        - "DI"
        - "OTHER"
      exchangeCode:
        type: "string"
      instrumentClass:
        type: "string"
      countryCode:
        type: "string"
        enum:
        - "EU"
        - "QM"
        - "QZ"
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      description:
        type: "string"
      shortName:
        type: "string"
      isin:
        type: "string"
      region:
        type: "string"
      ric:
        type: "string"
      tacs:
        type: "string"
      securityType:
        type: "string"
      valor:
        type: "string"
      commodityIndex:
        type: "string"
      emergingMarket:
        type: "string"
      subClass:
        type: "string"
      industry:
        type: "string"
      indexReturnTypeId:
        type: "string"
      weight:
        type: "number"
      initialFixingDate:
        type: "string"
        format: "date"
  RfqVariationDto:
    type: "object"
    properties:
      variation:
        $ref: "#/definitions/ShortRfqDto"
      config:
        $ref: "#/definitions/WebConfigurationElement"
      actions:
        type: "array"
        items:
          $ref: "#/definitions/Action"
  SellingRestrictionDto:
    type: "object"
    properties:
      areaCode:
        type: "string"
        enum:
        - "EU"
        - "QM"
        - "QZ"
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
      subjectType:
        type: "string"
        enum:
        - "ALL_INVESTOR_IN_COUNTRY"
        - "RESIDENT_INVESTOR"
        - "CITIZEN_INVESTOR"
        - "QUALIFIED_INVESTOR"
        - "FIDLEG_PROFESSIONAL"
        - "MIFID_PROFESSIONAL"
        - "MIFID_ELIGIBLE_COUNTERPARTY"
        - "CORPORATE_INVESTOR"
        - "TRUSTEE_INVESTOR"
        - "NON_QUALIFIED_INVESTOR"
        - "US_PERSON"
  ShortRfqDto:
    type: "object"
    required:
    - "notional"
    - "originalNotional"
    - "rfqId"
    - "sellingRestrictions"
    - "solvingFor"
    - "status"
    - "title"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      parentId:
        type: "string"
        format: "uuid"
      adjustmentParentId:
        type: "string"
        format: "uuid"
      isAdjustment:
        type: "boolean"
      variationParentId:
        type: "string"
        format: "uuid"
      isVariation:
        type: "boolean"
      acceptedProviderTenantId:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      solvingFor:
        type: "string"
        enum:
        - "BARRIER"
        - "BARRIER_LOWER"
        - "BARRIER_UPPER"
        - "BONUS_LEVEL"
        - "CAP"
        - "COUPON"
        - "COUPON_BARRIER"
        - "COUPON_SPREAD"
        - "COUPON_CAP"
        - "COUPON_FLOOR"
        - "EARLY_REDEMPTION_BARRIER_RATE"
        - "EARLY_REDEMPTION_EXIT_RATE"
        - "FEE_SGC_GROSS"
        - "FEE_CO_STRUCTURING"
        - "ISSUE_PRICE_LEVEL"
        - "ISSUE_PRICE_RATE"
        - "PARTICIPATION"
        - "PROTECTION"
        - "REBATE"
        - "STRIKE"
        - "TENOR"
        - "OTHER"
      status:
        type: "string"
        enum:
        - "DRAFT"
        - "SUBMITTED"
        - "SENT"
        - "AMENDED"
        - "CONVERTED"
        - "SEND_FAILED"
        - "IN_PROGRESS"
        - "RECEIVED_ALL"
        - "COMPETITION_CLOSED"
        - "LAST_LOOK_REQUEST_SENT"
        - "LAST_LOOK_RESPONSE_RECEIVED"
        - "PROVIDER_ACCEPTED"
        - "PROCESSED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "REJECTED"
        - "ADJUSTMENT_SENT"
        - "ADJUSTMENT_QUOTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "QUOTE_REJECTED"
        - "EXECUTED"
        - "CANCELLED"
        - "PRE_CANCELLED"
        - "FINAL_TERMS_RECEIVED"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
      solutionStatus:
        type: "string"
        enum:
        - "ACCEPTED"
        - "REJECTED"
        - "WAITING"
      quoteId:
        type: "string"
        format: "uuid"
      quote:
        type: "string"
      quoteRejectionReason:
        type: "string"
        enum:
        - "NO_QUOTE_ON_UNDERLYING"
        - "NO_QUOTE_ON_STRUCTURE"
        - "NOT_ENOUGH_TIME"
        - "SIZE_TOO_LOW"
        - "SIZE_TOO_HIGH"
        - "DOES_NOT_SOLVE"
        - "AUTO_PRICER_ERROR"
        - "TECHNICAL_ERROR"
        - "OTHER"
      quoteRejectionComment:
        type: "string"
      notional:
        type: "number"
      originalNotional:
        type: "number"
      quoteCreationDateTime:
        type: "string"
        format: "date-time"
      feeType:
        type: "string"
        enum:
        - "CO_STRUCTURING_FEE"
        - "SGC_NET"
        - "SGC_GROSS"
        - "SUBSCRIPTION_FEE"
      fee:
        type: "number"
      originalFee:
        type: "number"
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/SellingRestrictionDto"
      quoteValidUntil:
        type: "string"
        format: "date-time"
  Size:
    type: "object"
    properties:
      min:
        type: "integer"
        format: "int32"
      max:
        type: "integer"
        format: "int32"
  TermsAutocallEventDto:
    type: "object"
    required:
    - "barrier"
    - "observationDate"
    - "redemptionDate"
    - "redemptionPrice"
    properties:
      barrier:
        type: "number"
      observationDate:
        type: "string"
        format: "date"
      redemptionDate:
        type: "string"
        format: "date"
      redemptionPrice:
        type: "number"
  TermsCallEventDto:
    type: "object"
    required:
    - "observationDate"
    - "redemptionDate"
    - "redemptionPrice"
    properties:
      observationDate:
        type: "string"
        format: "date"
      redemptionDate:
        type: "string"
        format: "date"
      redemptionPrice:
        type: "number"
  TermsDto:
    type: "object"
    required:
    - "ackStatus"
    - "createTime"
    - "id"
    - "providerTenantId"
    - "requesterTenantId"
    - "rfqId"
    - "status"
    - "tenantType"
    - "uuid"
    properties:
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      isin:
        type: "string"
      valor:
        type: "string"
      ibtCode:
        type: "integer"
        format: "int32"
      ric:
        type: "string"
      sspaCode:
        type: "integer"
        format: "int32"
      bondFloor:
        type: "number"
      interestRate:
        type: "number"
      parties:
        type: "array"
        items:
          $ref: "#/definitions/TermsPartyDto"
      underlyings:
        type: "array"
        items:
          $ref: "#/definitions/TermsUnderlyingDto"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/TermsSellingRestrictionDto"
      fixedCoupons:
        type: "array"
        items:
          $ref: "#/definitions/TermsFixedCouponDto"
      floatingCoupons:
        type: "array"
        items:
          $ref: "#/definitions/TermsFloatingCouponDto"
      callEvents:
        type: "array"
        items:
          $ref: "#/definitions/TermsCallEventDto"
      autocallEvents:
        type: "array"
        items:
          $ref: "#/definitions/TermsAutocallEventDto"
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      uuid:
        type: "string"
        format: "uuid"
      rfqId:
        type: "string"
        format: "uuid"
      requesterTenantId:
        type: "integer"
        format: "int64"
      providerTenantId:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "PENDING"
        - "SUBMITTED"
        - "ACCEPTED"
        - "REJECTED"
        - "FAILED"
      createTime:
        type: "string"
        format: "date-time"
      submitTime:
        type: "string"
        format: "date-time"
      acceptTime:
        type: "string"
        format: "date-time"
      rejectTime:
        type: "string"
        format: "date-time"
      ackStatus:
        type: "string"
        enum:
        - "NONE"
        - "DRAFTED_MESSAGE"
        - "SENT_MESSAGE"
        - "RECEIVED_MESSAGE"
        - "PROCESSED_MESSAGE"
        - "FAILED_MESSAGE"
        - "FAILED_ACK"
        - "FAILED_NACK"
        - "DRAFTED_ACK"
        - "DRAFTED_NACK"
        - "SENT_ACK"
        - "SENT_NACK"
        - "RECEIVED_NACK"
        - "RECEIVED_ACK"
      lastQueueMessageId:
        type: "integer"
        format: "int64"
      lastEventId:
        type: "integer"
        format: "int64"
      isFinalVersion:
        type: "boolean"
  TermsFixedCouponDto:
    type: "object"
    required:
    - "amountPct"
    - "amountType"
    - "currency"
    - "paymentDate"
    properties:
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      amountPct:
        type: "number"
      amountType:
        type: "string"
        enum:
        - "PCT_OF_ISSUE_PRICE"
        - "PCT_OF_NAV"
        - "PCT_OF_NOTIONAL"
        - "BULLET"
        - "P_A"
      paymentDate:
        type: "string"
        format: "date"
  TermsFloatingCouponDto:
    type: "object"
    required:
    - "accrualBeginDate"
    - "accrualEndDate"
    - "currency"
    - "fixingDate"
    - "paymentDate"
    - "referenceRate"
    - "referenceResetDate"
    - "spread"
    - "spreadBps"
    properties:
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      referenceRate:
        type: "string"
      spread:
        type: "number"
      spreadBps:
        type: "integer"
        format: "int32"
      floorPct:
        type: "number"
      capPct:
        type: "number"
      referenceResetDate:
        type: "string"
        format: "date"
      fixingDate:
        type: "string"
        format: "date"
      accrualBeginDate:
        type: "string"
        format: "date"
      accrualEndDate:
        type: "string"
        format: "date"
      paymentDate:
        type: "string"
        format: "date"
  TermsMifidCostsDto:
    type: "object"
    properties:
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
  TermsPartyDto:
    type: "object"
    required:
    - "partyType"
    properties:
      id:
        type: "integer"
        format: "int64"
      partyType:
        type: "string"
        enum:
        - "CALCULATION_AGENT"
        - "ISSUER"
        - "MARKET_MAKER"
        - "CLEARING_AND_SETTLEMENT"
        - "LEAD_MANAGER"
        - "CO_LEAD_MANAGER"
        - "MAIN_PAYING_AGENT"
        - "SUB_PAYING_AGENT"
        - "GUARANTOR"
        - "TRUSTEE"
        - "CUSTODY"
        - "LISTING_AUTHORITY"
        - "COLLATERAL_PROVIDER"
      areaCode:
        type: "string"
        enum:
        - "EU"
        - "QM"
        - "QZ"
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
      name:
        type: "string"
      location:
        type: "string"
  TermsProductDto:
    type: "object"
    properties:
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      isin:
        type: "string"
      valor:
        type: "string"
      ibtCode:
        type: "integer"
        format: "int32"
      ric:
        type: "string"
      sspaCode:
        type: "integer"
        format: "int32"
      bondFloor:
        type: "number"
      interestRate:
        type: "number"
      parties:
        type: "array"
        items:
          $ref: "#/definitions/TermsPartyDto"
      underlyings:
        type: "array"
        items:
          $ref: "#/definitions/TermsUnderlyingDto"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/TermsSellingRestrictionDto"
      fixedCoupons:
        type: "array"
        items:
          $ref: "#/definitions/TermsFixedCouponDto"
      floatingCoupons:
        type: "array"
        items:
          $ref: "#/definitions/TermsFloatingCouponDto"
      callEvents:
        type: "array"
        items:
          $ref: "#/definitions/TermsCallEventDto"
      autocallEvents:
        type: "array"
        items:
          $ref: "#/definitions/TermsAutocallEventDto"
  TermsSellingRestrictionDto:
    type: "object"
    properties:
      areaCode:
        type: "string"
        enum:
        - "EU"
        - "QM"
        - "QZ"
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
      subjectType:
        type: "string"
        enum:
        - "ALL_INVESTOR_IN_COUNTRY"
        - "RESIDENT_INVESTOR"
        - "CITIZEN_INVESTOR"
        - "QUALIFIED_INVESTOR"
        - "FIDLEG_PROFESSIONAL"
        - "MIFID_PROFESSIONAL"
        - "MIFID_ELIGIBLE_COUNTERPARTY"
        - "CORPORATE_INVESTOR"
        - "TRUSTEE_INVESTOR"
        - "NON_QUALIFIED_INVESTOR"
        - "US_PERSON"
  TermsUnderlyingDto:
    type: "object"
    required:
    - "bbgTicker"
    - "type"
    properties:
      bbgTicker:
        type: "string"
      type:
        type: "string"
        enum:
        - "EQUITY"
        - "INDEX"
        - "CMDTY"
        - "CORP"
        - "CRNCY"
        - "GOVT"
        - "PFD"
        - "DI"
        - "OTHER"
      exchangeCode:
        type: "string"
      instrumentClass:
        type: "string"
      countryCode:
        type: "string"
        enum:
        - "EU"
        - "QM"
        - "QZ"
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      description:
        type: "string"
      shortName:
        type: "string"
      isin:
        type: "string"
      region:
        type: "string"
      ric:
        type: "string"
      tacs:
        type: "string"
      securityType:
        type: "string"
      valor:
        type: "string"
      commodityIndex:
        type: "string"
      emergingMarket:
        type: "string"
      subClass:
        type: "string"
      industry:
        type: "string"
      indexReturnTypeId:
        type: "string"
      weight:
        type: "number"
      initialFixingDate:
        type: "string"
        format: "date"
      initialFixingLevel:
        type: "number"
      strikeLevel:
        type: "number"
      barrierLevel:
        type: "number"
      barrierLower:
        type: "number"
      barrierUpper:
        type: "number"
      couponBarrier:
        type: "number"
      coverRatio:
        type: "number"
  Validation:
    type: "object"
    properties:
      disabled:
        type: "boolean"
      required:
        type: "boolean"
      notEmpty:
        type: "boolean"
      notBlank:
        type: "boolean"
      pattern:
        type: "string"
      positive:
        type: "boolean"
      negative:
        type: "boolean"
      max:
        type: "number"
      min:
        type: "number"
      size:
        $ref: "#/definitions/Size"
      length:
        $ref: "#/definitions/Length"
      digits:
        $ref: "#/definitions/Digits"
      future:
        type: "boolean"
      futureOrPresent:
        type: "boolean"
      pastOrPresent:
        type: "boolean"
      requiredChildren:
        type: "array"
        items:
          type: "object"
      uniqueKeys:
        type: "array"
        items:
          type: "string"
  WebAction:
    type: "object"
    required:
    - "key"
    - "label"
    - "type"
    properties:
      type:
        type: "string"
        readOnly: true
        enum:
        - "QUOTE_ACTION"
        - "WEB_ACTION"
      key:
        type: "string"
        readOnly: true
      label:
        type: "string"
        readOnly: true
  WebConfigurationElement:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        readOnly: true
        enum:
        - "AUTOCOMPLETE"
        - "BOOL_OPTION"
        - "CHECKBOX"
        - "CHECKBOX_GROUP"
        - "CHECKBOX_GROUP_GRID"
        - "DATA_LIST"
        - "DATE"
        - "DATE_RANGE"
        - "DATETIME"
        - "DATETIME_MULTIPLE_SELECTION"
        - "DATETIME_RANGE"
        - "MULTIPLE_SELECTION"
        - "NUMBER_RANGE"
        - "NUMBER_CODE"
        - "OPTION"
        - "PRECISION_NUMBER_SIX"
        - "PRECISION_PERCENTAGE_SIX"
        - "RADIO"
        - "SECTION"
        - "TABLE"
        - "TABLE_ROW"
        - "TEXT"
        - "TEXTAREA"
        - "RICH_TEXTAREA"
        - "TYPE_QUERY_SEARCH"
      key:
        type: "string"
      readOnly:
        type: "boolean"
      label:
        type: "string"
      help:
        type: "string"
      warning:
        type: "string"
      autocompleteEndpoint:
        type: "string"
      validations:
        $ref: "#/definitions/Validation"
      options:
        type: "array"
        items:
          $ref: "#/definitions/Option"
      elements:
        type: "array"
        items:
          $ref: "#/definitions/WebConfigurationElement"
      dataProvider:
        $ref: "#/definitions/DataProvider"
      decimals:
        type: "integer"
        format: "int32"
      triggerValidation:
        type: "boolean"
  ElaborationDto:
    type: "object"
    required:
    - "createTime"
    - "rfqId"
    - "status"
    properties:
      id:
        type: "integer"
        format: "int64"
      rfqId:
        type: "string"
        format: "uuid"
      status:
        type: "string"
        enum:
        - "CREATED"
        - "SENT"
        - "SUCCEEDED"
        - "FAILED"
      requestBody:
        type: "string"
      responseBody:
        type: "string"
      createTime:
        type: "string"
        format: "date-time"
      requestType:
        type: "string"
        format: "date-time"
      responseTime:
        type: "string"
        format: "date-time"
      businessError:
        type: "string"
      technicalError:
        type: "string"
      version:
        type: "integer"
        format: "int32"
  RequestElaborationDto:
    type: "object"
    required:
    - "rfq"
    properties:
      rfq:
        $ref: "#/definitions/RfqDto"
  BrokerMessagePayload:
    type: "object"
    discriminator: "type"
    properties:
      correlationId:
        type: "string"
  CsFixErrorDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        reason:
          type: "string"
  CsRfqCompetitionFeedbackDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        quoteId:
          type: "string"
        securityDescription:
          type: "string"
  CsRfqDatesRejectionDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        reason:
          type: "string"
          enum:
          - "UNKNOWN_SYMBOL"
          - "EXCHANGE_CLOSED"
          - "QUOTE_REQUEST_EXCEEDS_LIMIT"
          - "TOO_LATE_TO_ENTER"
          - "INVALID_PRICE"
          - "NOT_AUTHORIZED"
          - "NO_MATCH"
          - "NO_MARKET"
          - "NO_INVENTORY"
          - "PASS"
          - "OTHER"
          - "UNKNOWN_REASON"
  CsRfqDatesRequestDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        securityDescription:
          type: "string"
  CsRfqDatesResponseDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        securityDescription:
          type: "string"
  CsRfqQuoteRejectionDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        quoteId:
          type: "string"
        reason:
          type: "string"
          enum:
          - "UNKNOWN_SYMBOL"
          - "EXCHANGE_CLOSED"
          - "QUOTE_REQUEST_EXCEEDS_LIMIT"
          - "TOO_LATE_TO_ENTER"
          - "INVALID_PRICE"
          - "NOT_AUTHORIZED"
          - "NO_MATCH"
          - "NO_MARKET"
          - "NO_INVENTORY"
          - "PASS"
          - "OTHER"
          - "UNKNOWN_REASON"
        isLastLook:
          type: "boolean"
  CsRfqQuoteRequestDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        securityDescription:
          type: "string"
        expiryTime:
          type: "string"
          format: "date-time"
        validUntilTime:
          type: "string"
          format: "date-time"
        isLastLook:
          type: "boolean"
        side:
          type: "string"
          enum:
          - "BUY"
          - "SELL"
  CsRfqQuoteRequestResponseDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        quoteId:
          type: "string"
        securityDescription:
          type: "string"
        validUntilTime:
          type: "string"
          format: "date-time"
        isLastLook:
          type: "boolean"
        side:
          type: "string"
          enum:
          - "BUY"
          - "SELL"
  CsRfqQuoteResponseDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        quoteId:
          type: "string"
        responseType:
          type: "string"
          enum:
          - "PASS"
          - "UNKNOWN_TYPE"
        isLastLook:
          type: "boolean"
  FixAckResponseDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        success:
          type: "boolean"
  GsFixErrorDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        reason:
          type: "string"
  GsRfqCompetitionFeedbackDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        quoteId:
          type: "string"
        securityDescription:
          type: "string"
  GsRfqQuoteRejectionDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        quoteId:
          type: "string"
        reason:
          type: "string"
          enum:
          - "UNKNOWN_SYMBOL"
          - "EXCHANGE_CLOSED"
          - "QUOTE_REQUEST_EXCEEDS_LIMIT"
          - "TOO_LATE_TO_ENTER"
          - "INVALID_PRICE"
          - "NOT_AUTHORIZED"
          - "NO_MATCH"
          - "NO_MARKET"
          - "NO_INVENTORY"
          - "PASS"
          - "OTHER"
          - "UNKNOWN_REASON"
  GsRfqQuoteRequestDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        securityDescription:
          type: "string"
        expiryTime:
          type: "string"
          format: "date-time"
        side:
          type: "string"
          enum:
          - "BUY"
          - "SELL"
  GsRfqQuoteRequestResponseDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        quoteId:
          type: "string"
        securityDescription:
          type: "string"
        validUntilTime:
          type: "string"
          format: "date-time"
        side:
          type: "string"
          enum:
          - "BUY"
          - "SELL"
  SgFixErrorDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        reason:
          type: "string"
  SgRfqCompetitionFeedbackDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        masterId:
          type: "string"
        quoteId:
          type: "string"
        securityDescription:
          type: "string"
  SgRfqQuoteRejectionDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        reason:
          type: "string"
          enum:
          - "UNKNOWN_SYMBOL"
          - "EXCHANGE_CLOSED"
          - "QUOTE_REQUEST_EXCEEDS_LIMIT"
          - "TOO_LATE_TO_ENTER"
          - "INVALID_PRICE"
          - "NOT_AUTHORIZED"
          - "NO_MATCH"
          - "NO_MARKET"
          - "NO_INVENTORY"
          - "PASS"
          - "OTHER"
          - "UNKNOWN_REASON"
        description:
          type: "string"
  SgRfqQuoteRequestDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        securityDescription:
          type: "string"
        encodedSecurityDescription:
          type: "string"
        expiryTime:
          type: "string"
          format: "date-time"
        side:
          type: "string"
          enum:
          - "BUY"
          - "SELL"
  SgRfqQuoteRequestResponseDto:
    allOf:
    - $ref: "#/definitions/BrokerMessagePayload"
    - type: "object"
      properties:
        securityDescription:
          type: "string"
        side:
          type: "string"
          enum:
          - "BUY"
          - "SELL"
  Date:
    type: "object"
    properties:
      ScheduleType:
        type: "string"
        enum:
        - "STANDARD"
        - "CUSTOM"
  Fee:
    type: "object"
    properties:
      FeeType:
        type: "string"
        enum:
        - "CO_STRUCTURING_FEE_UPFRONT"
        - "SGC_GROSS_FEE"
        - "SGC_NET_FEE"
        - "SUBSCRIPTION_FEE"
        - "SALES_FEE"
        - "PLACEMENT_FEE"
        - "ENTRY_COSTS"
        - "DEFERRED_ISSUING_FEE"
        - "DEFERRED_PLACEMENT_FEE"
        - "DEPOSIT_SPREAD"
        - "HOLDING_FEE"
        - "HOLDING_FEE_LEAD"
        - "INDICATIVE_PLACEMENT_FEE"
        - "ISSUING_FEE"
        - "MARKET_MAKING_FEE"
        - "OPTION_SPREAD"
        - "CO_STRUCTURING_FEE_FUTURE"
        - "SPREAD"
      ClientRemunerationMode:
        type: "string"
        enum:
        - "UPFRONT"
        - "REOFFER"
      FeeBaseType:
        type: "string"
        enum:
        - "PCT_OF_ISSUE_PRICE"
        - "PCT_OF_NAV"
        - "PCT_OF_NOTIONAL"
        - "SPECIAL"
        - "BULLET"
        - "P_A"
      FeeRatePct:
        type: "number"
      AnnualFeeRatePct:
        type: "number"
      FeePaymentCurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      FeeStatus:
        type: "string"
        enum:
        - "FIXED"
        - "INDICATIVE"
        - "CLAIMING"
        - "RECEIVED"
        - "DISTRIBUTED"
      FeePaymentDate:
        type: "string"
        format: "date-time"
      IncludedInIssuePriceFlag:
        type: "boolean"
  Fees:
    type: "object"
    properties:
      PlacementFee:
        $ref: "#/definitions/Fee"
      SGCGrossFee:
        $ref: "#/definitions/Fee"
      SGCNetFee:
        $ref: "#/definitions/Fee"
  FimbleRequest:
    type: "object"
    properties:
      RequestRequisites:
        $ref: "#/definitions/RequestRequisites"
      PricingRequisites:
        $ref: "#/definitions/PricingRequisites"
  Investment:
    type: "object"
    properties:
      CollateralId:
        type: "string"
        enum:
        - "CREDIT_SUISSE_TREASURY_NOTE"
      Denomination:
        type: "number"
      IssuePrice:
        type: "number"
      Notional:
        type: "number"
      NotionalType:
        type: "string"
        enum:
        - "AMOUNT"
      NumberOfUnits:
        type: "number"
      PaymentCurrency:
        type: "string"
      Securitisation:
        type: "string"
        enum:
        - "NOTE"
  LastLook:
    type: "object"
    properties:
      CompetitorQuote:
        type: "number"
      miFIDCosts:
        $ref: "#/definitions/MiFidCosts"
  Market:
    type: "object"
    properties:
      PerformanceId:
        type: "string"
      PerformanceType:
        type: "string"
        enum:
        - "SINGLE"
        - "BEST_OF"
        - "WORST_OF"
        - "BASKET"
      SettlementType:
        type: "string"
        enum:
        - "CASH"
        - "PHYSICAL"
  MiFidCosts:
    type: "object"
    properties:
      EntryCost:
        type: "number"
      RecurringCost:
        type: "number"
      ExitCost:
        type: "number"
  Participation:
    type: "object"
    properties:
      PayoffType:
        type: "string"
        enum:
        - "PUT"
        - "DIGITAL_PUT"
  PricingRequisites:
    type: "object"
    properties:
      SchemaName:
        type: "string"
      Version:
        type: "string"
      Quote:
        $ref: "#/definitions/Quote"
      Product:
        $ref: "#/definitions/Product"
      Issuer:
        type: "string"
      User:
        type: "string"
  Product:
    type: "object"
    properties:
      ProductInformation:
        $ref: "#/definitions/ProductInformation"
      ProductIssuer:
        $ref: "#/definitions/ProductIssuer"
      ProductParties:
        $ref: "#/definitions/ProductParties"
      ProductContacts:
        $ref: "#/definitions/ProductContacts"
      MiFIDCosts:
        $ref: "#/definitions/MiFIDCosts"
      ProductTax:
        $ref: "#/definitions/ProductTax"
      ProductDistribution:
        $ref: "#/definitions/ProductDistribution"
      ProductDocumentation:
        $ref: "#/definitions/ProductDocumentation"
      ProductLegalInformation:
        $ref: "#/definitions/ProductLegalInformation"
  Quote:
    type: "object"
    properties:
      Fees:
        $ref: "#/definitions/Fees"
      SolveFor:
        $ref: "#/definitions/SolveFor"
      LastLook:
        $ref: "#/definitions/LastLook"
      ReOfferPrice:
        type: "number"
      IssuePrice:
        type: "number"
      CSIBQuote:
        type: "number"
      MiFIDCosts:
        $ref: "#/definitions/MiFidCosts"
      SellingRestrictions:
        type: "string"
  Redemption:
    type: "object"
    properties:
      RedemptionType:
        type: "string"
        enum:
        - "FIXED_MATURITY"
        - "AUTO_CALLABLE"
        - "CALLABLE"
  RequestRequisites:
    type: "object"
    properties:
      EISWrapper:
        type: "string"
      Initiatives:
        type: "array"
        items:
          type: "string"
  SolveFor:
    type: "object"
    properties:
      SolveForFields:
        type: "array"
        items:
          type: "string"
      TargetField:
        type: "string"
  Yield:
    type: "object"
    properties:
      CouponCondition:
        type: "string"
        enum:
        - "GUARANTEED"
        - "CONDITIONAL"
      YieldType:
        type: "string"
        enum:
        - "FIXED"
  DateRangeDto:
    type: "object"
    required:
    - "endDate"
    - "startDate"
    properties:
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
  RfqInternalAssetClassDto:
    type: "object"
    required:
    - "assetClass"
    properties:
      assetClass:
        type: "string"
        readOnly: true
        enum:
        - "EQUITY"
        - "FIXED_INCOME"
        - "FX"
        - "COMMODITY"
        - "FUNDS"
  RfqInternalRmFullNameDto:
    type: "object"
    properties:
      rmFullName:
        type: "string"
        readOnly: true
  RfqInternalRmBusinessAreaDto:
    type: "object"
    required:
    - "rmBusinessArea"
    properties:
      rmBusinessArea:
        type: "string"
        readOnly: true
        enum:
        - "APAC_ZH"
        - "IWM_BRAZIL"
        - "IWM_EMERGING_EUROPE"
        - "IWM_EUROPE"
        - "IWM_LAT_AM"
        - "IWM_MIDDLE_EAST_AND_AFRICA"
        - "IWM_PBI"
        - "SUB_EAM"
        - "SUB_PREMIUM_CLIENTS"
        - "SUB_WMC"
        - "VARIOUS"
  RfqInternalOfferingsDto:
    type: "object"
    required:
    - "offerings"
    properties:
      offerings:
        type: "array"
        readOnly: true
        items:
          type: "string"
  CompetitionFeedbackDto:
    type: "object"
    required:
    - "createTime"
    - "providerTenantId"
    - "requesterTenantId"
    - "rfqId"
    - "sentTime"
    - "status"
    - "tenantType"
    - "type"
    - "uuid"
    properties:
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      requesterTenantId:
        type: "integer"
        format: "int64"
      providerTenantId:
        type: "integer"
        format: "int64"
      uuid:
        type: "string"
        format: "uuid"
      rfqId:
        type: "string"
        format: "uuid"
      status:
        type: "string"
        enum:
        - "CREATED"
        - "SENT"
        - "FAILED"
      type:
        type: "string"
        enum:
        - "EXTENDED"
        - "NORMAL"
        - "MINIMAL"
      createTime:
        type: "string"
        format: "date-time"
      sentTime:
        type: "string"
        format: "date-time"
      quotingProvidersCount:
        type: "integer"
        format: "int32"
      position:
        type: "integer"
        format: "int32"
      bestQuote:
        type: "string"
      averageQuote:
        type: "string"
      distanceToWinner:
        type: "string"
  RfqDocumentWebDto:
    type: "object"
    required:
    - "ackStatus"
    - "actions"
    - "createTime"
    - "id"
    - "language"
    - "providerName"
    - "providerTenantId"
    - "requesterName"
    - "requesterTenantId"
    - "rfqId"
    - "status"
    - "tenantType"
    - "type"
    - "uuid"
    properties:
      requesterName:
        type: "string"
      providerName:
        type: "string"
      actions:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "ACCEPT_DOCUMENT"
          - "REJECT_DOCUMENT"
          - "UPLOAD_DOCUMENT"
          - "DOWNLOAD_DOCUMENT"
          - "CANCEL_DOCUMENT"
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      uuid:
        type: "string"
        format: "uuid"
      rfqId:
        type: "string"
        format: "uuid"
      requesterTenantId:
        type: "integer"
        format: "int64"
      providerTenantId:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "KID"
        - "TERMSHEET"
        - "BIB"
        - "TARGET_MARKET_DOCUMENT"
      language:
        type: "string"
        enum:
        - "EN"
        - "DE"
        - "FR"
        - "ES"
        - "RU"
        - "IT"
      isRequested:
        type: "boolean"
      status:
        type: "string"
        enum:
        - "PENDING"
        - "UPLOADED"
        - "ACCEPTED"
        - "REJECTED"
        - "CANCELLED"
        - "EXPORTED"
        - "FAILED"
      fileUuid:
        type: "string"
        format: "uuid"
      fileName:
        type: "string"
      isFinalVersion:
        type: "boolean"
      requesterNote:
        type: "string"
      providerNote:
        type: "string"
      createTime:
        type: "string"
        format: "date-time"
      uploadTime:
        type: "string"
        format: "date-time"
      acceptTime:
        type: "string"
        format: "date-time"
      rejectTime:
        type: "string"
        format: "date-time"
      cancelTime:
        type: "string"
        format: "date-time"
      exportTime:
        type: "string"
        format: "date-time"
      exportId:
        type: "string"
      ackStatus:
        type: "string"
        enum:
        - "NONE"
        - "DRAFTED_MESSAGE"
        - "SENT_MESSAGE"
        - "RECEIVED_MESSAGE"
        - "PROCESSED_MESSAGE"
        - "FAILED_MESSAGE"
        - "FAILED_ACK"
        - "FAILED_NACK"
        - "DRAFTED_ACK"
        - "DRAFTED_NACK"
        - "SENT_ACK"
        - "SENT_NACK"
        - "RECEIVED_NACK"
        - "RECEIVED_ACK"
      lastQueueMessageId:
        type: "integer"
        format: "int64"
      lastEventId:
        type: "integer"
        format: "int64"
      isRead:
        type: "boolean"
  InputPart:
    type: "object"
    properties:
      mediaType:
        $ref: "#/definitions/MediaType"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      bodyAsString:
        type: "string"
      contentTypeFromMessage:
        type: "boolean"
  MediaType:
    type: "object"
    properties:
      type:
        type: "string"
      subtype:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      wildcardType:
        type: "boolean"
      wildcardSubtype:
        type: "boolean"
  MultipartFormDataInput:
    type: "object"
    properties:
      formDataMap:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/InputPart"
      formData:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/InputPart"
      parts:
        type: "array"
        items:
          $ref: "#/definitions/InputPart"
      preamble:
        type: "string"
  FeeTableDto:
    type: "object"
    required:
    - "ackStatuses"
    - "createTime"
    - "fees"
    - "rfqId"
    - "status"
    - "tenantType"
    - "uuid"
    properties:
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      uuid:
        type: "string"
        format: "uuid"
      rfqId:
        type: "string"
        format: "uuid"
      status:
        type: "string"
        enum:
        - "DRAFT"
        - "SUBMITTED"
        - "CANCELLED"
      createTime:
        type: "string"
        format: "date-time"
      submitTime:
        type: "string"
        format: "date-time"
      cancelTime:
        type: "string"
        format: "date-time"
      fees:
        type: "array"
        items:
          $ref: "#/definitions/FeeDto"
      ackStatuses:
        type: "array"
        items:
          type: "string"
          enum:
          - "NONE"
          - "DRAFTED_MESSAGE"
          - "SENT_MESSAGE"
          - "RECEIVED_MESSAGE"
          - "PROCESSED_MESSAGE"
          - "FAILED_MESSAGE"
          - "FAILED_ACK"
          - "FAILED_NACK"
          - "DRAFTED_ACK"
          - "DRAFTED_NACK"
          - "SENT_ACK"
          - "SENT_NACK"
          - "RECEIVED_NACK"
          - "RECEIVED_ACK"
      lastEventId:
        type: "integer"
        format: "int64"
      quoteId:
        type: "string"
        format: "uuid"
      notionalIncreaseId:
        type: "string"
        format: "uuid"
  FeeTableWebDto:
    type: "object"
    required:
    - "config"
    - "errors"
    - "feeTable"
    properties:
      feeTable:
        $ref: "#/definitions/FeeTableDto"
      config:
        $ref: "#/definitions/WebConfigurationElement"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ValidationErrorDto"
  ValidationErrorDto:
    type: "object"
    properties:
      elementName:
        type: "string"
      errorMessage:
        type: "string"
      elementChildId:
        type: "integer"
        format: "int64"
      elementChildField:
        type: "string"
  FeeTableMessageDto:
    type: "object"
    required:
    - "ackStatus"
    - "createTime"
    - "providerTenantId"
    - "requesterTenantId"
    - "rfqId"
    - "tenantType"
    - "uuid"
    properties:
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      uuid:
        type: "string"
        format: "uuid"
      rfqId:
        type: "string"
        format: "uuid"
      requesterTenantId:
        type: "integer"
        format: "int64"
      providerTenantId:
        type: "integer"
        format: "int64"
      createTime:
        type: "string"
        format: "date-time"
      feeTable:
        $ref: "#/definitions/FeeTableDto"
      ackStatus:
        type: "string"
        enum:
        - "NONE"
        - "DRAFTED_MESSAGE"
        - "SENT_MESSAGE"
        - "RECEIVED_MESSAGE"
        - "PROCESSED_MESSAGE"
        - "FAILED_MESSAGE"
        - "FAILED_ACK"
        - "FAILED_NACK"
        - "DRAFTED_ACK"
        - "DRAFTED_NACK"
        - "SENT_ACK"
        - "SENT_NACK"
        - "RECEIVED_NACK"
        - "RECEIVED_ACK"
      lastQueueMessageId:
        type: "integer"
        format: "int64"
  NotionalIncreaseWebDto:
    type: "object"
    required:
    - "ackStatus"
    - "actions"
    - "creationTimestamp"
    - "notional"
    - "notionalIncreaseId"
    - "providerTenantId"
    - "requesterTenantId"
    - "rfqId"
    - "status"
    properties:
      notionalIncreaseId:
        type: "string"
        format: "uuid"
      rfqId:
        type: "string"
        format: "uuid"
      notional:
        type: "number"
      fee:
        type: "number"
      providerTenantId:
        type: "integer"
        format: "int64"
      requesterTenantId:
        type: "integer"
        format: "int64"
      creationTimestamp:
        type: "string"
        format: "date-time"
      executionTimestamp:
        type: "string"
        format: "date-time"
      rejectionTimestamp:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "NEW"
        - "REQUEST_REJECTED"
        - "FEE_SUBMITTED"
        - "FEE_REJECTED"
        - "IN_EXECUTION"
        - "EXECUTED"
        - "SENT"
        - "FAILED"
      actions:
        type: "array"
        items:
          type: "string"
          enum:
          - "SUBMIT_FEE"
          - "REJECT_REQUEST"
          - "REJECT_FEE"
          - "ACCEPT_FEE"
          - "CONFIRM_FEE"
      updateTimestamp:
        type: "string"
        format: "date-time"
      ackStatus:
        type: "string"
        enum:
        - "NONE"
        - "DRAFTED_MESSAGE"
        - "SENT_MESSAGE"
        - "RECEIVED_MESSAGE"
        - "PROCESSED_MESSAGE"
        - "FAILED_MESSAGE"
        - "FAILED_ACK"
        - "FAILED_NACK"
        - "DRAFTED_ACK"
        - "DRAFTED_NACK"
        - "SENT_ACK"
        - "SENT_NACK"
        - "RECEIVED_NACK"
        - "RECEIVED_ACK"
      lastQueueMessageId:
        type: "integer"
        format: "int64"
  NotionalIncreaseChangeStatusWebDto:
    type: "object"
    required:
    - "notionalIncreaseId"
    properties:
      notionalIncreaseId:
        type: "string"
        format: "uuid"
  NotionalIncreaseSubmitFeeWebDto:
    type: "object"
    required:
    - "fee"
    - "notionalIncreaseId"
    properties:
      notionalIncreaseId:
        type: "string"
        format: "uuid"
      fee:
        type: "number"
  Aggregation:
    type: "object"
    required:
    - "averageFee"
    - "requesterTenant"
    - "rfqId"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      totalNotional:
        type: "number"
      averageFee:
        type: "number"
      providerTenant:
        $ref: "#/definitions/Tenant"
      requesterTenant:
        $ref: "#/definitions/Tenant"
  NotionalIncreasesWithAggregationWebDto:
    type: "object"
    required:
    - "aggregation"
    - "notionalIncreases"
    - "rfq"
    properties:
      aggregation:
        $ref: "#/definitions/Aggregation"
      notionalIncreases:
        type: "array"
        items:
          $ref: "#/definitions/NotionalIncreaseWebDto"
      rfq:
        $ref: "#/definitions/Rfq"
  Rfq:
    type: "object"
    required:
    - "creationTimestamp"
    - "currency"
    - "rfqId"
    - "solvingFor"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      notional:
        type: "number"
      fee:
        type: "number"
      creationTimestamp:
        type: "string"
        format: "date-time"
      executionTimestamp:
        type: "string"
        format: "date-time"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      solvingFor:
        type: "string"
        enum:
        - "BARRIER"
        - "BARRIER_LOWER"
        - "BARRIER_UPPER"
        - "BONUS_LEVEL"
        - "CAP"
        - "COUPON"
        - "COUPON_BARRIER"
        - "COUPON_SPREAD"
        - "COUPON_CAP"
        - "COUPON_FLOOR"
        - "EARLY_REDEMPTION_BARRIER_RATE"
        - "EARLY_REDEMPTION_EXIT_RATE"
        - "FEE_SGC_GROSS"
        - "FEE_CO_STRUCTURING"
        - "ISSUE_PRICE_LEVEL"
        - "ISSUE_PRICE_RATE"
        - "PARTICIPATION"
        - "PROTECTION"
        - "REBATE"
        - "STRIKE"
        - "TENOR"
        - "OTHER"
  Tenant:
    type: "object"
    required:
    - "name"
    properties:
      tenantId:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  TermsWebDto:
    type: "object"
    required:
    - "config"
    properties:
      terms:
        $ref: "#/definitions/TermsDto"
      config:
        $ref: "#/definitions/WebConfiguration"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ValidationErrorDto"
  WebConfiguration:
    type: "object"
    properties:
      elements:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/WebConfigurationElement"
      productType:
        type: "string"
        readOnly: true
        enum:
        - "AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_BONUS_CERTIFICATE"
        - "BONUS_CERTIFICATE"
        - "BRC"
        - "ABRC"
        - "CBRC"
        - "RC"
        - "ARC"
        - "CRC"
        - "PRO_NOTE"
        - "CALLABLE_PRO_NOTE"
        - "AUTOCALLABLE_PRO_NOTE"
        - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
        - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
        - "GENERIC_PRODUCT"
        - "RATE_NOTE"
      actions:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/WebAction"
  ConfigProcessorEvent:
    type: "object"
    properties:
      eventType:
        type: "string"
        enum:
        - "CREATE_RFQ"
        - "CREATE_ADJUSTMENT_RFQ"
        - "UPDATE"
        - "ADD_ROW"
        - "SPLIT_ROW"
        - "REMOVE_ROW"
      triggeringFieldName:
        type: "string"
      triggeringFieldValue:
        type: "object"
      elementChildId:
        type: "integer"
        format: "int64"
      elementChildField:
        type: "string"
  SubmitTermsWebDto:
    type: "object"
    required:
    - "id"
    - "rfqId"
    properties:
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      isin:
        type: "string"
      valor:
        type: "string"
      ibtCode:
        type: "integer"
        format: "int32"
      ric:
        type: "string"
      sspaCode:
        type: "integer"
        format: "int32"
      bondFloor:
        type: "number"
      interestRate:
        type: "number"
      parties:
        type: "array"
        items:
          $ref: "#/definitions/TermsPartyDto"
      underlyings:
        type: "array"
        items:
          $ref: "#/definitions/TermsUnderlyingDto"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/TermsSellingRestrictionDto"
      fixedCoupons:
        type: "array"
        items:
          $ref: "#/definitions/TermsFixedCouponDto"
      floatingCoupons:
        type: "array"
        items:
          $ref: "#/definitions/TermsFloatingCouponDto"
      callEvents:
        type: "array"
        items:
          $ref: "#/definitions/TermsCallEventDto"
      autocallEvents:
        type: "array"
        items:
          $ref: "#/definitions/TermsAutocallEventDto"
      id:
        type: "integer"
        format: "int64"
      rfqId:
        type: "string"
        format: "uuid"
      configProcessorEvent:
        $ref: "#/definitions/ConfigProcessorEvent"
      isFinalVersion:
        type: "boolean"
  QueueMessageWebDto:
    type: "object"
    required:
    - "body"
    - "correlationId"
    - "createdTimestamp"
    - "direction"
    - "id"
    - "receiverTenantId"
    - "senderTenantId"
    - "status"
    - "subject"
    - "type"
    - "updatedTimestamp"
    properties:
      id:
        type: "integer"
        format: "int64"
      direction:
        type: "string"
        enum:
        - "IN"
        - "OUT"
      type:
        type: "string"
        enum:
        - "MESSAGE"
        - "ACK"
        - "NACK"
      correlationId:
        type: "string"
        format: "uuid"
      senderTenantId:
        type: "integer"
        format: "int64"
      receiverTenantId:
        type: "integer"
        format: "int64"
      rfqId:
        type: "string"
        format: "uuid"
      quoteId:
        type: "string"
        format: "uuid"
      notionalIncreaseId:
        type: "string"
        format: "uuid"
      documentUuid:
        type: "string"
        format: "uuid"
      termsUuid:
        type: "string"
        format: "uuid"
      feeTableMessageUuid:
        type: "string"
        format: "uuid"
      subject:
        type: "string"
        enum:
        - "REQUESTER_CREATES_NOTIONAL_INCREASE"
        - "PROVIDER_SUBMITS_NOTIONAL_INCREASE_FEE"
        - "PROVIDER_REJECTS_NOTIONAL_INCREASE"
        - "REQUESTER_REJECTS_NOTIONAL_INCREASE_FEE"
        - "REQUESTER_ACCEPTS_NOTIONAL_INCREASE_FEE"
        - "PROVIDER_CONFIRMS_NOTIONAL_INCREASE_FEE"
        - "REQUESTER_REQUESTS_DOCUMENT"
        - "PROVIDER_UPLOADS_DOCUMENT"
        - "REQUESTER_ACCEPTS_DOCUMENT"
        - "REQUESTER_REJECTS_DOCUMENT"
        - "REQUESTER_CANCELS_DOCUMENT"
        - "REQUESTER_REQUESTS_TERMS"
        - "PROVIDER_SUBMITS_TERMS"
        - "REQUESTER_ACCEPTS_TERMS"
        - "REQUESTER_REJECTS_TERMS"
        - "REQUESTER_SUBMITS_FEE_TABLE"
      body:
        type: "string"
      createdTimestamp:
        type: "string"
        format: "date-time"
      updatedTimestamp:
        type: "string"
        format: "date-time"
      sentTimestamp:
        type: "string"
        format: "date-time"
      receivedTimestamp:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "DRAFT"
        - "SENT"
        - "RECEIVED"
        - "PROCESSED"
        - "FAILED"
  QueueMessageSearchDto:
    type: "object"
    required:
    - "notionalIncreaseId"
    - "subject"
    properties:
      notionalIncreaseId:
        type: "string"
        format: "uuid"
      subject:
        type: "string"
        enum:
        - "REQUESTER_CREATES_NOTIONAL_INCREASE"
        - "PROVIDER_SUBMITS_NOTIONAL_INCREASE_FEE"
        - "PROVIDER_REJECTS_NOTIONAL_INCREASE"
        - "REQUESTER_REJECTS_NOTIONAL_INCREASE_FEE"
        - "REQUESTER_ACCEPTS_NOTIONAL_INCREASE_FEE"
        - "PROVIDER_CONFIRMS_NOTIONAL_INCREASE_FEE"
        - "REQUESTER_REQUESTS_DOCUMENT"
        - "PROVIDER_UPLOADS_DOCUMENT"
        - "REQUESTER_ACCEPTS_DOCUMENT"
        - "REQUESTER_REJECTS_DOCUMENT"
        - "REQUESTER_CANCELS_DOCUMENT"
        - "REQUESTER_REQUESTS_TERMS"
        - "PROVIDER_SUBMITS_TERMS"
        - "REQUESTER_ACCEPTS_TERMS"
        - "REQUESTER_REJECTS_TERMS"
        - "REQUESTER_SUBMITS_FEE_TABLE"
  RfqRequestDocumentWebDto:
    type: "object"
    required:
    - "language"
    - "providerTenantId"
    - "rfqId"
    - "type"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      providerTenantId:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "KID"
        - "TERMSHEET"
        - "BIB"
        - "TARGET_MARKET_DOCUMENT"
      language:
        type: "string"
        enum:
        - "EN"
        - "DE"
        - "FR"
        - "ES"
        - "RU"
        - "IT"
      isFinalVersion:
        type: "boolean"
  RfqReviewDocumentWebDto:
    type: "object"
    required:
    - "documentId"
    properties:
      documentId:
        type: "integer"
        format: "int64"
      requesterNote:
        type: "string"
  SubmitFeeTableDto:
    type: "object"
    required:
    - "fees"
    - "rfqId"
    properties:
      id:
        type: "integer"
        format: "int64"
      rfqId:
        type: "string"
        format: "uuid"
      fees:
        type: "array"
        items:
          $ref: "#/definitions/FeeDto"
      Draft:
        type: "boolean"
      configProcessorEvent:
        $ref: "#/definitions/ConfigProcessorEvent"
  RfqLatchDto:
    type: "object"
    properties:
      rfqUserLatches:
        type: "array"
        items:
          $ref: "#/definitions/RfqUserLatchDto"
  RfqUserLatchDto:
    type: "object"
    required:
    - "latchTimestamp"
    - "masterId"
    - "tenantId"
    - "tenantType"
    - "userEmail"
    - "userFirstName"
    - "userId"
    - "userLastName"
    properties:
      tenantId:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      userId:
        type: "string"
      userEmail:
        type: "string"
      userFirstName:
        type: "string"
      userLastName:
        type: "string"
      masterId:
        type: "string"
      latchTimestamp:
        type: "string"
        format: "date-time"
  NotionalIncreaseCreateRequestWebDto:
    type: "object"
    required:
    - "notional"
    - "rfqId"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      notional:
        type: "number"
  LocalDateRange:
    type: "object"
    properties:
      from:
        type: "string"
        format: "date"
      to:
        type: "string"
        format: "date"
  Number:
    type: "object"
  NumberRange:
    type: "object"
    properties:
      from:
        $ref: "#/definitions/Number"
      to:
        $ref: "#/definitions/Number"
  NumberRangeBigDecimal:
    type: "object"
    properties:
      from:
        type: "number"
      to:
        type: "number"
  NumberRangeInteger:
    type: "object"
    properties:
      from:
        type: "integer"
        format: "int32"
      to:
        type: "integer"
        format: "int32"
  RfqExportRequestDto:
    type: "object"
    properties:
      searchQuery:
        $ref: "#/definitions/RfqSearchRequestDto"
      columns:
        type: "array"
        items:
          type: "string"
  RfqSearchRequestDto:
    type: "object"
    properties:
      acceptedProviderName:
        type: "array"
        items:
          type: "string"
      barrierLevel1:
        $ref: "#/definitions/NumberRangeBigDecimal"
      barrierObsFrequency:
        type: "array"
        items:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
      barrierObsStyle:
        type: "array"
        items:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
      barrierObsType:
        type: "array"
        items:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
      cap:
        $ref: "#/definitions/NumberRangeBigDecimal"
      bonusLevel:
        $ref: "#/definitions/NumberRangeBigDecimal"
      coupon:
        $ref: "#/definitions/NumberRangeBigDecimal"
      couponType:
        type: "array"
        items:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
      couponMemory:
        type: "array"
        items:
          type: "string"
          enum:
          - "YES"
          - "NO"
      creationDateTime:
        $ref: "#/definitions/ZonedDateTimeRange"
      currency:
        type: "array"
        items:
          type: "string"
          enum:
          - "USD"
          - "CHF"
          - "EUR"
          - "AED"
          - "AFN"
          - "ALL"
          - "AMD"
          - "ANG"
          - "AOA"
          - "ARS"
          - "AUD"
          - "AWG"
          - "AZN"
          - "BAM"
          - "BBD"
          - "BDT"
          - "BGN"
          - "BHD"
          - "BIF"
          - "BMD"
          - "BND"
          - "BOB"
          - "BOV"
          - "BRL"
          - "BSD"
          - "BTN"
          - "BWP"
          - "BYN"
          - "BYR"
          - "BZD"
          - "CAD"
          - "CDF"
          - "CHE"
          - "CHW"
          - "CLF"
          - "CLP"
          - "CNH"
          - "CNY"
          - "COP"
          - "COU"
          - "CRC"
          - "CUC"
          - "CUP"
          - "CVE"
          - "CZK"
          - "DJF"
          - "DKK"
          - "DOP"
          - "DZD"
          - "EEK"
          - "EGP"
          - "ERN"
          - "ETB"
          - "FJD"
          - "FKP"
          - "GBP"
          - "GBX"
          - "GEL"
          - "GHS"
          - "GIP"
          - "GMD"
          - "GNF"
          - "GTQ"
          - "GWP"
          - "GYD"
          - "HKD"
          - "HNL"
          - "HRK"
          - "HTG"
          - "HUF"
          - "IDR"
          - "ILS"
          - "INR"
          - "IQD"
          - "IRR"
          - "ISK"
          - "JMD"
          - "JOD"
          - "JPY"
          - "KES"
          - "KGS"
          - "KHR"
          - "KMF"
          - "KPW"
          - "KRW"
          - "KWD"
          - "KYD"
          - "KZT"
          - "LAK"
          - "LBP"
          - "LKR"
          - "LRD"
          - "LSL"
          - "LTL"
          - "LVL"
          - "LYD"
          - "MAD"
          - "MDL"
          - "MGA"
          - "MKD"
          - "MMK"
          - "MNT"
          - "MOP"
          - "MRO"
          - "MUR"
          - "MVR"
          - "MWK"
          - "MXN"
          - "MXV"
          - "MYR"
          - "MZN"
          - "NAD"
          - "NGN"
          - "NIO"
          - "NOK"
          - "NPR"
          - "NZD"
          - "OMR"
          - "PAB"
          - "PEN"
          - "PGK"
          - "PHP"
          - "PKR"
          - "PLN"
          - "PYG"
          - "QAR"
          - "RON"
          - "RSD"
          - "RUB"
          - "RWF"
          - "SAR"
          - "SBD"
          - "SCR"
          - "SDG"
          - "SEK"
          - "SGD"
          - "SHP"
          - "SLL"
          - "SOS"
          - "SRD"
          - "SSP"
          - "STD"
          - "SVC"
          - "SYP"
          - "SZL"
          - "THB"
          - "TJS"
          - "TMT"
          - "TND"
          - "TOP"
          - "TRY"
          - "TTD"
          - "TWD"
          - "TZS"
          - "UAH"
          - "UGX"
          - "USN"
          - "USS"
          - "USX"
          - "UYI"
          - "UYU"
          - "UZS"
          - "VEF"
          - "VND"
          - "VUV"
          - "WST"
          - "XAF"
          - "XAG"
          - "XAU"
          - "XBA"
          - "XBB"
          - "XBC"
          - "XBD"
          - "XCD"
          - "XDR"
          - "XFU"
          - "XOF"
          - "XPD"
          - "XPF"
          - "XPT"
          - "XSU"
          - "XUA"
          - "YER"
          - "ZAR"
          - "ZMK"
          - "ZMW"
          - "ZWL"
      deadline:
        $ref: "#/definitions/ZonedDateTimeRange"
      denomination:
        $ref: "#/definitions/NumberRangeInteger"
      distributionType:
        type: "array"
        items:
          type: "string"
          enum:
          - "PRIVATE_PLACEMENT"
          - "SUBSCRIPTION"
      earlyRedemptionType:
        type: "array"
        items:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
      earlyRedemptionObservationFrequency:
        type: "array"
        items:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
      executionDateTime:
        $ref: "#/definitions/ZonedDateTimeRange"
      feeSgcGross:
        $ref: "#/definitions/NumberRangeBigDecimal"
      feeSgcNet:
        $ref: "#/definitions/NumberRangeBigDecimal"
      feeCoStructuring:
        $ref: "#/definitions/NumberRangeBigDecimal"
      feeSubscription:
        $ref: "#/definitions/NumberRangeBigDecimal"
      finalFixingDate:
        $ref: "#/definitions/LocalDateRange"
      finalRepaymentDate:
        $ref: "#/definitions/LocalDateRange"
      requestType:
        type: "array"
        items:
          type: "string"
          enum:
          - "INDICATION"
          - "COMPETITION"
      initialFixingDate:
        $ref: "#/definitions/LocalDateRange"
      internalAssetClass:
        type: "array"
        items:
          type: "string"
          enum:
          - "EQUITY"
          - "FIXED_INCOME"
          - "FX"
          - "COMMODITY"
          - "FUNDS"
      internalRmBusinessArea:
        type: "array"
        items:
          type: "string"
          enum:
          - "APAC_ZH"
          - "IWM_BRAZIL"
          - "IWM_EMERGING_EUROPE"
          - "IWM_EUROPE"
          - "IWM_LAT_AM"
          - "IWM_MIDDLE_EAST_AND_AFRICA"
          - "IWM_PBI"
          - "SUB_EAM"
          - "SUB_PREMIUM_CLIENTS"
          - "SUB_WMC"
          - "VARIOUS"
      rmFullName:
        type: "array"
        items:
          type: "string"
      internalCommentPresent:
        type: "array"
        items:
          type: "string"
      issueDate:
        $ref: "#/definitions/LocalDateRange"
      issuePriceLevel:
        $ref: "#/definitions/NumberRangeBigDecimal"
      issuePriceRate:
        $ref: "#/definitions/NumberRangeBigDecimal"
      participation:
        $ref: "#/definitions/NumberRangeBigDecimal"
      providerCount:
        type: "array"
        items:
          type: "string"
      requestCreatorFullName:
        type: "array"
        items:
          type: "string"
      settlement:
        type: "array"
        items:
          type: "string"
          enum:
          - "CASH"
          - "PHYSICAL"
          - "CASH_PHYSICAL"
      notional:
        $ref: "#/definitions/NumberRangeInteger"
      solvingFor:
        type: "array"
        items:
          type: "string"
          enum:
          - "BARRIER"
          - "BARRIER_LOWER"
          - "BARRIER_UPPER"
          - "BONUS_LEVEL"
          - "CAP"
          - "COUPON"
          - "COUPON_BARRIER"
          - "COUPON_SPREAD"
          - "COUPON_CAP"
          - "COUPON_FLOOR"
          - "EARLY_REDEMPTION_BARRIER_RATE"
          - "EARLY_REDEMPTION_EXIT_RATE"
          - "FEE_SGC_GROSS"
          - "FEE_CO_STRUCTURING"
          - "ISSUE_PRICE_LEVEL"
          - "ISSUE_PRICE_RATE"
          - "PARTICIPATION"
          - "PROTECTION"
          - "REBATE"
          - "STRIKE"
          - "TENOR"
          - "OTHER"
      status:
        type: "array"
        items:
          type: "string"
          enum:
          - "DRAFT"
          - "SUBMITTED"
          - "SENT"
          - "AMENDED"
          - "CONVERTED"
          - "SEND_FAILED"
          - "IN_PROGRESS"
          - "RECEIVED_ALL"
          - "COMPETITION_CLOSED"
          - "LAST_LOOK_REQUEST_SENT"
          - "LAST_LOOK_RESPONSE_RECEIVED"
          - "PROVIDER_ACCEPTED"
          - "PROCESSED"
          - "IN_EXECUTION"
          - "INACTIVE"
          - "REJECTED"
          - "ADJUSTMENT_SENT"
          - "ADJUSTMENT_QUOTED"
          - "ADJUSTMENT_IN_EXECUTION"
          - "ADJUSTMENT_EXECUTED"
          - "QUOTE_REJECTED"
          - "EXECUTED"
          - "CANCELLED"
          - "PRE_CANCELLED"
          - "FINAL_TERMS_RECEIVED"
          - "FINAL_TERMS_REJECTED"
          - "PRODUCT_ISSUED"
      strikeRate:
        $ref: "#/definitions/NumberRangeBigDecimal"
      submissionDateTime:
        $ref: "#/definitions/ZonedDateTimeRange"
      subscriptionStartDate:
        $ref: "#/definitions/LocalDateRange"
      subscriptionEndDate:
        $ref: "#/definitions/LocalDateRange"
      tenor:
        type: "array"
        items:
          type: "string"
      productType:
        type: "array"
        items:
          type: "string"
          enum:
          - "AIRBAG_CERTIFICATE"
          - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
          - "AUTOCALLABLE_BONUS_CERTIFICATE"
          - "BONUS_CERTIFICATE"
          - "BRC"
          - "ABRC"
          - "CBRC"
          - "RC"
          - "ARC"
          - "CRC"
          - "PRO_NOTE"
          - "CALLABLE_PRO_NOTE"
          - "AUTOCALLABLE_PRO_NOTE"
          - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
          - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
          - "GENERIC_PRODUCT"
          - "RATE_NOTE"
      sunshineProductType:
        type: "array"
        items:
          type: "string"
          enum:
          - "ACCUMULATOR_NOTES"
          - "AIRBAG_CERTIFICATE"
          - "AUTOCALLABLE_BARRIER_REVERSE_CONVERTIBLE"
          - "AUTOCALLABLE_BONUS_CERTIFICATE"
          - "AUTOCALLABLE_REVERSE_CONVERTIBLE"
          - "BARRIER_DISCOUNT_CERTIFICATE"
          - "BARRIER_REVERSE_CONVERTIBLE"
          - "BONUS_CERTIFICATE"
          - "CALLABLE_BARRIER_REVERSE_CONVERTIBLE"
          - "CALLABLE_DAILY_ACCRUAL_NOTES"
          - "CALLABLE_RANGE_ACCRUAL_NOTES"
          - "CAPPED_OUTPERFORMANCE_CERTIFICATE"
          - "CREDIT_LINKED_NOTES"
          - "DISCOUNT_CERTIFICATE"
          - "DROP_BACK_CERTIFICATE"
          - "EXPRESS_CERTIFICATE"
          - "FINER_S"
          - "FIXED_RATE_NOTE"
          - "FLOATING_RATE_NOTE"
          - "INFLATION_LINKED_NOTES"
          - "MINI_FUTURES"
          - "OUTPERFORMANCE_BONUS_CERTIFICATE"
          - "OUTPERFORMANCE_CERTIFICATE"
          - "PRO_NOTE_WITH_BONUS_COUPON"
          - "PRO_NOTE_WITH_COUPON"
          - "PRO_NOTE_WITH_DOUBLE_KNOCK_OUT"
          - "PRO_NOTE_WITH_KNOCK_OUT"
          - "PRO_NOTE_WITH_PARTICIPATION"
          - "PRO_NOTE_WITH_VARIABLE_COUPON"
          - "REVERSE_CONVERTIBLE"
          - "STABILITY_NOTE"
          - "STEEPENER"
          - "STEP_UP_NOTES"
          - "TRACKER_CERTIFICATE"
          - "TRIGGER_TWIN_WIN_CERTIFICATES"
          - "TWIN_WIN_CERTIFICATE"
          - "VARIOUS_LEVERAGE_WITH_KNOCK_OUT"
          - "VARIOUS_LEVERAGE_WITHOUT_KNOCK_OUT"
          - "VARIOUS_PARTICIPATION"
          - "VARIOUS_PRO_NOTES"
          - "VARIOUS_PRODUCTS"
          - "VARIOUS_YIELD_ENHANCEMENT"
          - "WARRANT"
          - "WARRANTS"
      underlyingExposure:
        type: "array"
        items:
          type: "string"
          enum:
          - "BEST_OF"
          - "WORST_OF"
          - "SINGLE_UNDERLYING"
          - "BASKET"
          - "BASKET_OR_WORST_OF"
          - "NO_UNDERLYING"
      updateDateTime:
        $ref: "#/definitions/ZonedDateTimeRange"
      isExecutedLastLookTrade:
        type: "array"
        items:
          type: "string"
      providerNotePresent:
        type: "array"
        items:
          type: "string"
      query:
        type: "string"
      sorts:
        type: "array"
        items:
          $ref: "#/definitions/Sort"
      pageNumber:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      needsAggregations:
        type: "boolean"
      assigneeFullName:
        type: "array"
        items:
          type: "string"
  Sort:
    type: "object"
    required:
    - "field"
    - "order"
    properties:
      field:
        type: "string"
      order:
        type: "string"
        enum:
        - "ASC"
        - "DESC"
  ZonedDateTimeRange:
    type: "object"
    properties:
      from:
        type: "string"
        format: "date-time"
      to:
        type: "string"
        format: "date-time"
  RfqExternalMessageDto:
    type: "object"
    required:
    - "id"
    - "masterId"
    - "message"
    - "receiverTenantId"
    - "rfqId"
    - "senderFirstName"
    - "senderLastName"
    - "senderTenantId"
    - "sentTimestamp"
    - "tenantType"
    properties:
      id:
        type: "string"
      rfqId:
        type: "string"
        format: "uuid"
      masterId:
        type: "string"
      senderTenantId:
        type: "integer"
        format: "int64"
      receiverTenantId:
        type: "integer"
        format: "int64"
      sentTimestamp:
        type: "string"
        format: "date-time"
      message:
        type: "string"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      senderFirstName:
        type: "string"
      senderLastName:
        type: "string"
  RfqExternalMessageFullWebDto:
    allOf:
    - $ref: "#/definitions/RfqExternalMessageWebDto"
    - type: "object"
      properties:
        id:
          type: "string"
          readOnly: true
        rfqId:
          type: "string"
          format: "uuid"
          readOnly: true
        senderTenantId:
          type: "integer"
          format: "int64"
          readOnly: true
        receiverTenantId:
          type: "integer"
          format: "int64"
          readOnly: true
        sentTimestamp:
          type: "string"
          format: "date-time"
          readOnly: true
        message:
          type: "string"
          readOnly: true
        tenantType:
          type: "string"
          readOnly: true
          enum:
          - "PROVIDER"
          - "REQUESTER"
        senderFirstName:
          type: "string"
          readOnly: true
        senderLastName:
          type: "string"
          readOnly: true
        read:
          type: "boolean"
          readOnly: true
  RfqExternalMessageFailureWebDto:
    allOf:
    - $ref: "#/definitions/RfqExternalMessageWebDto"
    - type: "object"
      required:
      - "failure"
      - "message"
      - "receiverTenantId"
      properties:
        receiverTenantId:
          type: "integer"
          format: "int64"
        message:
          type: "string"
        failure:
          type: "string"
  RfqExternalMessageWebDto:
    type: "object"
    discriminator: "type"
  RfqExternalMessageRequestWebDto:
    type: "object"
    required:
    - "message"
    - "receiverTenantIds"
    properties:
      receiverTenantIds:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      message:
        type: "string"
  RfqExternalMessagingOverviewWebDto:
    type: "object"
    required:
    - "lastMessagesPerProvider"
    properties:
      totalNumberOfUnreadMessages:
        type: "integer"
        format: "int64"
        readOnly: true
      lastMessagesPerProvider:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/RfqLastExternalMessagePerProviderWebDto"
  RfqLastExternalMessagePerProviderWebDto:
    type: "object"
    required:
    - "lastMessage"
    - "providerTenantId"
    properties:
      providerTenantId:
        type: "integer"
        format: "int64"
        readOnly: true
      numberOfUnreadMessages:
        type: "integer"
        format: "int64"
        readOnly: true
      lastMessage:
        readOnly: true
        $ref: "#/definitions/RfqExternalMessageFullWebDto"
  RfqAssignmentDto:
    type: "object"
    required:
    - "assigneeUserId"
    - "createTime"
    - "createUserId"
    - "id"
    - "rfqId"
    - "tenantType"
    properties:
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      rfqId:
        type: "string"
        format: "uuid"
      createTime:
        type: "string"
        format: "date-time"
      createUserId:
        type: "string"
      assigneeUserId:
        type: "string"
  RfqAssignmentSubmitDto:
    type: "object"
    required:
    - "assigneeUserId"
    - "rfqId"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      assigneeUserId:
        type: "string"
  RfqCommentDto:
    type: "object"
    required:
    - "commenterId"
    - "createTime"
    - "id"
    - "rfqId"
    - "tenantType"
    - "text"
    properties:
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      text:
        type: "string"
      commenterId:
        type: "string"
      createTime:
        type: "string"
        format: "date-time"
      rfqId:
        type: "string"
        format: "uuid"
  RfqCommentSubmitDto:
    type: "object"
    required:
    - "rfqId"
    - "text"
    properties:
      text:
        type: "string"
      rfqId:
        type: "string"
        format: "uuid"
  RequestedQuoteExportRequestDto:
    type: "object"
    properties:
      searchQuery:
        $ref: "#/definitions/RequestedQuoteSearchRequestDto"
      columns:
        type: "array"
        items:
          type: "string"
  RequestedQuoteSearchRequestDto:
    type: "object"
    properties:
      query:
        type: "string"
      productType:
        type: "array"
        items:
          type: "string"
          enum:
          - "AIRBAG_CERTIFICATE"
          - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
          - "AUTOCALLABLE_BONUS_CERTIFICATE"
          - "BONUS_CERTIFICATE"
          - "BRC"
          - "ABRC"
          - "CBRC"
          - "RC"
          - "ARC"
          - "CRC"
          - "PRO_NOTE"
          - "CALLABLE_PRO_NOTE"
          - "AUTOCALLABLE_PRO_NOTE"
          - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
          - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
          - "GENERIC_PRODUCT"
          - "RATE_NOTE"
      cap:
        $ref: "#/definitions/NumberRangeBigDecimal"
      creationDateTime:
        $ref: "#/definitions/ZonedDateTimeRange"
      updateDateTime:
        $ref: "#/definitions/ZonedDateTimeRange"
      executionDateTime:
        $ref: "#/definitions/ZonedDateTimeRange"
      currency:
        type: "array"
        items:
          type: "string"
          enum:
          - "USD"
          - "CHF"
          - "EUR"
          - "AED"
          - "AFN"
          - "ALL"
          - "AMD"
          - "ANG"
          - "AOA"
          - "ARS"
          - "AUD"
          - "AWG"
          - "AZN"
          - "BAM"
          - "BBD"
          - "BDT"
          - "BGN"
          - "BHD"
          - "BIF"
          - "BMD"
          - "BND"
          - "BOB"
          - "BOV"
          - "BRL"
          - "BSD"
          - "BTN"
          - "BWP"
          - "BYN"
          - "BYR"
          - "BZD"
          - "CAD"
          - "CDF"
          - "CHE"
          - "CHW"
          - "CLF"
          - "CLP"
          - "CNH"
          - "CNY"
          - "COP"
          - "COU"
          - "CRC"
          - "CUC"
          - "CUP"
          - "CVE"
          - "CZK"
          - "DJF"
          - "DKK"
          - "DOP"
          - "DZD"
          - "EEK"
          - "EGP"
          - "ERN"
          - "ETB"
          - "FJD"
          - "FKP"
          - "GBP"
          - "GBX"
          - "GEL"
          - "GHS"
          - "GIP"
          - "GMD"
          - "GNF"
          - "GTQ"
          - "GWP"
          - "GYD"
          - "HKD"
          - "HNL"
          - "HRK"
          - "HTG"
          - "HUF"
          - "IDR"
          - "ILS"
          - "INR"
          - "IQD"
          - "IRR"
          - "ISK"
          - "JMD"
          - "JOD"
          - "JPY"
          - "KES"
          - "KGS"
          - "KHR"
          - "KMF"
          - "KPW"
          - "KRW"
          - "KWD"
          - "KYD"
          - "KZT"
          - "LAK"
          - "LBP"
          - "LKR"
          - "LRD"
          - "LSL"
          - "LTL"
          - "LVL"
          - "LYD"
          - "MAD"
          - "MDL"
          - "MGA"
          - "MKD"
          - "MMK"
          - "MNT"
          - "MOP"
          - "MRO"
          - "MUR"
          - "MVR"
          - "MWK"
          - "MXN"
          - "MXV"
          - "MYR"
          - "MZN"
          - "NAD"
          - "NGN"
          - "NIO"
          - "NOK"
          - "NPR"
          - "NZD"
          - "OMR"
          - "PAB"
          - "PEN"
          - "PGK"
          - "PHP"
          - "PKR"
          - "PLN"
          - "PYG"
          - "QAR"
          - "RON"
          - "RSD"
          - "RUB"
          - "RWF"
          - "SAR"
          - "SBD"
          - "SCR"
          - "SDG"
          - "SEK"
          - "SGD"
          - "SHP"
          - "SLL"
          - "SOS"
          - "SRD"
          - "SSP"
          - "STD"
          - "SVC"
          - "SYP"
          - "SZL"
          - "THB"
          - "TJS"
          - "TMT"
          - "TND"
          - "TOP"
          - "TRY"
          - "TTD"
          - "TWD"
          - "TZS"
          - "UAH"
          - "UGX"
          - "USN"
          - "USS"
          - "USX"
          - "UYI"
          - "UYU"
          - "UZS"
          - "VEF"
          - "VND"
          - "VUV"
          - "WST"
          - "XAF"
          - "XAG"
          - "XAU"
          - "XBA"
          - "XBB"
          - "XBC"
          - "XBD"
          - "XCD"
          - "XDR"
          - "XFU"
          - "XOF"
          - "XPD"
          - "XPF"
          - "XPT"
          - "XSU"
          - "XUA"
          - "YER"
          - "ZAR"
          - "ZMK"
          - "ZMW"
          - "ZWL"
      issuePriceLevel:
        $ref: "#/definitions/NumberRangeBigDecimal"
      feeCoStructuring:
        $ref: "#/definitions/NumberRangeBigDecimal"
      notional:
        $ref: "#/definitions/NumberRangeInteger"
      denomination:
        $ref: "#/definitions/NumberRangeInteger"
      solvingFor:
        type: "array"
        items:
          type: "string"
          enum:
          - "BARRIER"
          - "BARRIER_LOWER"
          - "BARRIER_UPPER"
          - "BONUS_LEVEL"
          - "CAP"
          - "COUPON"
          - "COUPON_BARRIER"
          - "COUPON_SPREAD"
          - "COUPON_CAP"
          - "COUPON_FLOOR"
          - "EARLY_REDEMPTION_BARRIER_RATE"
          - "EARLY_REDEMPTION_EXIT_RATE"
          - "FEE_SGC_GROSS"
          - "FEE_CO_STRUCTURING"
          - "ISSUE_PRICE_LEVEL"
          - "ISSUE_PRICE_RATE"
          - "PARTICIPATION"
          - "PROTECTION"
          - "REBATE"
          - "STRIKE"
          - "TENOR"
          - "OTHER"
      status:
        type: "array"
        items:
          type: "string"
          enum:
          - "AMENDED"
          - "NEW"
          - "IN_PROGRESS"
          - "REJECTED"
          - "QUOTE_REJECTED"
          - "FAILED"
          - "CANCELLED"
          - "COMPETITION_CLOSED"
          - "CONVERTED"
          - "ADJUSTMENT_IN_EXECUTION"
          - "ADJUSTMENT_EXECUTED"
          - "ADJUSTMENT_RECEIVED"
          - "ADJUSTMENT_QUOTED"
          - "LAST_LOOK_REQUEST_RECEIVED"
          - "LAST_LOOK_RESPONSE_SENT"
          - "PROVIDER_ACCEPTED"
          - "IN_EXECUTION"
          - "INACTIVE"
          - "LOST"
          - "EXECUTED"
          - "FINAL_TERMS_SENT"
          - "FINAL_TERMS_REJECTED"
          - "PRODUCT_ISSUED"
      requestType:
        type: "array"
        items:
          type: "string"
          enum:
          - "INDICATION"
          - "COMPETITION"
      assigneeFullName:
        type: "array"
        items:
          type: "string"
      deadline:
        $ref: "#/definitions/ZonedDateTimeRange"
      sorts:
        type: "array"
        items:
          $ref: "#/definitions/Sort"
      pageNumber:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      needsAggregations:
        type: "boolean"
  RfqProviderExternalMessageRequestWebDto:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
  PricerRequestDto:
    type: "object"
    required:
    - "createTime"
    - "requestedQuoteId"
    - "status"
    properties:
      requestedQuoteId:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "CREATED"
        - "SENT"
        - "SUCCEEDED"
        - "REJECTED"
        - "PLANNED"
        - "CANCELLED"
        - "FAILED"
      createTime:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      requestBody:
        type: "string"
      responseBody:
        type: "string"
      quoteValue:
        type: "number"
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      plannedSendTime:
        type: "string"
        format: "date-time"
      sendTime:
        type: "string"
        format: "date-time"
      receiveTime:
        type: "string"
        format: "date-time"
      cancelTime:
        type: "string"
        format: "date-time"
      discardSendTime:
        type: "string"
        format: "date-time"
      requestValidUntil:
        type: "string"
        format: "date-time"
      responseValidUntil:
        type: "string"
        format: "date-time"
      businessError:
        type: "string"
      technicalError:
        type: "string"
      externalId:
        type: "string"
      isLastLook:
        type: "boolean"
      isRetry:
        type: "boolean"
  LastLookDto:
    type: "object"
    required:
    - "quoteValue"
    - "requesterTenantId"
    - "rfqId"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      requesterTenantId:
        type: "integer"
        format: "int64"
      quoteValue:
        type: "string"
  TitleDto:
    type: "object"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      title:
        type: "string"
  SunshineDto:
    type: "object"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      sunshineId:
        type: "integer"
        format: "int32"
  RfqStatusEventDto:
    type: "object"
    required:
    - "rfqId"
    - "status"
    - "tenantId"
    properties:
      rfqId:
        type: "string"
        format: "uuid"
      tenantId:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "AMENDED"
        - "NEW"
        - "IN_PROGRESS"
        - "REJECTED"
        - "QUOTE_REJECTED"
        - "FAILED"
        - "CANCELLED"
        - "COMPETITION_CLOSED"
        - "CONVERTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "ADJUSTMENT_RECEIVED"
        - "ADJUSTMENT_QUOTED"
        - "LAST_LOOK_REQUEST_RECEIVED"
        - "LAST_LOOK_RESPONSE_SENT"
        - "PROVIDER_ACCEPTED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "LOST"
        - "EXECUTED"
        - "FINAL_TERMS_SENT"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
  RfqEventDto:
    type: "object"
    required:
    - "category"
    - "createdTimestamp"
    - "rfqId"
    - "tenantType"
    - "triggeringTenantId"
    - "type"
    properties:
      id:
        type: "integer"
        format: "int64"
      tenantType:
        type: "string"
        enum:
        - "PROVIDER"
        - "REQUESTER"
      type:
        type: "string"
        enum:
        - "EVENT_EXTERNAL_MESSAGE_RECEIVED"
        - "EVENT_EXTERNAL_MESSAGE_SENT"
        - "EVENT_DOCUMENT_REQUESTED"
        - "EVENT_DOCUMENT_UPLOADED"
        - "EVENT_DOCUMENT_ACCEPTED"
        - "EVENT_DOCUMENT_REJECTED"
        - "EVENT_DOCUMENT_CANCELLED"
        - "EVENT_DOCUMENT_EXPORTED"
        - "EVENT_STATUS_CHANGED"
        - "EVENT_RFQ_SAVED"
        - "EVENT_PROVIDER_DESELECTED"
        - "EVENT_RFQ_RENAMED"
        - "EVENT_RFQ_SENT"
        - "EVENT_INDICATIVE_RFQ_RECEIVED"
        - "EVENT_COMPETITIVE_RFQ_RECEIVED"
        - "EVENT_VARIATION_RFQ_RECEIVED"
        - "EVENT_ADJUSTMENT_RFQ_RECEIVED"
        - "EVENT_QUOTE_REFRESH_REQUESTED"
        - "EVENT_DEADLINE_REACHED_WHILE_IN_PROGRESS"
        - "EVENT_SUBMITTED_QUOTE"
        - "EVENT_RECEIVED_QUOTE"
        - "EVENT_RECEIVED_VARIATION_QUOTE"
        - "EVENT_INDICATION_RECEIVED_ALL_QUOTES"
        - "EVENT_RECEIVED_ALL_QUOTES"
        - "EVENT_LAST_LOOK_REQUEST_RECEIVED"
        - "EVENT_LAST_LOOK_RESPONSE_RECEIVED"
        - "EVENT_PROVIDER_ACCEPTED"
        - "EVENT_ALL_VARIATIONS_RECEIVED_QUOTE"
        - "EVENT_VARIATION_FLAG_CHANGED"
        - "EVENT_RFQ_MOVED_INTO_EXECUTION"
        - "EVENT_FINAL_TERMS_RECEIVED"
        - "EVENT_RFQ_REJECTED"
        - "EVENT_RFQ_EXECUTED"
        - "EVENT_RFQ_LOST"
        - "EVENT_NOTIONAL_INCREASE_SENT"
        - "EVENT_NOTIONAL_INCREASE_NEW"
        - "EVENT_NOTIONAL_INCREASE_QUOTED"
        - "EVENT_NOTIONAL_INCREASE_REQUEST_REJECTED"
        - "EVENT_NOTIONAL_INCREASE_QUOTE_REJECTED"
        - "EVENT_NOTIONAL_INCREASE_IN_EXECUTION"
        - "EVENT_NOTIONAL_INCREASE_QUOTE_CONFIRMED"
        - "EVENT_ADJUSTMENT_SENT"
        - "EVENT_ADJUSTMENT_RECEIVED"
        - "EVENT_ADJUSTMENT_REJECTED"
        - "EVENT_ADJUSTMENT_QUOTED"
        - "EVENT_ADJUSTMENT_QUOTE_REJECTED"
        - "EVENT_ADJUSTMENT_QUOTE_ACCEPTED"
        - "EVENT_ADJUSTMENT_EXECUTED"
        - "EVENT_TERMS_REQUESTED"
        - "EVENT_TERMS_SUBMITTED"
        - "EVENT_TERMS_ACCEPTED"
        - "EVENT_TERMS_REJECTED"
        - "EVENT_SUNSHINE_PRODUCT_IMPORT_SUCCESS"
        - "EVENT_SUNSHINE_PRODUCT_IMPORT_FAILURE"
        - "EVENT_SUNSHINE_MIFID_IMPORT_SUCCESS"
        - "EVENT_SUNSHINE_MIFID_IMPORT_FAILURE"
        - "EVENT_SUNSHINE_FULL_IMPORT_SUCCESS"
        - "EVENT_SUNSHINE_FULL_IMPORT_FAILURE"
        - "EVENT_FEE_TABLE_SAVED"
        - "EVENT_FEE_TABLE_SENT"
        - "EVENT_FEE_TABLE_RECEIVED"
        - "EVENT_ASSIGNEE_CHANGE"
        - "EVENT_COMMENT_ADDED"
        - "EVENT_COMPETITION_FEEDBACK_GENERATED"
        - "EVENT_COMPETITION_FEEDBACK_RECEIVED"
        - "EVENT_PRICER_REQUEST_SENT"
        - "EVENT_PRICER_REQUEST_SUCCEEDED"
        - "EVENT_PRICER_REQUEST_REJECTED"
        - "EVENT_PRICER_REQUEST_FAILED"
        - "EVENT_PRICER_REQUEST_CANCELLED"
        - "EVENT_PRICER_REQUEST_DISCARDED"
        - "MULTIPLE_EVENTS"
      category:
        type: "string"
        enum:
        - "WORKFLOW"
        - "CHAT"
        - "DOCUMENT"
        - "GENERAL"
        - "SUNSHINE"
      rfqId:
        type: "string"
        format: "uuid"
      masterId:
        type: "string"
      rfqTitle:
        type: "string"
      rfqStatus:
        type: "string"
        enum:
        - "DRAFT"
        - "SUBMITTED"
        - "SENT"
        - "AMENDED"
        - "CONVERTED"
        - "SEND_FAILED"
        - "IN_PROGRESS"
        - "RECEIVED_ALL"
        - "COMPETITION_CLOSED"
        - "LAST_LOOK_REQUEST_SENT"
        - "LAST_LOOK_RESPONSE_RECEIVED"
        - "PROVIDER_ACCEPTED"
        - "PROCESSED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "REJECTED"
        - "ADJUSTMENT_SENT"
        - "ADJUSTMENT_QUOTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "QUOTE_REJECTED"
        - "EXECUTED"
        - "CANCELLED"
        - "PRE_CANCELLED"
        - "FINAL_TERMS_RECEIVED"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
      rfqProviderStatus:
        type: "string"
        enum:
        - "AMENDED"
        - "NEW"
        - "IN_PROGRESS"
        - "REJECTED"
        - "QUOTE_REJECTED"
        - "FAILED"
        - "CANCELLED"
        - "COMPETITION_CLOSED"
        - "CONVERTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "ADJUSTMENT_RECEIVED"
        - "ADJUSTMENT_QUOTED"
        - "LAST_LOOK_REQUEST_RECEIVED"
        - "LAST_LOOK_RESPONSE_SENT"
        - "PROVIDER_ACCEPTED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "LOST"
        - "EXECUTED"
        - "FINAL_TERMS_SENT"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
      triggeringTenantId:
        type: "integer"
        format: "int64"
      triggeringUserId:
        type: "string"
      createdTimestamp:
        type: "string"
        format: "date-time"
      notifiedTimestamp:
        type: "string"
        format: "date-time"
      acknowledgedTimestamp:
        type: "string"
        format: "date-time"
      acknowledgedUserId:
        type: "string"
      quoteId:
        type: "string"
        format: "uuid"
      notionalIncreaseId:
        type: "string"
        format: "uuid"
      documentId:
        type: "integer"
        format: "int64"
      termsId:
        type: "integer"
        format: "int64"
      feeTableId:
        type: "integer"
        format: "int64"
      pricerRequestId:
        type: "integer"
        format: "int64"
  AirbagCertificateRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        strikeRate:
          type: "number"
  AutocallableAirbagCertificateRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        strikeRate:
          type: "number"
  AutocallableBonusCertificateRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        upsidePreserved:
          type: "boolean"
        capPreserved:
          type: "boolean"
  AutocallableProNoteRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        strikeRate:
          type: "number"
        protection:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        cap:
          type: "number"
  BarrierReverseConvertibleRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        strikeRate:
          type: "number"
  BonusCertificateRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        cap:
          type: "number"
        upsidePreserved:
          type: "boolean"
        capPreserved:
          type: "boolean"
  CallableProNoteRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        strikeRate:
          type: "number"
        protection:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        cap:
          type: "number"
  GenericProductFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        sunshineProductType:
          type: "string"
          enum:
          - "ACCUMULATOR_NOTES"
          - "AIRBAG_CERTIFICATE"
          - "AUTOCALLABLE_BARRIER_REVERSE_CONVERTIBLE"
          - "AUTOCALLABLE_BONUS_CERTIFICATE"
          - "AUTOCALLABLE_REVERSE_CONVERTIBLE"
          - "BARRIER_DISCOUNT_CERTIFICATE"
          - "BARRIER_REVERSE_CONVERTIBLE"
          - "BONUS_CERTIFICATE"
          - "CALLABLE_BARRIER_REVERSE_CONVERTIBLE"
          - "CALLABLE_DAILY_ACCRUAL_NOTES"
          - "CALLABLE_RANGE_ACCRUAL_NOTES"
          - "CAPPED_OUTPERFORMANCE_CERTIFICATE"
          - "CREDIT_LINKED_NOTES"
          - "DISCOUNT_CERTIFICATE"
          - "DROP_BACK_CERTIFICATE"
          - "EXPRESS_CERTIFICATE"
          - "FINER_S"
          - "FIXED_RATE_NOTE"
          - "FLOATING_RATE_NOTE"
          - "INFLATION_LINKED_NOTES"
          - "MINI_FUTURES"
          - "OUTPERFORMANCE_BONUS_CERTIFICATE"
          - "OUTPERFORMANCE_CERTIFICATE"
          - "PRO_NOTE_WITH_BONUS_COUPON"
          - "PRO_NOTE_WITH_COUPON"
          - "PRO_NOTE_WITH_DOUBLE_KNOCK_OUT"
          - "PRO_NOTE_WITH_KNOCK_OUT"
          - "PRO_NOTE_WITH_PARTICIPATION"
          - "PRO_NOTE_WITH_VARIABLE_COUPON"
          - "REVERSE_CONVERTIBLE"
          - "STABILITY_NOTE"
          - "STEEPENER"
          - "STEP_UP_NOTES"
          - "TRACKER_CERTIFICATE"
          - "TRIGGER_TWIN_WIN_CERTIFICATES"
          - "TWIN_WIN_CERTIFICATE"
          - "VARIOUS_LEVERAGE_WITH_KNOCK_OUT"
          - "VARIOUS_LEVERAGE_WITHOUT_KNOCK_OUT"
          - "VARIOUS_PARTICIPATION"
          - "VARIOUS_PRO_NOTES"
          - "VARIOUS_PRODUCTS"
          - "VARIOUS_YIELD_ENHANCEMENT"
          - "WARRANT"
          - "WARRANTS"
  ProNoteRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        strikeRate:
          type: "number"
        protection:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
        cap:
          type: "number"
  ProNoteWithLimitedParticipationRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        strikeRate:
          type: "number"
        protection:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
  ProNoteWithTwinWinParticipationRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        barrierLevel1:
          type: "number"
        barrierRebate:
          type: "number"
        barrierUpper:
          type: "number"
        barrierLower:
          type: "number"
        barrierObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "BERMUDAN"
          - "EUROPEAN"
        barrierObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        barrierObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        participation:
          type: "number"
        bonusLevel:
          type: "number"
        strikeRate:
          type: "number"
        protection:
          type: "number"
        direction:
          type: "string"
          enum:
          - "BULL"
          - "BEAR"
  RequestedQuoteFrontEndDto:
    type: "object"
    required:
    - "sellingRestrictions"
    discriminator: "type"
    properties:
      id:
        type: "integer"
        format: "int64"
      masterId:
        type: "string"
      rfqId:
        type: "string"
        format: "uuid"
      requesterName:
        type: "string"
      status:
        type: "string"
        enum:
        - "AMENDED"
        - "NEW"
        - "IN_PROGRESS"
        - "REJECTED"
        - "QUOTE_REJECTED"
        - "FAILED"
        - "CANCELLED"
        - "COMPETITION_CLOSED"
        - "CONVERTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "ADJUSTMENT_RECEIVED"
        - "ADJUSTMENT_QUOTED"
        - "LAST_LOOK_REQUEST_RECEIVED"
        - "LAST_LOOK_RESPONSE_SENT"
        - "PROVIDER_ACCEPTED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "LOST"
        - "EXECUTED"
        - "FINAL_TERMS_SENT"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
      deadline:
        type: "string"
        format: "date-time"
      creationDateTime:
        type: "string"
        format: "date-time"
      providerNote:
        type: "string"
      tenor:
        type: "string"
      initiative:
        type: "string"
      rmFullName:
        type: "string"
      settlementLag:
        type: "string"
      initialFixingDate:
        type: "string"
        format: "date"
      fixingType:
        type: "string"
        enum:
        - "CLOSING"
        - "LIVE_STRIKE"
      issueDate:
        type: "string"
        format: "date"
      finalFixingDate:
        type: "string"
        format: "date"
      finalRepaymentDate:
        type: "string"
        format: "date"
      subscriptionStartDate:
        type: "string"
        format: "date"
      subscriptionEndDate:
        type: "string"
        format: "date"
      productType:
        type: "string"
        enum:
        - "AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_BONUS_CERTIFICATE"
        - "BONUS_CERTIFICATE"
        - "BRC"
        - "ABRC"
        - "CBRC"
        - "RC"
        - "ARC"
        - "CRC"
        - "PRO_NOTE"
        - "CALLABLE_PRO_NOTE"
        - "AUTOCALLABLE_PRO_NOTE"
        - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
        - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
        - "GENERIC_PRODUCT"
        - "RATE_NOTE"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      requestType:
        type: "string"
        enum:
        - "INDICATION"
        - "COMPETITION"
      issuePriceLevel:
        type: "number"
      issuePriceRate:
        type: "number"
      quotationType:
        type: "string"
        enum:
        - "UNIT_PRICE"
        - "PERCENTAGE_PRICE"
      notional:
        type: "number"
      denomination:
        type: "number"
      feeType:
        type: "string"
        enum:
        - "CO_STRUCTURING_FEE"
        - "SGC_NET"
        - "SGC_GROSS"
        - "SUBSCRIPTION_FEE"
      fee:
        type: "number"
      fees:
        type: "array"
        items:
          $ref: "#/definitions/FeeDto"
      feeCalculationType:
        type: "string"
        enum:
        - "NOTIONAL_PERCENTAGE"
        - "ISSUE_PRICE_PERCENTAGE"
        - "NAV_PERCENTAGE"
      feePaymentDate:
        type: "string"
        format: "date"
      feeStatus:
        type: "string"
        enum:
        - "INDICATIVE"
        - "FIXED"
      underlyings:
        type: "array"
        items:
          $ref: "#/definitions/RfqUnderlyingDto"
      solvingFor:
        type: "string"
        enum:
        - "BARRIER"
        - "BARRIER_LOWER"
        - "BARRIER_UPPER"
        - "BONUS_LEVEL"
        - "CAP"
        - "COUPON"
        - "COUPON_BARRIER"
        - "COUPON_SPREAD"
        - "COUPON_CAP"
        - "COUPON_FLOOR"
        - "EARLY_REDEMPTION_BARRIER_RATE"
        - "EARLY_REDEMPTION_EXIT_RATE"
        - "FEE_SGC_GROSS"
        - "FEE_CO_STRUCTURING"
        - "ISSUE_PRICE_LEVEL"
        - "ISSUE_PRICE_RATE"
        - "PARTICIPATION"
        - "PROTECTION"
        - "REBATE"
        - "STRIKE"
        - "TENOR"
        - "OTHER"
      title:
        type: "string"
      distributionType:
        type: "string"
        enum:
        - "PRIVATE_PLACEMENT"
        - "SUBSCRIPTION"
      quote:
        type: "string"
      requestedLastLookQuote:
        type: "string"
      updateDateTime:
        type: "string"
        format: "date-time"
      solutionStatus:
        type: "string"
        enum:
        - "ACCEPTED"
        - "REJECTED"
        - "WAITING"
      quanto:
        type: "boolean"
      settlement:
        type: "string"
        enum:
        - "CASH"
        - "PHYSICAL"
        - "CASH_PHYSICAL"
      underlyingExposure:
        type: "string"
        enum:
        - "BEST_OF"
        - "WORST_OF"
        - "SINGLE_UNDERLYING"
        - "BASKET"
        - "BASKET_OR_WORST_OF"
        - "NO_UNDERLYING"
      issuer:
        type: "string"
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/SellingRestrictionDto"
      sunshineId:
        type: "integer"
        format: "int32"
      ukRelevant:
        type: "array"
        items:
          type: "string"
      quoteValidUntil:
        type: "string"
        format: "date-time"
  RequestedQuoteWebDto:
    type: "object"
    required:
    - "config"
    - "errors"
    - "quoteRejectionSection"
    - "rfq"
    properties:
      rfq:
        $ref: "#/definitions/RequestedQuoteFrontEndDto"
      config:
        $ref: "#/definitions/WebConfiguration"
      quoteRejectionSection:
        $ref: "#/definitions/WebConfigurationElement"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ValidationErrorDto"
  ReverseConvertibleRequestedQuoteFrontEndDto:
    allOf:
    - $ref: "#/definitions/RequestedQuoteFrontEndDto"
    - type: "object"
      properties:
        coupon:
          type: "number"
        couponFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        couponType:
          type: "string"
          enum:
          - "FIXED"
          - "FLOAT"
          - "STEP_UP"
          - "NO_COUPON"
        couponMemory:
          type: "string"
          enum:
          - "YES"
          - "NO"
        conditionalCoupon:
          type: "boolean"
        couponBarrier:
          type: "number"
        couponObsFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "EUROPEAN"
          - "BERMUDAN"
        couponObsStyle:
          type: "string"
          enum:
          - "CLOSING"
          - "CONTINUOUS"
        couponObsType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        couponReferenceRate:
          type: "string"
        couponFloor:
          type: "number"
        couponSpread:
          type: "number"
        couponCap:
          type: "number"
        couponStep:
          type: "number"
        couponStepFrequency:
          type: "string"
          enum:
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
          - "BULLET"
        earlyRedemptionType:
          type: "string"
          enum:
          - "FIXED_MATURITY"
          - "CALLABLE"
          - "CALLABLE_WITH_EXIT_RATE"
          - "AUTOCALLABLE"
        earlyRedemptionFirstObservationTenor:
          type: "string"
        earlyRedemptionObservationFrequency:
          type: "string"
          enum:
          - "DAILY"
          - "WEEKLY"
          - "MONTHLY"
          - "BI_MONTHLY"
          - "QUARTERLY"
          - "SEMI_ANNUALLY"
          - "ANNUALLY"
        earlyRedemptionBarrierObservationType:
          type: "string"
          enum:
          - "SINGLE_UNDERLYING"
          - "WORST_OF"
          - "BEST_OF"
          - "BASKET"
        earlyRedemptionStep:
          type: "number"
        earlyRedemptionBarrierRate:
          type: "number"
        earlyRedemptionPriceRate:
          type: "number"
        earlyRedemptionExitRate:
          type: "number"
        strikeRate:
          type: "number"
  QuoteFrontEndDto:
    type: "object"
    required:
    - "requestedQuoteId"
    - "sellingRestrictions"
    - "solutionStatus"
    properties:
      requestedQuoteId:
        type: "integer"
        format: "int64"
      quote:
        type: "string"
      solutionStatus:
        type: "string"
        enum:
        - "ACCEPTED"
        - "REJECTED"
        - "WAITING"
      issuer:
        type: "string"
      mifidEntryCost:
        type: "number"
      mifidRecurringCost:
        type: "number"
      mifidExitCost:
        type: "number"
      sellingRestrictions:
        type: "array"
        items:
          $ref: "#/definitions/SellingRestrictionDto"
      rejectionReason:
        type: "string"
        enum:
        - "NO_QUOTE_ON_UNDERLYING"
        - "NO_QUOTE_ON_STRUCTURE"
        - "NOT_ENOUGH_TIME"
        - "SIZE_TOO_LOW"
        - "SIZE_TOO_HIGH"
        - "DOES_NOT_SOLVE"
        - "AUTO_PRICER_ERROR"
        - "TECHNICAL_ERROR"
        - "OTHER"
      rejectionComment:
        type: "string"
      quoteValidUntil:
        type: "string"
        format: "date-time"
      pricerRequestId:
        type: "integer"
        format: "int64"
      creationUserId:
        type: "string"
      creationUserFullName:
        type: "string"
  RequestedQuoteSearchDto:
    type: "object"
    required:
    - "id"
    - "productType"
    - "rfqId"
    properties:
      id:
        type: "integer"
        format: "int64"
      rfqId:
        type: "string"
        format: "uuid"
      title:
        type: "string"
      productType:
        type: "string"
        enum:
        - "AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_BONUS_CERTIFICATE"
        - "BONUS_CERTIFICATE"
        - "BRC"
        - "ABRC"
        - "CBRC"
        - "RC"
        - "ARC"
        - "CRC"
        - "PRO_NOTE"
        - "CALLABLE_PRO_NOTE"
        - "AUTOCALLABLE_PRO_NOTE"
        - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
        - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
        - "GENERIC_PRODUCT"
        - "RATE_NOTE"
      creationDateTime:
        type: "string"
        format: "date-time"
      updateDateTime:
        type: "string"
        format: "date-time"
      executionDateTime:
        type: "string"
        format: "date-time"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      issuePriceLevel:
        type: "number"
      feeCoStructuring:
        type: "number"
      quote:
        type: "string"
      notional:
        type: "number"
      denomination:
        type: "number"
      rfqUnderlyings:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/RfqUnderlyingSearchDto"
      solvingFor:
        type: "string"
        enum:
        - "BARRIER"
        - "BARRIER_LOWER"
        - "BARRIER_UPPER"
        - "BONUS_LEVEL"
        - "CAP"
        - "COUPON"
        - "COUPON_BARRIER"
        - "COUPON_SPREAD"
        - "COUPON_CAP"
        - "COUPON_FLOOR"
        - "EARLY_REDEMPTION_BARRIER_RATE"
        - "EARLY_REDEMPTION_EXIT_RATE"
        - "FEE_SGC_GROSS"
        - "FEE_CO_STRUCTURING"
        - "ISSUE_PRICE_LEVEL"
        - "ISSUE_PRICE_RATE"
        - "PARTICIPATION"
        - "PROTECTION"
        - "REBATE"
        - "STRIKE"
        - "TENOR"
        - "OTHER"
      status:
        type: "string"
        enum:
        - "AMENDED"
        - "NEW"
        - "IN_PROGRESS"
        - "REJECTED"
        - "QUOTE_REJECTED"
        - "FAILED"
        - "CANCELLED"
        - "COMPETITION_CLOSED"
        - "CONVERTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "ADJUSTMENT_RECEIVED"
        - "ADJUSTMENT_QUOTED"
        - "LAST_LOOK_REQUEST_RECEIVED"
        - "LAST_LOOK_RESPONSE_SENT"
        - "PROVIDER_ACCEPTED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "LOST"
        - "EXECUTED"
        - "FINAL_TERMS_SENT"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
      userId:
        type: "string"
      tenantId:
        type: "integer"
        format: "int64"
      requestType:
        type: "string"
        enum:
        - "INDICATION"
        - "COMPETITION"
      parentId:
        type: "string"
        format: "uuid"
      masterId:
        type: "string"
      newEvents:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/RfqEventSearchDto"
      assigneeFullName:
        type: "string"
      sunshineId:
        type: "string"
      deadline:
        type: "string"
        format: "date-time"
      valor:
        type: "string"
      isin:
        type: "string"
      ric:
        type: "string"
  RequestedQuoteSearchResponseDto:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int64"
      queryTimeMs:
        type: "integer"
        format: "int64"
      data:
        type: "array"
        items:
          $ref: "#/definitions/RequestedQuoteSearchDto"
  RfqEventSearchDto:
    type: "object"
    required:
    - "createdTimestamp"
    - "id"
    - "triggeringTenantId"
    - "type"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "EVENT_EXTERNAL_MESSAGE_RECEIVED"
        - "EVENT_EXTERNAL_MESSAGE_SENT"
        - "EVENT_DOCUMENT_REQUESTED"
        - "EVENT_DOCUMENT_UPLOADED"
        - "EVENT_DOCUMENT_ACCEPTED"
        - "EVENT_DOCUMENT_REJECTED"
        - "EVENT_DOCUMENT_CANCELLED"
        - "EVENT_DOCUMENT_EXPORTED"
        - "EVENT_STATUS_CHANGED"
        - "EVENT_RFQ_SAVED"
        - "EVENT_PROVIDER_DESELECTED"
        - "EVENT_RFQ_RENAMED"
        - "EVENT_RFQ_SENT"
        - "EVENT_INDICATIVE_RFQ_RECEIVED"
        - "EVENT_COMPETITIVE_RFQ_RECEIVED"
        - "EVENT_VARIATION_RFQ_RECEIVED"
        - "EVENT_ADJUSTMENT_RFQ_RECEIVED"
        - "EVENT_QUOTE_REFRESH_REQUESTED"
        - "EVENT_DEADLINE_REACHED_WHILE_IN_PROGRESS"
        - "EVENT_SUBMITTED_QUOTE"
        - "EVENT_RECEIVED_QUOTE"
        - "EVENT_RECEIVED_VARIATION_QUOTE"
        - "EVENT_INDICATION_RECEIVED_ALL_QUOTES"
        - "EVENT_RECEIVED_ALL_QUOTES"
        - "EVENT_LAST_LOOK_REQUEST_RECEIVED"
        - "EVENT_LAST_LOOK_RESPONSE_RECEIVED"
        - "EVENT_PROVIDER_ACCEPTED"
        - "EVENT_ALL_VARIATIONS_RECEIVED_QUOTE"
        - "EVENT_VARIATION_FLAG_CHANGED"
        - "EVENT_RFQ_MOVED_INTO_EXECUTION"
        - "EVENT_FINAL_TERMS_RECEIVED"
        - "EVENT_RFQ_REJECTED"
        - "EVENT_RFQ_EXECUTED"
        - "EVENT_RFQ_LOST"
        - "EVENT_NOTIONAL_INCREASE_SENT"
        - "EVENT_NOTIONAL_INCREASE_NEW"
        - "EVENT_NOTIONAL_INCREASE_QUOTED"
        - "EVENT_NOTIONAL_INCREASE_REQUEST_REJECTED"
        - "EVENT_NOTIONAL_INCREASE_QUOTE_REJECTED"
        - "EVENT_NOTIONAL_INCREASE_IN_EXECUTION"
        - "EVENT_NOTIONAL_INCREASE_QUOTE_CONFIRMED"
        - "EVENT_ADJUSTMENT_SENT"
        - "EVENT_ADJUSTMENT_RECEIVED"
        - "EVENT_ADJUSTMENT_REJECTED"
        - "EVENT_ADJUSTMENT_QUOTED"
        - "EVENT_ADJUSTMENT_QUOTE_REJECTED"
        - "EVENT_ADJUSTMENT_QUOTE_ACCEPTED"
        - "EVENT_ADJUSTMENT_EXECUTED"
        - "EVENT_TERMS_REQUESTED"
        - "EVENT_TERMS_SUBMITTED"
        - "EVENT_TERMS_ACCEPTED"
        - "EVENT_TERMS_REJECTED"
        - "EVENT_SUNSHINE_PRODUCT_IMPORT_SUCCESS"
        - "EVENT_SUNSHINE_PRODUCT_IMPORT_FAILURE"
        - "EVENT_SUNSHINE_MIFID_IMPORT_SUCCESS"
        - "EVENT_SUNSHINE_MIFID_IMPORT_FAILURE"
        - "EVENT_SUNSHINE_FULL_IMPORT_SUCCESS"
        - "EVENT_SUNSHINE_FULL_IMPORT_FAILURE"
        - "EVENT_FEE_TABLE_SAVED"
        - "EVENT_FEE_TABLE_SENT"
        - "EVENT_FEE_TABLE_RECEIVED"
        - "EVENT_ASSIGNEE_CHANGE"
        - "EVENT_COMMENT_ADDED"
        - "EVENT_COMPETITION_FEEDBACK_GENERATED"
        - "EVENT_COMPETITION_FEEDBACK_RECEIVED"
        - "EVENT_PRICER_REQUEST_SENT"
        - "EVENT_PRICER_REQUEST_SUCCEEDED"
        - "EVENT_PRICER_REQUEST_REJECTED"
        - "EVENT_PRICER_REQUEST_FAILED"
        - "EVENT_PRICER_REQUEST_CANCELLED"
        - "EVENT_PRICER_REQUEST_DISCARDED"
        - "MULTIPLE_EVENTS"
      triggeringTenantId:
        type: "integer"
        format: "int64"
      createdTimestamp:
        type: "string"
        format: "date-time"
  RfqUnderlyingSearchDto:
    type: "object"
    properties:
      isin:
        type: "string"
      ric:
        type: "string"
      bbgTicker:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
        enum:
        - "EQUITY"
        - "INDEX"
        - "CMDTY"
        - "CORP"
        - "CRNCY"
        - "GOVT"
        - "PFD"
        - "DI"
        - "OTHER"
  ColumnElement:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          $ref: "#/definitions/Option"
      key:
        type: "string"
      label:
        type: "string"
      sortable:
        type: "boolean"
      hidden:
        type: "boolean"
      sectionKey:
        type: "string"
      sectionLabel:
        type: "string"
      type:
        type: "string"
        enum:
        - "AUTOCOMPLETE"
        - "BOOL_OPTION"
        - "CHECKBOX"
        - "CHECKBOX_GROUP"
        - "CHECKBOX_GROUP_GRID"
        - "DATA_LIST"
        - "DATE"
        - "DATE_RANGE"
        - "DATETIME"
        - "DATETIME_MULTIPLE_SELECTION"
        - "DATETIME_RANGE"
        - "MULTIPLE_SELECTION"
        - "NUMBER_RANGE"
        - "NUMBER_CODE"
        - "OPTION"
        - "PRECISION_NUMBER_SIX"
        - "PRECISION_PERCENTAGE_SIX"
        - "RADIO"
        - "SECTION"
        - "TABLE"
        - "TABLE_ROW"
        - "TEXT"
        - "TEXTAREA"
        - "RICH_TEXTAREA"
        - "TYPE_QUERY_SEARCH"
  TableWebConfiguration:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/ColumnElement"
  RfqSummaryElement:
    type: "object"
    properties:
      label:
        type: "string"
      value:
        type: "array"
        items:
          type: "string"
  RfqSummaryResponseDto:
    type: "object"
    properties:
      summary:
        type: "array"
        items:
          $ref: "#/definitions/RfqSummaryElement"
      dates:
        type: "array"
        items:
          $ref: "#/definitions/RfqSummaryElement"
      notes:
        type: "array"
        items:
          $ref: "#/definitions/RfqSummaryElement"
      details:
        type: "array"
        items:
          $ref: "#/definitions/RfqSummaryElement"
      title:
        type: "string"
  NexusSearchRequest:
    type: "object"
  QueryConfiguration:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/QueryElement"
      searchRequest:
        $ref: "#/definitions/NexusSearchRequest"
  QueryElement:
    type: "object"
    properties:
      label:
        type: "string"
        readOnly: true
      key:
        type: "string"
        readOnly: true
      type:
        type: "string"
        readOnly: true
        enum:
        - "AUTOCOMPLETE"
        - "BOOL_OPTION"
        - "CHECKBOX"
        - "CHECKBOX_GROUP"
        - "CHECKBOX_GROUP_GRID"
        - "DATA_LIST"
        - "DATE"
        - "DATE_RANGE"
        - "DATETIME"
        - "DATETIME_MULTIPLE_SELECTION"
        - "DATETIME_RANGE"
        - "MULTIPLE_SELECTION"
        - "NUMBER_RANGE"
        - "NUMBER_CODE"
        - "OPTION"
        - "PRECISION_NUMBER_SIX"
        - "PRECISION_PERCENTAGE_SIX"
        - "RADIO"
        - "SECTION"
        - "TABLE"
        - "TABLE_ROW"
        - "TEXT"
        - "TEXTAREA"
        - "RICH_TEXTAREA"
        - "TYPE_QUERY_SEARCH"
  ProviderAggregatedRfqDto:
    type: "object"
    properties:
      requestedQuote:
        $ref: "#/definitions/RequestedQuoteFrontEndDto"
      rfq:
        $ref: "#/definitions/RfqDto"
      lastSentQuote:
        $ref: "#/definitions/QuoteDto"
      notionalIncreases:
        type: "array"
        items:
          $ref: "#/definitions/NotionalIncreaseExtDto"
      originalNotional:
        type: "number"
      totalNotional:
        type: "number"
      originalFee:
        type: "number"
      averageFee:
        type: "number"
      terms:
        $ref: "#/definitions/TermsDto"
      pricerRequest:
        $ref: "#/definitions/PricerRequestDto"
      quote:
        $ref: "#/definitions/QuoteDto"
  RfqRequesterOrderSubmitDto:
    type: "object"
    required:
    - "comment"
    - "currency"
    - "notional"
    properties:
      comment:
        type: "string"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      notional:
        type: "number"
  SunshineProductImportResultDto:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "OK"
        - "NOK"
      message:
        type: "string"
      valor:
        type: "integer"
        format: "int32"
      sunshineId:
        type: "integer"
        format: "int32"
  RfqSubmitTitleDto:
    type: "object"
    required:
    - "title"
    properties:
      title:
        type: "string"
  RfqResponseDto:
    type: "object"
    properties:
      rfq:
        $ref: "#/definitions/RfqDto"
      config:
        $ref: "#/definitions/WebConfiguration"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ValidationErrorDto"
  RfqDocumentSearchDto:
    type: "object"
    required:
    - "id"
    - "language"
    - "providerTenantId"
    - "status"
    - "type"
    properties:
      id:
        type: "integer"
        format: "int64"
      providerTenantId:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "KID"
        - "TERMSHEET"
        - "BIB"
        - "TARGET_MARKET_DOCUMENT"
      language:
        type: "string"
        enum:
        - "EN"
        - "DE"
        - "FR"
        - "ES"
        - "RU"
        - "IT"
      isRequested:
        type: "boolean"
      status:
        type: "string"
        enum:
        - "PENDING"
        - "UPLOADED"
        - "ACCEPTED"
        - "REJECTED"
        - "CANCELLED"
        - "EXPORTED"
        - "FAILED"
      fileName:
        type: "string"
      isFinalVersion:
        type: "boolean"
      requesterNote:
        type: "string"
      providerNote:
        type: "string"
      isRead:
        type: "boolean"
  RfqSearchDto:
    type: "object"
    required:
    - "documents"
    - "id"
    - "masterId"
    - "productType"
    properties:
      isVariation:
        type: "boolean"
      isAdjustment:
        type: "boolean"
      isHidden:
        type: "boolean"
      newEvents:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/RfqEventSearchDto"
      parentId:
        type: "string"
        format: "uuid"
      providerTenantIds:
        type: "array"
        uniqueItems: true
        items:
          type: "integer"
          format: "int64"
      upsidePreserved:
        type: "boolean"
      capPreserved:
        type: "boolean"
      direction:
        type: "string"
        enum:
        - "BULL"
        - "BEAR"
      denomination:
        type: "number"
      tenantId:
        type: "integer"
        format: "int64"
      userId:
        type: "string"
      underlyingTickers:
        type: "string"
      quotingProviderRatio:
        type: "string"
      submissionDateTime:
        type: "string"
        format: "date-time"
      title:
        type: "string"
      assigneeFullName:
        type: "string"
      creationDateTime:
        type: "string"
        format: "date-time"
      executionDateTime:
        type: "string"
        format: "date-time"
      id:
        type: "string"
        format: "uuid"
      updateDateTime:
        type: "string"
        format: "date-time"
      masterId:
        type: "string"
      requestCreatorFullName:
        type: "string"
      status:
        type: "string"
        enum:
        - "DRAFT"
        - "SUBMITTED"
        - "SENT"
        - "AMENDED"
        - "CONVERTED"
        - "SEND_FAILED"
        - "IN_PROGRESS"
        - "RECEIVED_ALL"
        - "COMPETITION_CLOSED"
        - "LAST_LOOK_REQUEST_SENT"
        - "LAST_LOOK_RESPONSE_RECEIVED"
        - "PROVIDER_ACCEPTED"
        - "PROCESSED"
        - "IN_EXECUTION"
        - "INACTIVE"
        - "REJECTED"
        - "ADJUSTMENT_SENT"
        - "ADJUSTMENT_QUOTED"
        - "ADJUSTMENT_IN_EXECUTION"
        - "ADJUSTMENT_EXECUTED"
        - "QUOTE_REJECTED"
        - "EXECUTED"
        - "CANCELLED"
        - "PRE_CANCELLED"
        - "FINAL_TERMS_RECEIVED"
        - "FINAL_TERMS_REJECTED"
        - "PRODUCT_ISSUED"
      sunshineId:
        type: "string"
      distributionType:
        type: "string"
        enum:
        - "PRIVATE_PLACEMENT"
        - "SUBSCRIPTION"
      productType:
        type: "string"
        enum:
        - "AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_AIRBAG_CERTIFICATE"
        - "AUTOCALLABLE_BONUS_CERTIFICATE"
        - "BONUS_CERTIFICATE"
        - "BRC"
        - "ABRC"
        - "CBRC"
        - "RC"
        - "ARC"
        - "CRC"
        - "PRO_NOTE"
        - "CALLABLE_PRO_NOTE"
        - "AUTOCALLABLE_PRO_NOTE"
        - "PRO_NOTE_WITH_LIMITED_PARTICIPATION"
        - "PRO_NOTE_WITH_TWIN_WIN_PARTICIPATION"
        - "GENERIC_PRODUCT"
        - "RATE_NOTE"
      sunshineProductType:
        type: "string"
      requestType:
        type: "string"
        enum:
        - "INDICATION"
        - "COMPETITION"
      solvingFor:
        type: "string"
        enum:
        - "BARRIER"
        - "BARRIER_LOWER"
        - "BARRIER_UPPER"
        - "BONUS_LEVEL"
        - "CAP"
        - "COUPON"
        - "COUPON_BARRIER"
        - "COUPON_SPREAD"
        - "COUPON_CAP"
        - "COUPON_FLOOR"
        - "EARLY_REDEMPTION_BARRIER_RATE"
        - "EARLY_REDEMPTION_EXIT_RATE"
        - "FEE_SGC_GROSS"
        - "FEE_CO_STRUCTURING"
        - "ISSUE_PRICE_LEVEL"
        - "ISSUE_PRICE_RATE"
        - "PARTICIPATION"
        - "PROTECTION"
        - "REBATE"
        - "STRIKE"
        - "TENOR"
        - "OTHER"
      underlyingExposure:
        type: "string"
        enum:
        - "BEST_OF"
        - "WORST_OF"
        - "SINGLE_UNDERLYING"
        - "BASKET"
        - "BASKET_OR_WORST_OF"
        - "NO_UNDERLYING"
      coupon:
        type: "number"
      couponMemory:
        type: "string"
        enum:
        - "YES"
        - "NO"
      couponType:
        type: "string"
        enum:
        - "FIXED"
        - "FLOAT"
        - "STEP_UP"
        - "NO_COUPON"
      earlyRedemptionObservationFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
      earlyRedemptionType:
        type: "string"
        enum:
        - "FIXED_MATURITY"
        - "CALLABLE"
        - "CALLABLE_WITH_EXIT_RATE"
        - "AUTOCALLABLE"
      notional:
        type: "number"
      settlement:
        type: "string"
        enum:
        - "CASH"
        - "PHYSICAL"
        - "CASH_PHYSICAL"
      currency:
        type: "string"
        enum:
        - "USD"
        - "CHF"
        - "EUR"
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USN"
        - "USS"
        - "USX"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      tenor:
        type: "string"
      rfqUnderlyings:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/RfqUnderlyingSearchDto"
      finalFixingDate:
        type: "string"
        format: "date"
      finalRepaymentDate:
        type: "string"
        format: "date"
      initialFixingDate:
        type: "string"
        format: "date"
      issueDate:
        type: "string"
        format: "date"
      issuePriceLevel:
        type: "number"
      issuePriceRate:
        type: "number"
      subscriptionStartDate:
        type: "string"
        format: "date"
      subscriptionEndDate:
        type: "string"
        format: "date"
      earlyRedemptionExitRate:
        type: "number"
      earlyRedemptionFirstObservationTenor:
        type: "string"
      earlyRedemptionStep:
        type: "number"
      earlyRedemptionBarrierRate:
        type: "number"
      barrierLevel1:
        type: "number"
      barrierLower:
        type: "number"
      barrierObsFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "BERMUDAN"
        - "EUROPEAN"
      barrierObsStyle:
        type: "string"
        enum:
        - "CLOSING"
        - "CONTINUOUS"
      barrierObsType:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "WORST_OF"
        - "BEST_OF"
        - "BASKET"
      barrierUpper:
        type: "number"
      barrierRebate:
        type: "number"
      strikeRate:
        type: "number"
      conditionalCoupon:
        type: "boolean"
      couponBarrier:
        type: "number"
      couponCap:
        type: "number"
      couponFloor:
        type: "number"
      couponReferenceRate:
        type: "string"
      couponSpread:
        type: "number"
      bonusLevel:
        type: "number"
      cap:
        type: "number"
      participation:
        type: "number"
      protection:
        type: "number"
      feeCoStructuring:
        type: "number"
      feeSgcGross:
        type: "number"
      feeSgcNet:
        type: "number"
      feeSubscription:
        type: "number"
      acceptedProviderName:
        type: "string"
      deadline:
        type: "string"
        format: "date-time"
      documents:
        type: "array"
        items:
          $ref: "#/definitions/RfqDocumentSearchDto"
      eisWrapper:
        type: "boolean"
      isExecutedLastLookTrade:
        type: "string"
      providerNote:
        type: "string"
      providerNotePresent:
        type: "string"
      providerCount:
        type: "string"
      quotingProviderTenantIds:
        type: "array"
        uniqueItems: true
        items:
          type: "integer"
          format: "int64"
      rndCompliantIssuer:
        type: "boolean"
      internalAssetClass:
        type: "string"
        enum:
        - "EQUITY"
        - "FIXED_INCOME"
        - "FX"
        - "COMMODITY"
        - "FUNDS"
      internalRmBusinessArea:
        type: "string"
        enum:
        - "APAC_ZH"
        - "IWM_BRAZIL"
        - "IWM_EMERGING_EUROPE"
        - "IWM_EUROPE"
        - "IWM_LAT_AM"
        - "IWM_MIDDLE_EAST_AND_AFRICA"
        - "IWM_PBI"
        - "SUB_EAM"
        - "SUB_PREMIUM_CLIENTS"
        - "SUB_WMC"
        - "VARIOUS"
      rmFullName:
        type: "string"
      internalComment:
        type: "string"
      internalCommentPresent:
        type: "string"
      isin:
        type: "string"
      ric:
        type: "string"
      valor:
        type: "string"
  RfqSearchResponseDto:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int64"
      queryTimeMs:
        type: "integer"
        format: "int64"
      data:
        type: "array"
        items:
          $ref: "#/definitions/RfqSearchDto"
  AccumulationPeriod:
    type: "object"
    properties:
      AccumulationPeriodID:
        type: "string"
      AccumulationPeriodStartDate:
        type: "string"
        format: "date-time"
      AccumulationPeriodEndDate:
        type: "string"
        format: "date-time"
      MaximumNumberOfObservationDaysForPeriod:
        type: "integer"
        format: "int64"
      MaximumNumberOfSharesForPeriod:
        type: "integer"
        format: "int64"
      PeriodSettlementDate:
        type: "string"
        format: "date-time"
      GuaranteedAccumulationFlagForPeriod:
        type: "boolean"
  AccumulationPeriods:
    type: "object"
    properties:
      AccumulationPeriod:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "AccumulationPeriod"
          $ref: "#/definitions/AccumulationPeriod"
  Accumulator:
    type: "object"
    properties:
      AccumulatorID:
        type: "string"
      Tenor:
        type: "string"
      DecumulatorFlag:
        type: "boolean"
      Notional:
        type: "number"
      AccumulationLeverage:
        type: "number"
      MaximumSettlement:
        type: "number"
      AccumulationFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "OTHER"
      AccumulationSettlementFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "OTHER"
      AccumulationSettlementLag:
        type: "string"
      GuaranteedAccumulationTenor:
        type: "string"
      NumberOfSharesPerDay:
        type: "integer"
        format: "int64"
      MaximumNumberOfShares:
        type: "integer"
        format: "int64"
      MaximumNumberOfObservationDays:
        type: "integer"
        format: "int64"
      StrikeLevelPct:
        type: "number"
      KnockOutAutocallLevelPct:
        type: "number"
      Comment:
        type: "string"
      AccumulatorUnderlying:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "AccumulatorUnderlying"
          $ref: "#/definitions/UnderlyingInfo"
      AccumulationPeriods:
        $ref: "#/definitions/AccumulationPeriods"
  Address:
    type: "object"
    properties:
      Street:
        type: "string"
      StreetExtra:
        type: "string"
      PostalCode:
        type: "string"
      City:
        type: "string"
      Country:
        type: "string"
        enum:
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
  Admin:
    type: "object"
    properties:
      DefinitiveTermsFlag:
        type: "boolean"
      EffectiveFromDate:
        type: "string"
        format: "date-time"
      AdminEvents:
        $ref: "#/definitions/AdminEvents"
  AdminEvent:
    type: "object"
    properties:
      AdminEventType:
        type: "string"
        enum:
        - "NEW_ISSUE"
        - "DATA_CORRECTION"
        - "ISSUE_INCREASE"
        - "ISSUE_DECREASE"
        - "CORPORATE_ACTION"
        - "CHANGE_OF_PARTY"
        - "DELISTING"
        - "UPDATE_TO_DEFINITIVE_TERMS"
        - "CHANGE_OF_REGULATORY_DOCUMENTS"
      AdminEventDate:
        type: "string"
        format: "date-time"
      AdminEventComment:
        type: "string"
  AdminEvents:
    type: "object"
    properties:
      AdminEvent:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "AdminEvent"
          $ref: "#/definitions/AdminEvent"
  AutoCallability:
    type: "object"
    properties:
      AutoCallabilityStructure:
        $ref: "#/definitions/AutoCallabilityStructure"
      AutocallabilitySchedule:
        $ref: "#/definitions/AutocallabilitySchedule"
  AutoCallabilityStructure:
    type: "object"
    properties:
      ObservationFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "OTHER"
      FirstObservationTenor:
        type: "string"
      TriggerExposure:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "BASKET"
        - "WORST_OF"
        - "SECOND_WORST_OF"
        - "BEST_OF"
      TriggerBarrierLevelPct:
        type: "number"
      TriggerBarrierStepPct:
        type: "number"
      TriggerRedemptionPricePct:
        type: "number"
      TriggerRedemptionStepPct:
        type: "number"
  AutoCallabilityUnderlyings:
    type: "object"
    properties:
      AutoCallabilityUnderlying:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "AutoCallabilityUnderlying"
          $ref: "#/definitions/UnderlyingInfo"
  AutocallabilityCustomSchedule:
    type: "object"
    properties:
      CustomScheduleInstanceID:
        type: "string"
      IssuerExerciseDate:
        type: "string"
        format: "date-time"
      EarlyRedemptionDate:
        type: "string"
        format: "date-time"
      EarlyRedemptionLevelPct:
        type: "number"
      ObservationDate:
        type: "array"
        readOnly: true
        items:
          type: "string"
          format: "date-time"
          xml:
            name: "ObservationDate"
      TriggerObservationDate:
        type: "string"
        format: "date-time"
      TriggerRedemptionDate:
        type: "string"
        format: "date-time"
      TriggerBarrierLevelPct:
        type: "number"
      TriggerRedemptionPricePct:
        type: "number"
      AutoCallabilityUnderlyings:
        $ref: "#/definitions/AutoCallabilityUnderlyings"
  AutocallabilitySchedule:
    type: "object"
    properties:
      BusinessDayConvention:
        type: "string"
        enum:
        - "FOLLOWING"
        - "MODIFIED_FOLLOWING"
        - "PRECEEDING"
        - "MODIFIED_PRECEEDING"
      TriggerExposure:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "BASKET"
        - "WORST_OF"
        - "SECOND_WORST_OF"
        - "BEST_OF"
      TriggerComparator:
        type: "string"
        enum:
        - "BELOW"
        - "AT_OR_BELOW"
        - "ABOVE"
        - "AT_OR_ABOVE"
      AutocallabilityCustomScheduleInstance:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "AutocallabilityCustomScheduleInstance"
          $ref: "#/definitions/AutocallabilityCustomSchedule"
      AutocallabilityIntervalSchedule:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "AutocallabilityIntervalSchedule"
          $ref: "#/definitions/Schedule"
  CHTax:
    type: "object"
    properties:
      chwithholdingTaxRate:
        type: "number"
      chiuptype:
        type: "string"
        enum:
        - "IUP"
        - "NOT_IUP"
        - "NON_DISCLOSED"
        - "OUT_OF_SCOPE"
      chtaxType:
        type: "string"
        enum:
        - "DEBT_SECURITY"
        - "EQUITY_SECURITY"
        - "FUND_SHARE"
      AnnualInterestFractionRate:
        type: "number"
      AnnualPremiumFractionRate:
        type: "number"
      CHTaxType:
        type: "string"
        enum:
        - "DEBT_SECURITY"
        - "EQUITY_SECURITY"
        - "FUND_SHARE"
      CHIUPType:
        type: "string"
        enum:
        - "IUP"
        - "NOT_IUP"
        - "NON_DISCLOSED"
        - "OUT_OF_SCOPE"
      MaturityLessThanOneYearFlag:
        type: "boolean"
      CHIssueStampTaxFlag:
        type: "boolean"
      StampTaxFeedbackFlag:
        type: "boolean"
      CHTurnoverStampTaxFlag:
        type: "boolean"
      CHWithholdingTaxRate:
        type: "number"
      SwapRateFiveYears:
        type: "number"
  CallabilitySchedule:
    type: "object"
    properties:
      CallabilityCustomScheduleInstance:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CallabilityCustomScheduleInstance"
          $ref: "#/definitions/CustomSchedule"
      CallabilityIntervalSchedule:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CallabilityIntervalSchedule"
          $ref: "#/definitions/Schedule"
  Classification:
    type: "object"
    properties:
      ClassificationSchemeType:
        type: "string"
        enum:
        - "EUSIPA"
        - "SSPA"
        - "BLOOMBERG"
        - "MOVEDIGITAL"
        - "IBTTYPECODE"
      ClassificationValue:
        type: "string"
  Collateral:
    type: "object"
    properties:
      CollateralID:
        type: "string"
      CollateralReferenceID:
        type: "object"
      ShortName:
        type: "string"
      LongName:
        type: "string"
      CollateralIdentifiers:
        $ref: "#/definitions/CollateralIdentifiers"
      Weight:
        type: "number"
      NotionalReductionWeightFlag:
        type: "boolean"
      CollateralCDSContract:
        type: "string"
        enum:
        - "EUROPEAN_CORPORATE"
        - "EMERGING_EUROPEAN_CORPORATE"
        - "ASIAN_CORPORATE"
        - "NORTH_AMERICAN_CORPORATE"
      ColollateralRatings:
        $ref: "#/definitions/ColollateralRatings"
  CollateralIdentifiers:
    type: "object"
    properties:
      CollateralIdentifier:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CollateralIdentifier"
          $ref: "#/definitions/Identifier"
  Collaterals:
    type: "object"
    properties:
      Collateral:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Collateral"
          $ref: "#/definitions/Collateral"
  ColollateralRatings:
    type: "object"
    properties:
      CollateralRating:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CollateralRating"
          $ref: "#/definitions/Rating"
  Contact:
    type: "object"
    properties:
      ContactType:
        type: "string"
        enum:
        - "ISSUER_LEGAL"
        - "ISSUER_SALES"
        - "ISSUER_TRADING"
        - "ISSUER_SECONDARY_MARKET_MAKING"
        - "ISSUER_IT"
        - "DISTRIBUTOR_LEGAL"
        - "DISTRIBUTOR_SALES"
      ContactName:
        type: "string"
      TelephoneNo:
        type: "string"
      EmailAddress:
        type: "string"
      HomePage:
        type: "string"
      Location:
        type: "string"
        enum:
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
      Address:
        $ref: "#/definitions/Address"
  Coupon:
    type: "object"
    properties:
      CouponID:
        type: "string"
      CouponType:
        type: "string"
        enum:
        - "FIXED"
        - "FLOATING"
        - "HYBRID"
      CouponReferenceID:
        type: "object"
      CouponCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      CouponAmountPct:
        type: "number"
      CouponFloorPct:
        type: "number"
      CouponCapPct:
        type: "number"
      SpreadBps:
        type: "integer"
        format: "int32"
      CouponAmountType:
        type: "string"
        enum:
        - "PCT_OF_ISSUE_PRICE"
        - "PCT_OF_NAV"
        - "PCT_OF_NOTIONAL"
        - "BULLET"
        - "P_A"
      PaymentDeferralFlag:
        type: "boolean"
      FixingEvents:
        $ref: "#/definitions/FixingEvents"
      CouponSingleSchedule:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponSingleSchedule"
          $ref: "#/definitions/CouponSingleSchedule"
      CouponCalendarSchedule:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponCalendarSchedule"
          $ref: "#/definitions/CouponCalendarSchedule"
      CouponConditions:
        $ref: "#/definitions/CouponConditions"
  CouponCalendarSchedule:
    type: "object"
    properties:
      CouponFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "BULLET"
        - "OTHER"
      CouponSchedule:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponSchedule"
          $ref: "#/definitions/CouponSchedule"
  CouponCondition:
    type: "object"
    properties:
      CouponConditionID:
        type: "string"
      CouponID:
        type: "object"
      Participation:
        type: "number"
      Comment:
        type: "string"
      CouponConditionProperties:
        $ref: "#/definitions/CouponConditionProperties"
  CouponConditionProperties:
    type: "object"
    properties:
      CouponConditionProperty:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponConditionProperty"
          $ref: "#/definitions/CouponConditionProperty"
  CouponConditionProperty:
    type: "object"
    properties:
      PropertyType:
        type: "string"
        enum:
        - "DAILY_ACCRUAL"
        - "MEMORY_EFFECT"
        - "KNOCK_IN"
        - "KNOCK_OUT"
        - "EARLY_TERMINATION"
        - "OUTPERFORMANCE"
        - "OTHER"
      PropertyLevel:
        type: "number"
      PropertyExposure:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "BASKET"
        - "WORST_OF"
        - "SECOND_WORST_OF"
        - "BEST_OF"
      CouponConditionUnderlyings:
        $ref: "#/definitions/CouponConditionUnderlyings"
      PropertyObservationStyle:
        type: "string"
        enum:
        - "CLOSING"
        - "CONTINUOUS"
      PropertyObservationFrequency:
        type: "string"
        enum:
        - "EUROPEAN"
        - "DAILY"
        - "ASIAN"
        - "BERMUDAN"
        - "AMERICAN"
      PropertyComparator:
        type: "string"
        enum:
        - "BELOW"
        - "AT_OR_BELOW"
        - "ABOVE"
        - "AT_OR_ABOVE"
      CouponConditionPropertySchedule:
        $ref: "#/definitions/CouponConditionPropertySchedule"
  CouponConditionPropertySchedule:
    type: "object"
    properties:
      CouponConditionPropertyScheduleInstance:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponConditionPropertyScheduleInstance"
          $ref: "#/definitions/CustomSchedule"
      CouponConditionPropertyIntervalSchedule:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponConditionPropertyIntervalSchedule"
          $ref: "#/definitions/Schedule"
  CouponConditionUnderlyings:
    type: "object"
    properties:
      CouponConditionUnderlying:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponConditionUnderlying"
          $ref: "#/definitions/UnderlyingInfo"
      CouponConditionReference:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponConditionReference"
          $ref: "#/definitions/ReferenceInfo"
  CouponConditions:
    type: "object"
    properties:
      CouponCreditEventCondition:
        $ref: "#/definitions/CouponCreditEventCondition"
      CouponCondition:
        $ref: "#/definitions/CouponCondition"
  CouponConventions:
    type: "object"
    properties:
      DayCountMethodType:
        type: "string"
        enum:
        - "M_ACTUAL_Y_360"
        - "M_30_Y_360"
        - "M_30_S_Y_360"
        - "M_ACTUAL_Y_365"
        - "M_ACTUAL_Y_365_L"
        - "M_ACTUAL_Y_NORMAL"
        - "M_ACTUAL_Y_ULTIMO"
        - "M_30_U_Y_360"
      BusinessDayConvention:
        type: "string"
        enum:
        - "FOLLOWING"
        - "MODIFIED_FOLLOWING"
        - "PRECEEDING"
        - "MODIFIED_PRECEEDING"
      InterestPeriodAdjustmentFlag:
        type: "boolean"
      AccrualIntervalType:
        type: "string"
        enum:
        - "FIRST_DAY_INCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_INCLUDED_LAST_DAY_EXCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_EXCLUDED"
  CouponCreditEventCondition:
    type: "object"
    properties:
      CreditEventKnockOutFlag:
        type: "boolean"
      CreditEventNotionalReductionFlag:
        type: "boolean"
      CouponObservableCreditEvents:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CouponObservableCreditEvents"
          $ref: "#/definitions/ObservableCreditEvents"
  CouponSchedule:
    type: "object"
    properties:
      ReferenceResetDate:
        type: "string"
        format: "date-time"
      AccrualBeginDate:
        type: "string"
        format: "date-time"
      AccrualEndDate:
        type: "string"
        format: "date-time"
      AccrualIntervalType:
        type: "string"
        enum:
        - "FIRST_DAY_INCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_INCLUDED_LAST_DAY_EXCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_EXCLUDED"
      FixingDate:
        type: "string"
        format: "date-time"
      PaymentDate:
        type: "string"
        format: "date-time"
  CouponSingleSchedule:
    type: "object"
    properties:
      SingleScheduleID:
        type: "string"
      ReferenceResetDate:
        type: "string"
        format: "date-time"
      AccrualBeginDate:
        type: "string"
        format: "date-time"
      AccrualEndDate:
        type: "string"
        format: "date-time"
      AccrualIntervalType:
        type: "string"
        enum:
        - "FIRST_DAY_INCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_INCLUDED_LAST_DAY_EXCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_EXCLUDED"
      FixingDate:
        type: "string"
        format: "date-time"
      PaymentDate:
        type: "string"
        format: "date-time"
  Coupons:
    type: "object"
    properties:
      HybridCouponsStructure:
        $ref: "#/definitions/HybridCouponsStructure"
      CouponsStructure:
        $ref: "#/definitions/CouponsStructure"
      CouponConventions:
        $ref: "#/definitions/CouponConventions"
      Coupon:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Coupon"
          $ref: "#/definitions/Coupon"
  CouponsStructure:
    type: "object"
    properties:
      CouponType:
        type: "string"
        enum:
        - "FIXED"
        - "FLOATING"
        - "HYBRID"
      CouponNotionalType:
        type: "string"
        enum:
        - "OUTSTANDING_NOTIONAL"
        - "CREDIT_EVENT_DEPENDENT_OUTSTANDING_NOTIONAL"
      CouponNotionalPct:
        type: "number"
      CouponFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "BULLET"
        - "OTHER"
      StepUpFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "BULLET"
        - "OTHER"
      CouponCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      CouponAmountPct:
        type: "number"
      StepUpAmountPct:
        type: "number"
      CouponAmountType:
        type: "string"
        enum:
        - "PCT_OF_ISSUE_PRICE"
        - "PCT_OF_NAV"
        - "PCT_OF_NOTIONAL"
        - "BULLET"
        - "P_A"
      SpreadBps:
        type: "integer"
        format: "int32"
      CouponReferenceID:
        type: "object"
      ProductAccrualBeginDate:
        type: "string"
        format: "date-time"
      ProductAccrualEndDate:
        type: "string"
        format: "date-time"
      ConditionalCouponFlag:
        type: "boolean"
      ConditionalMemoryFlag:
        type: "boolean"
      CouponBarrierPct:
        type: "number"
  CreditEvent:
    type: "object"
    properties:
      Comment:
        type: "string"
      ObservableCreditEvents:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "ObservableCreditEvents"
          $ref: "#/definitions/ObservableCreditEvents"
      CreditEventPeriod:
        $ref: "#/definitions/CreditEventPeriod"
  CreditEventPeriod:
    type: "object"
    properties:
      CreditEventBackstopPeriodinCalendarDays:
        type: "integer"
        format: "int64"
      CreditEventPeriodStartDate:
        type: "string"
        format: "date-time"
      CreditEventPeriodEndDate:
        type: "string"
        format: "date-time"
      IntervalType:
        type: "string"
        enum:
        - "FIRST_DAY_INCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_INCLUDED_LAST_DAY_EXCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_EXCLUDED"
      CreditEventPeriodFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "OTHER"
      BusinessDayConvention:
        type: "string"
        enum:
        - "FOLLOWING"
        - "MODIFIED_FOLLOWING"
        - "PRECEEDING"
        - "MODIFIED_PRECEEDING"
  CreditReferenceEntities:
    type: "object"
    properties:
      CDSOverlayFlag:
        type: "boolean"
      CreditReferenceExposureType:
        type: "string"
        enum:
        - "BASKET"
        - "INDEX"
        - "SINGLE"
      CreditReferenceEntity:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CreditReferenceEntity"
          $ref: "#/definitions/CreditReferenceEntity"
  CreditReferenceEntity:
    type: "object"
    properties:
      fxreferenceID:
        type: "object"
      CreditReferenceEntityID:
        type: "string"
      ReferenceID:
        type: "object"
      ShortName:
        type: "string"
      LongName:
        type: "string"
      CreditReferenceEntityIdentifiers:
        $ref: "#/definitions/CreditReferenceEntityIdentifiers"
      Weight:
        type: "number"
      NotionalReductionWeightFlag:
        type: "boolean"
      CollateralCDSContract:
        type: "string"
        enum:
        - "EUROPEAN_CORPORATE"
        - "EMERGING_EUROPEAN_CORPORATE"
        - "ASIAN_CORPORATE"
        - "NORTH_AMERICAN_CORPORATE"
      AssetType:
        type: "string"
        enum:
        - "EQUITY"
        - "INDEX"
        - "COMMODITY"
        - "CORPORATE_BOND"
        - "CURRENCY"
        - "GOVERNMENT_BOND"
        - "PREFERRED_STOCK"
      SecurityType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "SHARE"
        - "INDEX"
        - "REG_SHARE"
        - "BEARER_SHARE"
        - "DIV_CERT"
        - "ADR"
        - "GDR"
        - "FUTURE"
        - "REIT"
        - "FUND"
        - "PART_CERT"
        - "CERTIFICATE"
        - "HEDGE_FUND"
        - "SDR"
        - "FO_HF"
        - "ETF"
        - "BOND"
        - "SPOT_PRICE"
        - "CURRENCY"
        - "INTEREST_RATE"
        - "PREFERRED_SHARE"
      CurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      FXReferenceID:
        type: "object"
      ReferenceHolidayScheduleCountryCode:
        type: "string"
      CountryCode:
        type: "string"
      ReferenceEntityRatings:
        $ref: "#/definitions/ReferenceEntityRatings"
  CreditReferenceEntityIdentifiers:
    type: "object"
    properties:
      CreditReferenceEntityIdentifier:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "CreditReferenceEntityIdentifier"
          $ref: "#/definitions/Identifier"
  CustomSchedule:
    type: "object"
    properties:
      CustomScheduleInstanceID:
        type: "string"
      IssuerExerciseDate:
        type: "string"
        format: "date-time"
      EarlyRedemptionDate:
        type: "string"
        format: "date-time"
      EarlyRedemptionLevelPct:
        type: "number"
      ObservationDate:
        type: "array"
        readOnly: true
        items:
          type: "string"
          format: "date-time"
          xml:
            name: "ObservationDate"
      TriggerObservationDate:
        type: "string"
        format: "date-time"
      TriggerRedemptionDate:
        type: "string"
        format: "date-time"
      TriggerBarrierLevelPct:
        type: "number"
      TriggerRedemptionPricePct:
        type: "number"
  Dates:
    type: "object"
    properties:
      TradeDate:
        type: "string"
        format: "date-time"
      InitialFixingBeginDate:
        type: "string"
        format: "date-time"
      InitialFixingEndDate:
        type: "string"
        format: "date-time"
      InitialFixingType:
        type: "string"
        enum:
        - "LIVE_STRIKE"
        - "CLOSING"
      IssueDate:
        type: "string"
        format: "date-time"
      FinalFixingDate:
        type: "string"
        format: "date-time"
      RedemptionDate:
        type: "string"
        format: "date-time"
      Tenor:
        type: "string"
      SettlementLag:
        type: "string"
  Document:
    type: "object"
    properties:
      DocumentType:
        type: "string"
        enum:
        - "PROSPECTUS"
        - "TERMSHEET"
        - "FLASH"
        - "KID"
        - "PRC"
        - "OTHER"
      DocumentAvailabilityDate:
        type: "string"
        format: "date-time"
      DocumentLanguage:
        type: "string"
        enum:
        - "GERMAN"
        - "ENGLISH"
        - "FRENCH"
        - "ITALIAN"
        - "SPANISH"
      DocumentLink:
        type: "string"
      DocumentIsActiveFlag:
        type: "boolean"
  EUTax:
    type: "object"
    properties:
      eutaxType:
        type: "string"
        enum:
        - "CPP_WITH_GC"
        - "CPP_WITHOUT_GC_EQUITY"
        - "CPP_WITHOUT_GC_INTEREST"
        - "CPP_WITHOUT_GC_INVESTMENT_OUT_OF_SCOPE"
        - "CPP_WITHOUT_GC_INVESTMENT_IN_SCOPE"
        - "REV_CON_WITH_SC"
        - "REV_CON_WITHOUT_SC_OUT_OF_SCOPE"
        - "REV_CON_WITHOUT_SC_IN_SCOPE"
        - "CERTIFICATES_ON_SHARES"
        - "CERTIFICATES_ON_BOND_BASKET_GE_5"
        - "CERTIFICATES_ON_BOND_BASKET_LT_5"
        - "CERTIFICATES_ON_FUNDS_BASKET_GE_5"
        - "CERTIFICATES_ON_FUNDS_BASKET_LT_5"
        - "CERTIFICATE_ON_PRECIOUS_METALS"
        - "CATASTROPHE_DERIVATIVES_WITHOUT_SC"
        - "CATASTROPHE_DERIVATIVES_WITH_SC"
        - "CP_CATASTROPHE_DERIVATIVES_WITHOUT_SC"
        - "CP_CATASTROPHE_DERIVATIVES_WITH_SC"
        - "STRUCTURED_CREDIT_DERIVATIVES"
        - "INTEREST_HYBRID_STRUCTURED_PRODUCT"
        - "NONE_INTEREST_HYBRID_STRUCTURED_PRODUCT"
      eutaxApplicabilityType:
        type: "string"
        enum:
        - "IN_SCOPE_FOR_TAX"
        - "NO_TAX"
        - "IN_SCOPE_NO_CH_TAX"
        - "OUT_OF_SCOPE"
        - "UNKNOWN"
        - "NOT_KNOWN_CH_TAX"
        - "NOT_KNOWN_NO_CH_TAX"
        - "NOT_KNOWN_CH_TAX_OTHER_NATIONAL_GUIDELINE_AVAILABLE"
        - "NOT_KNOWN_CH_NO_TAX_OTHER_NATIONAL_GUIDELINE_AVAILABLE"
        - "NOT_KNOWN_CH_UNKNOWN_OTHER_NATIONAL_GUIDELINE_AVAILABLE"
      EUTaxType:
        type: "string"
        enum:
        - "CPP_WITH_GC"
        - "CPP_WITHOUT_GC_EQUITY"
        - "CPP_WITHOUT_GC_INTEREST"
        - "CPP_WITHOUT_GC_INVESTMENT_OUT_OF_SCOPE"
        - "CPP_WITHOUT_GC_INVESTMENT_IN_SCOPE"
        - "REV_CON_WITH_SC"
        - "REV_CON_WITHOUT_SC_OUT_OF_SCOPE"
        - "REV_CON_WITHOUT_SC_IN_SCOPE"
        - "CERTIFICATES_ON_SHARES"
        - "CERTIFICATES_ON_BOND_BASKET_GE_5"
        - "CERTIFICATES_ON_BOND_BASKET_LT_5"
        - "CERTIFICATES_ON_FUNDS_BASKET_GE_5"
        - "CERTIFICATES_ON_FUNDS_BASKET_LT_5"
        - "CERTIFICATE_ON_PRECIOUS_METALS"
        - "CATASTROPHE_DERIVATIVES_WITHOUT_SC"
        - "CATASTROPHE_DERIVATIVES_WITH_SC"
        - "CP_CATASTROPHE_DERIVATIVES_WITHOUT_SC"
        - "CP_CATASTROPHE_DERIVATIVES_WITH_SC"
        - "STRUCTURED_CREDIT_DERIVATIVES"
        - "INTEREST_HYBRID_STRUCTURED_PRODUCT"
        - "NONE_INTEREST_HYBRID_STRUCTURED_PRODUCT"
      EUTaxApplicabilityType:
        type: "string"
        enum:
        - "IN_SCOPE_FOR_TAX"
        - "NO_TAX"
        - "IN_SCOPE_NO_CH_TAX"
        - "OUT_OF_SCOPE"
        - "UNKNOWN"
        - "NOT_KNOWN_CH_TAX"
        - "NOT_KNOWN_NO_CH_TAX"
        - "NOT_KNOWN_CH_TAX_OTHER_NATIONAL_GUIDELINE_AVAILABLE"
        - "NOT_KNOWN_CH_NO_TAX_OTHER_NATIONAL_GUIDELINE_AVAILABLE"
        - "NOT_KNOWN_CH_UNKNOWN_OTHER_NATIONAL_GUIDELINE_AVAILABLE"
  FirstCouponStructure:
    type: "object"
    properties:
      CouponType:
        type: "string"
        enum:
        - "FIXED"
        - "FLOATING"
        - "HYBRID"
      CouponFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "BULLET"
        - "OTHER"
      CouponCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      CouponAmountPct:
        type: "number"
      CouponAmountType:
        type: "string"
        enum:
        - "PCT_OF_ISSUE_PRICE"
        - "PCT_OF_NAV"
        - "PCT_OF_NOTIONAL"
        - "BULLET"
        - "P_A"
      SpreadBps:
        type: "integer"
        format: "int32"
      CouponReferenceID:
        type: "object"
      FirstCouponTenor:
        type: "string"
  FixingEvents:
    type: "object"
    properties:
      FixingEvent:
        type: "array"
        readOnly: true
        items:
          type: "string"
          xml:
            name: "FixingEvent"
          enum:
          - "EARLY_REDEMPTION"
          - "MEMORY_EFFECT"
          - "LIBOR_FIXING"
          - "DAILY_ACCRUAL"
          - "KNOCK_IN_EVENT"
          - "KNOCK_OUT_EVENT"
          - "OUTSTANDING_PRINCIPAL_AMOUNT"
  HybridCouponsStructure:
    type: "object"
    properties:
      HybridCouponType:
        type: "string"
        enum:
        - "FIXED_2_FLOATING"
        - "FLOATING_2_FIXED"
        - "FIXED_2_FIXED"
        - "FLOATING_2_FLOATING"
      CouponNotionalType:
        type: "string"
        enum:
        - "OUTSTANDING_NOTIONAL"
        - "CREDIT_EVENT_DEPENDENT_OUTSTANDING_NOTIONAL"
      CouponNotionalPct:
        type: "number"
      ProductAccrualBeginDate:
        type: "string"
        format: "date-time"
      ProductAccrualEndDate:
        type: "string"
        format: "date-time"
      FirstCouponStructure:
        $ref: "#/definitions/FirstCouponStructure"
      SecondCouponStructure:
        $ref: "#/definitions/SecondCouponStructure"
  IRS871M:
    type: "object"
    properties:
      ContractComplexityType:
        type: "string"
        enum:
        - "SIMPLE_CONTRACT"
        - "COMPLEX_CONTRACT"
      IssuersInstrumentScope:
        type: "string"
        enum:
        - "IN_SCOPE"
        - "OUT_OF_SCOPE_BUT_POTENTIALLY_IN_SCOPE_FOR_COMBINED_TRANSACTIONS"
        - "EXEMPT_QUALIFIED_INDEX"
        - "NOT_APPLICABLE"
      TaxPaidByIssuerFlag:
        type: "boolean"
  Identifier:
    type: "object"
    properties:
      IdentifierType:
        type: "string"
        enum:
        - "SUNSHINE_ID"
        - "SPEX_ID"
        - "VALOR"
        - "ISIN"
        - "RIC"
        - "COMMON_CODE"
        - "SIX_SYMBOL"
        - "BLOOMBERG_TICKER"
        - "CUSIP"
        - "INDEX_SPONSOR_LICENSOR"
        - "EXCHANGE"
        - "AU_GLOBUS"
        - "CL_GLOBUS"
        - "HK_GLOBUS"
        - "ID_GLOBUS"
        - "JP_GLOBUS"
        - "SG_GLOBUS"
        - "SH_GLOBUS"
        - "UK_GLOBUS"
        - "SPIRIT_ID"
        - "SPUTNIK_ID"
        - "SPACE_ID"
        - "WKN"
        - "WFT_ID"
        - "PERSHING"
        - "CCAT_ID"
        - "IBTID"
        - "CSFID"
        - "PRICING_ID"
        - "PRICING_ID_INITIAL"
        - "REGULATORY_ID"
      IdentifierValue:
        type: "string"
  IssuerCallability:
    type: "object"
    properties:
      IssuerCallabilityStructure:
        $ref: "#/definitions/IssuerCallabilityStructure"
      CallabilitySchedule:
        $ref: "#/definitions/CallabilitySchedule"
  IssuerCallabilityStructure:
    type: "object"
    properties:
      ObservationFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "OTHER"
      FirstObservationTenor:
        type: "string"
      TriggerRedemptionPricePct:
        type: "number"
      TriggerRedemptionStepPct:
        type: "number"
  IssuerRatings:
    type: "object"
    properties:
      IssuerRating:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "IssuerRating"
          $ref: "#/definitions/Rating"
  IssuerRegulators:
    type: "object"
    properties:
      Regulator:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Regulator"
          $ref: "#/definitions/Regulator"
  Listing:
    type: "object"
    properties:
      ShowOnBloombergFlag:
        type: "boolean"
      ShowOnTelekursFlag:
        type: "boolean"
      ShowOnReutersFlag:
        type: "boolean"
  MaturityModifiers:
    type: "object"
    properties:
      CreditEvent:
        $ref: "#/definitions/CreditEvent"
      IssuerCallability:
        $ref: "#/definitions/IssuerCallability"
      AutoCallability:
        $ref: "#/definitions/AutoCallability"
  MiFIDCosts:
    type: "object"
    properties:
      EntryCostPct:
        type: "number"
      RecurringCostPct:
        type: "number"
      ExitCostPct:
        type: "number"
  MoveDataModel:
    type: "object"
    properties:
      Product:
        $ref: "#/definitions/Product"
      Payoff:
        $ref: "#/definitions/Payoff"
      Transaction:
        $ref: "#/definitions/Transaction"
    xml:
      name: "MoveDataModel"
  NotionalAtRedemption:
    type: "object"
    properties:
      PaymentAmountPct:
        type: "number"
      PaymentCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      EarlyRedemptionFlag:
        type: "boolean"
      CapitalProtectionFlag:
        type: "boolean"
      CapitalProtectionLevelPct:
        type: "number"
      ShareConversionFlag:
        type: "boolean"
      CollateralCreditEventDependencyFlag:
        type: "boolean"
      FinalFixingDate:
        type: "string"
        format: "date-time"
      RedemptionDate:
        type: "string"
        format: "date-time"
  ObservableCreditEvents:
    type: "object"
    properties:
      CreditEventType:
        type: "array"
        readOnly: true
        items:
          type: "string"
          xml:
            name: "CreditEventType"
          enum:
          - "BANKRUPTCY"
          - "FAILURE_TO_PAY"
          - "RESTRUCTURING"
          - "OBLIGATION_ACCELERATION"
          - "REPUDIATION_OR_MORATORIUM"
  OptionProperties:
    type: "object"
    properties:
      Property:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Property"
          $ref: "#/definitions/Property"
  OptionPropertySchedule:
    type: "object"
    properties:
      OptionPropertyScheduleInstance:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "OptionPropertyScheduleInstance"
          $ref: "#/definitions/CustomSchedule"
      OptionPropertyIntervalSchedule:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "OptionPropertyIntervalSchedule"
          $ref: "#/definitions/Schedule"
  Party:
    type: "object"
    properties:
      tkpartyKey:
        type: "string"
      sispartyBPId:
        type: "string"
      bbcompanyId:
        type: "string"
      PartyType:
        type: "string"
        enum:
        - "CALCULATION_AGENT"
        - "ISSUER"
        - "MARKET_MAKER"
        - "CLEARING_AND_SETTLEMENT"
        - "LEAD_MANAGER"
        - "CO_LEAD_MANAGER"
        - "MAIN_PAYING_AGENT"
        - "SUB_PAYING_AGENT"
        - "GUARANTOR"
        - "TRUSTEE"
        - "CUSTODY"
        - "LISTING_AUTHORITY"
        - "COLLATERAL_PROVIDER"
      LegalEntityID:
        type: "string"
      TKPartyKey:
        type: "string"
      SISPartyBPId:
        type: "string"
      BBCompanyId:
        type: "string"
      PartyName:
        type: "string"
      PartyAreaCode:
        type: "string"
      PartyLocation:
        type: "string"
      CertificationType:
        type: "string"
        enum:
        - "PERMANENT_GLOBAL_CERTIFICATE"
        - "TECHNICAL_GLOBAL_CERTIFICATE"
        - "PHYSICAL"
        - "UNCERTIFICATED_SECURITIES"
        - "GLOBAL_CERTIFICATE"
        - "OTHER"
  Payments:
    type: "object"
    properties:
      Coupons:
        $ref: "#/definitions/Coupons"
  Payoff:
    type: "object"
    properties:
      NotionalAtRedemption:
        $ref: "#/definitions/NotionalAtRedemption"
      PayoffConventions:
        $ref: "#/definitions/PayoffConventions"
      PayoffFeatures:
        $ref: "#/definitions/PayoffFeatures"
      PayoffOptions:
        $ref: "#/definitions/PayoffOptions"
      Underlyings:
        $ref: "#/definitions/Underlyings"
      References:
        $ref: "#/definitions/References"
      CreditReferenceEntities:
        $ref: "#/definitions/CreditReferenceEntities"
      Collaterals:
        $ref: "#/definitions/Collaterals"
      PayoffFees:
        $ref: "#/definitions/PayoffFees"
      Payments:
        $ref: "#/definitions/Payments"
  PayoffConventions:
    type: "object"
    properties:
      DayCountMethodType:
        type: "string"
        enum:
        - "M_ACTUAL_Y_360"
        - "M_30_Y_360"
        - "M_30_S_Y_360"
        - "M_ACTUAL_Y_365"
        - "M_ACTUAL_Y_365_L"
        - "M_ACTUAL_Y_NORMAL"
        - "M_ACTUAL_Y_ULTIMO"
        - "M_30_U_Y_360"
      BusinessDayConventionType:
        type: "string"
        enum:
        - "FOLLOWING"
        - "MODIFIED_FOLLOWING"
        - "PRECEEDING"
        - "MODIFIED_PRECEEDING"
      ProductHolidayScheduleCountryCode:
        type: "string"
        enum:
        - "AD"
        - "AE"
        - "AF"
        - "AG"
        - "AI"
        - "AL"
        - "AM"
        - "AN"
        - "AO"
        - "AQ"
        - "AR"
        - "AS"
        - "AT"
        - "AU"
        - "AW"
        - "AX"
        - "AZ"
        - "BA"
        - "BB"
        - "BD"
        - "BE"
        - "BF"
        - "BG"
        - "BH"
        - "BI"
        - "BJ"
        - "BL"
        - "BM"
        - "BN"
        - "BO"
        - "BQ"
        - "BR"
        - "BS"
        - "BT"
        - "BV"
        - "BW"
        - "BY"
        - "BZ"
        - "CA"
        - "CC"
        - "CD"
        - "CF"
        - "CG"
        - "CH"
        - "CI"
        - "CK"
        - "CL"
        - "CM"
        - "CN"
        - "CO"
        - "CR"
        - "CU"
        - "CV"
        - "CW"
        - "CX"
        - "CY"
        - "CZ"
        - "DE"
        - "DJ"
        - "DK"
        - "DM"
        - "DO"
        - "DZ"
        - "EC"
        - "EE"
        - "EG"
        - "EH"
        - "ER"
        - "ES"
        - "ET"
        - "FI"
        - "FJ"
        - "FK"
        - "FM"
        - "FO"
        - "FR"
        - "GA"
        - "GB"
        - "GD"
        - "GE"
        - "GF"
        - "GG"
        - "GH"
        - "GI"
        - "GL"
        - "GM"
        - "GN"
        - "GP"
        - "GQ"
        - "GR"
        - "GS"
        - "GT"
        - "GU"
        - "GW"
        - "GY"
        - "HK"
        - "HM"
        - "HN"
        - "HR"
        - "HT"
        - "HU"
        - "ID"
        - "IE"
        - "IL"
        - "IM"
        - "IN"
        - "IO"
        - "IQ"
        - "IR"
        - "IS"
        - "IT"
        - "JE"
        - "JM"
        - "JO"
        - "JP"
        - "KE"
        - "KG"
        - "KH"
        - "KI"
        - "KM"
        - "KN"
        - "KP"
        - "KR"
        - "KW"
        - "KY"
        - "KZ"
        - "LA"
        - "LB"
        - "LC"
        - "LI"
        - "LK"
        - "LR"
        - "LS"
        - "LT"
        - "LU"
        - "LV"
        - "LY"
        - "MA"
        - "MC"
        - "MD"
        - "ME"
        - "MF"
        - "MG"
        - "MH"
        - "MK"
        - "ML"
        - "MM"
        - "MN"
        - "MO"
        - "MP"
        - "MQ"
        - "MR"
        - "MS"
        - "MT"
        - "MU"
        - "MV"
        - "MW"
        - "MX"
        - "MY"
        - "MZ"
        - "NA"
        - "NC"
        - "NE"
        - "NF"
        - "NG"
        - "NI"
        - "NL"
        - "NO"
        - "NP"
        - "NR"
        - "NU"
        - "NZ"
        - "OM"
        - "PA"
        - "PE"
        - "PF"
        - "PG"
        - "PH"
        - "PK"
        - "PL"
        - "PM"
        - "PN"
        - "PR"
        - "PS"
        - "PT"
        - "PW"
        - "PY"
        - "QA"
        - "RE"
        - "RO"
        - "RS"
        - "RU"
        - "RW"
        - "SA"
        - "SB"
        - "SC"
        - "SD"
        - "SE"
        - "SG"
        - "SH"
        - "SI"
        - "SJ"
        - "SK"
        - "SL"
        - "SM"
        - "SN"
        - "SO"
        - "SR"
        - "SS"
        - "ST"
        - "SV"
        - "SX"
        - "SY"
        - "SZ"
        - "TC"
        - "TD"
        - "TF"
        - "TG"
        - "TH"
        - "TJ"
        - "TK"
        - "TL"
        - "TM"
        - "TN"
        - "TO"
        - "TR"
        - "TT"
        - "TV"
        - "TW"
        - "TZ"
        - "UA"
        - "UG"
        - "UM"
        - "US"
        - "UY"
        - "UZ"
        - "VA"
        - "VC"
        - "VE"
        - "VG"
        - "VI"
        - "VN"
        - "VU"
        - "WF"
        - "WS"
        - "YE"
        - "YT"
        - "ZA"
        - "ZM"
        - "ZW"
      MultiUnderlyingObservationDayDefinition:
        type: "string"
        enum:
        - "ALL_UNDERLYINGS_TRADING"
        - "AT_LEAST_ONE_UNDERLYING_TRADING"
        - "NOT_APPLICABLE"
  PayoffFeatures:
    type: "object"
    properties:
      clnrecoveryType:
        type: "string"
        enum:
        - "ZERO_RECOVERY"
        - "FIRST_TO_DEFAULT"
        - "FLOATING"
      PayoffNotional:
        type: "number"
      Denomination:
        type: "number"
      EarlyRedemptionType:
        type: "string"
        enum:
        - "ISSUER_CALLABLE"
        - "AUTOCALLABLE"
        - "NON_CALLABLE"
        - "LINKED_TO_CREDIT_EVENT"
      IssuerMaturityExtensionFlag:
        type: "boolean"
      IssuerMaturityDeferralFlag:
        type: "boolean"
      CollateralEventAttachmentThresholdPct:
        type: "number"
      CollateralEventAttachmentThreshold:
        type: "integer"
        format: "int64"
      CollateralEventDetachmentThresholdPct:
        type: "number"
      CollateralEventDetachmentThreshold:
        type: "integer"
        format: "int64"
      CDSOverlayFlag:
        type: "boolean"
      CLNRecoveryType:
        type: "string"
        enum:
        - "ZERO_RECOVERY"
        - "FIRST_TO_DEFAULT"
        - "FLOATING"
      InvestorPuttableFlag:
        type: "boolean"
      PayoffCurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      QuantoFlag:
        type: "boolean"
      CapLevel:
        type: "number"
      CapLevelPct:
        type: "number"
      FloorLevel:
        type: "number"
      FloorLevelPct:
        type: "number"
      QuotationType:
        type: "string"
        enum:
        - "PCT"
        - "UNITS"
      MaturityModifiers:
        $ref: "#/definitions/MaturityModifiers"
  PayoffFees:
    type: "object"
    properties:
      Fee:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Fee"
          $ref: "#/definitions/Fee"
  PayoffOptions:
    type: "object"
    properties:
      Tracker:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Tracker"
          $ref: "#/definitions/Tracker"
      Accumulator:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Accumulator"
          $ref: "#/definitions/Accumulator"
      Option:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Option"
          $ref: "#/definitions/Option"
  ProductClassifications:
    type: "object"
    properties:
      Classification:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Classification"
          $ref: "#/definitions/Classification"
  ProductContacts:
    type: "object"
    properties:
      Contact:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Contact"
          $ref: "#/definitions/Contact"
  ProductDistribution:
    type: "object"
    properties:
      prcexplanation:
        type: "string"
      sriexplanation:
        type: "string"
      ProductOfferings:
        $ref: "#/definitions/ProductOfferings"
      PRC:
        type: "string"
      PRCExplanation:
        type: "string"
      SRI:
        type: "string"
      SRIExplanation:
        type: "string"
      TargetMarkets:
        $ref: "#/definitions/TargetMarkets"
      SellingRestrictions:
        $ref: "#/definitions/SellingRestrictions"
  ProductDocumentation:
    type: "object"
    properties:
      Document:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Document"
          $ref: "#/definitions/Document"
  ProductIdentifiers:
    type: "object"
    properties:
      ProductIdentifier:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "ProductIdentifier"
          $ref: "#/definitions/Identifier"
  ProductInformation:
    type: "object"
    properties:
      ShortName:
        type: "string"
      LongName:
        type: "string"
      ProductType:
        type: "string"
        enum:
        - "BONUS_CERTIFICATE"
        - "REVERSE_CONVERTIBLE"
        - "BARRIER_REVERSE_CONVERTIBLE"
        - "CAPITAL_PROTECTION_CERTIFICATE_WITH_PARTICIPATION"
        - "BARRIER_CAPITAL_PROTECTION_CERTIFICATE"
        - "CAPITAL_PROTECTION_CERTIFICATE_WITH_TWIN_WIN"
        - "CAPITAL_PROTECTION_CERTIFICATE_WITH_COUPON"
        - "DISCOUNT_CERTIFICATE"
        - "BARRIER_DISCOUNT_CERTIFICATE"
        - "EXPRESS_CERTIFICATE_WITHOUT_BARRIERS"
        - "BARRIER_EXPRESS_CERTIFICATE"
        - "TRACKER_CERTIFICATE"
        - "OUTPERFORMANCE_CERTIFICATE"
        - "BONUS_OUTPERFORMANCE_CERTIFICATE"
        - "TWIN_WIN_CERTIFICATE"
        - "REFERENCE_ENTITY_CERTIFICATE_WITH_CONDITIONAL_CAPITAL_PROTECTION"
        - "REFERENCE_ENTITY_CERTIFICATE_WITH_YIELD_ENHANCEMENT"
        - "REFERENCE_ENTITY_CERTIFICATE_WITH_PARTICIPATION"
        - "WARRANT"
        - "SPREAD_WARRANT"
        - "WARRANT_WITH_KNOCK_OUT"
        - "MINI_FUTURE"
        - "CONSTANT_LEVERAGE_CERTIFICATE"
      ProductCategory:
        type: "string"
        enum:
        - "CAPITAL_PROTECTION"
        - "YIELD_ENHANCEMENT"
        - "PARTICIPATION"
        - "INVESTMENT_PRODUCTS_WITH_REFERENCE_ENTITIES"
        - "LEVERAGE"
      ProductCurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      Notional:
        type: "number"
      Denomination:
        type: "number"
      IssuedUnits:
        type: "integer"
        format: "int64"
      IssuePrice:
        type: "number"
      IssuePricePct:
        type: "number"
      DistributionType:
        type: "string"
        enum:
        - "PRIVATE_PLACEMENT"
        - "SUBSCRIPTION"
      CapitalProtectionType:
        type: "string"
        enum:
        - "CAPITAL_PROTECTION"
        - "CONDITIONAL_CAPITAL_PROTECTION"
        - "NO_CAPITAL_PROTECTION"
        - "LEVERAGED"
        - "FULL_MINIMUM_PAYMENT_AT_MATURITY"
        - "CONTINGENT_MINIMUM_PAYMENT_AT_MATURITY"
        - "NO_MINIMUM_PAYMENT_AT_MATURITY"
        - "PARTIAL_MINIMUM_PAYMENT_AT_MATURITY"
        - "UNKNOWN"
      SettlementType:
        type: "string"
        enum:
        - "CASH"
        - "PHYSICAL"
        - "CASH_OR_SECURITIES_DEPEND_UNDERLYING_PRICE"
      FractionSettlementType:
        type: "string"
        enum:
        - "CASH_SETTLEMENT"
        - "NO_SETTLEMENT"
        - "ROUNDING"
        - "TRUNCATION"
      ProductWrapper:
        type: "string"
        enum:
        - "OTC"
        - "NOTE"
      CollateralisationType:
        type: "string"
        enum:
        - "NO_COLLATERALISATION"
        - "COSI_COLLATERALISATION"
        - "TCM_COLLATERALISATION"
        - "OTHER_COLLATERALISATION"
      Dates:
        $ref: "#/definitions/Dates"
      Subscription:
        $ref: "#/definitions/Subscription"
      ProductClassifications:
        $ref: "#/definitions/ProductClassifications"
      ProductIdentifiers:
        $ref: "#/definitions/ProductIdentifiers"
  ProductIssuer:
    type: "object"
    properties:
      IssuerName:
        type: "string"
      IssuerRegulators:
        $ref: "#/definitions/IssuerRegulators"
      IssuerRatings:
        $ref: "#/definitions/IssuerRatings"
  ProductLegalInformation:
    type: "object"
    properties:
      LegalSecurityType:
        type: "string"
        enum:
        - "BEARER_CERTIFICATE"
        - "REGISTERED_INSTRUMENT"
        - "ORDER_INSTRUMENT"
        - "OTHER"
      SecurityRankingType:
        type: "string"
        enum:
        - "SENIOR_SECURED_BOND"
        - "SENIOR_UNSECURED"
        - "SENIOR_SUBORDINATED"
        - "JUNIOR_SUBORDINATED"
        - "SECURED_BOND"
        - "GUARANTEED_BOND"
      JurisdictionAreaCode:
        type: "string"
      GoverningLaw:
        type: "string"
        enum:
        - "SWISS_LAW"
        - "ENGLISH_LAW"
      LegalVenue:
        type: "string"
        enum:
        - "ZURICH_SWITZERLAND"
      IssuerProgramme:
        type: "string"
  ProductOffering:
    type: "object"
    properties:
      Distributor:
        type: "string"
        enum:
        - "CSPB"
      Offering:
        type: "string"
        enum:
        - "MASTERLIST"
        - "STRATEGIC_OFFERING"
  ProductOfferings:
    type: "object"
    properties:
      ProductOffering:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "ProductOffering"
          $ref: "#/definitions/ProductOffering"
  ProductParties:
    type: "object"
    properties:
      Party:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Party"
          $ref: "#/definitions/Party"
  ProductTax:
    type: "object"
    properties:
      chtax:
        $ref: "#/definitions/CHTax"
      eutax:
        $ref: "#/definitions/EUTax"
      uktax:
        $ref: "#/definitions/UKTax"
      ustax:
        $ref: "#/definitions/USTax"
      InitialBondFloorLevelPct:
        type: "number"
      FinalBondFloorLevelPct:
        type: "number"
      CHTax:
        $ref: "#/definitions/CHTax"
      UKTax:
        $ref: "#/definitions/UKTax"
      EUTax:
        $ref: "#/definitions/EUTax"
      USTax:
        $ref: "#/definitions/USTax"
  Property:
    type: "object"
    properties:
      PropertyType:
        type: "string"
        enum:
        - "STRIKE"
        - "KNOCK_IN_BARRIER"
        - "KNOCK_OUT_BARRIER"
        - "LOCK_IN"
        - "EARLY_REDEMPTION"
        - "CAP"
        - "FLOOR"
      PropertyLevelPct:
        type: "number"
      PropertyExposure:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "BASKET"
        - "WORST_OF"
        - "SECOND_WORST_OF"
        - "BEST_OF"
      PropertyRebatePct:
        type: "number"
      PropertyUnderlyings:
        $ref: "#/definitions/PropertyUnderlyings"
      PropertyObservationStyle:
        type: "string"
        enum:
        - "CLOSING"
        - "CONTINUOUS"
      PropertyObservationFrequency:
        type: "string"
        enum:
        - "EUROPEAN"
        - "DAILY"
        - "ASIAN"
        - "BERMUDAN"
        - "AMERICAN"
      PropertyComparator:
        type: "string"
        enum:
        - "BELOW"
        - "AT_OR_BELOW"
        - "ABOVE"
        - "AT_OR_ABOVE"
      OptionPropertySchedule:
        $ref: "#/definitions/OptionPropertySchedule"
  PropertyUnderlyings:
    type: "object"
    properties:
      OptionPropertyUnderlying:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "OptionPropertyUnderlying"
          $ref: "#/definitions/UnderlyingInfo"
  Rating:
    type: "object"
    properties:
      RatingAgency:
        type: "string"
        enum:
        - "MOODY"
        - "SP"
        - "FITCH"
      RatingValue:
        type: "string"
      RatingDate:
        type: "string"
        format: "date-time"
  Reference:
    type: "object"
    properties:
      fxreferenceID:
        type: "object"
      ReferenceID:
        type: "string"
      ShortName:
        type: "string"
      LongName:
        type: "string"
      ReferenceIdentifiers:
        $ref: "#/definitions/ReferenceIdentifiers"
      InitialFixingDate:
        type: "string"
        format: "date-time"
      InitialFixingLevel:
        type: "number"
      AssetType:
        type: "string"
        enum:
        - "EQUITY"
        - "INDEX"
        - "COMMODITY"
        - "CORPORATE_BOND"
        - "CURRENCY"
        - "GOVERNMENT_BOND"
        - "PREFERRED_STOCK"
      SecurityType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "SHARE"
        - "INDEX"
        - "REG_SHARE"
        - "BEARER_SHARE"
        - "DIV_CERT"
        - "ADR"
        - "GDR"
        - "FUTURE"
        - "REIT"
        - "FUND"
        - "PART_CERT"
        - "CERTIFICATE"
        - "HEDGE_FUND"
        - "SDR"
        - "FO_HF"
        - "ETF"
        - "BOND"
        - "SPOT_PRICE"
        - "CURRENCY"
        - "INTEREST_RATE"
        - "PREFERRED_SHARE"
      CurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      FXReferenceID:
        type: "object"
      ReferenceHolidayScheduleCountryCode:
        type: "string"
      CountryCode:
        type: "string"
  ReferenceEntityRatings:
    type: "object"
    properties:
      ReferenceEntityRating:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "ReferenceEntityRating"
          $ref: "#/definitions/Rating"
  ReferenceIdentifiers:
    type: "object"
    properties:
      ReferenceIdentifier:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "ReferenceIdentifier"
          $ref: "#/definitions/Identifier"
  ReferenceInfo:
    type: "object"
    properties:
      ReferenceID:
        type: "object"
      InitialFixingDate:
        type: "string"
        format: "date-time"
      InitialFixingLevel:
        type: "number"
      InitialPropertyLevel:
        type: "number"
  References:
    type: "object"
    properties:
      Reference:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Reference"
          $ref: "#/definitions/Reference"
  Regulator:
    type: "object"
    properties:
      RegulatorName:
        type: "string"
        enum:
        - "FINMA"
        - "PRA"
        - "FCA"
      RegulatorCountry:
        type: "string"
  Schedule:
    type: "object"
    properties:
      CallabilityNoticeInDays:
        type: "integer"
        format: "int64"
      FirstEarlyRedemptionDate:
        type: "string"
        format: "date-time"
      LastEarlyRedemptionDate:
        type: "string"
        format: "date-time"
      EarlyRedemptionSettlementLag:
        type: "string"
      EarlyRedemptionFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "OTHER"
      FirstObservationDate:
        type: "string"
        format: "date-time"
      LastObservationDate:
        type: "string"
        format: "date-time"
      IntervalType:
        type: "string"
        enum:
        - "FIRST_DAY_INCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_INCLUDED_LAST_DAY_EXCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_INCLUDED"
        - "FIRST_DAY_EXCLUDED_LAST_DAY_EXCLUDED"
      ObservationFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "OTHER"
      BusinessDayConvention:
        type: "string"
        enum:
        - "FOLLOWING"
        - "MODIFIED_FOLLOWING"
        - "PRECEEDING"
        - "MODIFIED_PRECEEDING"
  SecondCouponStructure:
    type: "object"
    properties:
      CouponType:
        type: "string"
        enum:
        - "FIXED"
        - "FLOATING"
        - "HYBRID"
      CouponFrequency:
        type: "string"
        enum:
        - "DAILY"
        - "MONTHLY"
        - "BI_MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "BULLET"
        - "OTHER"
      CouponCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      CouponAmountPct:
        type: "number"
      CouponAmountType:
        type: "string"
        enum:
        - "PCT_OF_ISSUE_PRICE"
        - "PCT_OF_NAV"
        - "PCT_OF_NOTIONAL"
        - "BULLET"
        - "P_A"
      SpreadBps:
        type: "integer"
        format: "int32"
      CouponReferenceID:
        type: "object"
  SellingRestriction:
    type: "object"
    properties:
      RestrictionAreaCode:
        type: "string"
      RestrictionSubjectType:
        type: "string"
        enum:
        - "ALL_INVESTOR_IN_COUNTRY"
        - "RESIDENT_INVESTOR"
        - "CITIZEN_INVESTOR"
        - "QUALIFIED_INVESTOR"
        - "FIDLEG_PROFESSIONAL"
        - "MIFID_PROFESSIONAL"
        - "CORPORATE_INVESTOR"
        - "TRUSTEE_INVESTOR"
        - "NON_QUALIFIED_INVESTOR"
        - "US_PERSON"
  SellingRestrictions:
    type: "object"
    properties:
      SellingRestriction:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "SellingRestriction"
          $ref: "#/definitions/SellingRestriction"
  Subscription:
    type: "object"
    properties:
      SubscriptionBeginDate:
        type: "string"
        format: "date-time"
      SubscriptionEndDate:
        type: "string"
        format: "date-time"
      SubscriptionEndTime:
        type: "string"
        format: "date-time"
      SubscriptionIncreases:
        $ref: "#/definitions/SubscriptionIncreases"
  SubscriptionIncrease:
    type: "object"
    properties:
      Date:
        type: "string"
        format: "date-time"
      CurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      TransactionAmount:
        type: "number"
  SubscriptionIncreases:
    type: "object"
    properties:
      SubscriptionIncrease:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "SubscriptionIncrease"
          $ref: "#/definitions/SubscriptionIncrease"
  TargetMarket:
    type: "object"
    properties:
      TargetMarketAreaCode:
        type: "string"
      TargetMarketSubjectType:
        type: "string"
        enum:
        - "ALL_INVESTOR_IN_COUNTRY"
        - "RESIDENT_INVESTOR"
        - "CITIZEN_INVESTOR"
        - "QUALIFIED_INVESTOR"
        - "FIDLEG_PROFESSIONAL"
        - "MIFID_PROFESSIONAL"
        - "CORPORATE_INVESTOR"
        - "TRUSTEE_INVESTOR"
        - "NON_QUALIFIED_INVESTOR"
        - "US_PERSON"
      TargetMarketMinimumInvestment:
        type: "number"
      TargetMarketMinimumInvestmentCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
  TargetMarkets:
    type: "object"
    properties:
      TargetMarket:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "TargetMarket"
          $ref: "#/definitions/TargetMarket"
  Tracker:
    type: "object"
    properties:
      TrackerID:
        type: "string"
      InvestorPosition:
        type: "string"
        enum:
        - "LONG"
        - "SHORT"
      TrackerNotionalPct:
        type: "number"
      Participation:
        type: "number"
      Comment:
        type: "string"
      TrackerType:
        type: "string"
        enum:
        - "SINGLE_UNDERLYING"
        - "BASKET"
      TrackerUnderlyings:
        $ref: "#/definitions/TrackerUnderlyings"
  TrackerUnderlyings:
    type: "object"
    properties:
      TrackerUnderlying:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "TrackerUnderlying"
          $ref: "#/definitions/UnderlyingInfo"
  TradingVenue:
    type: "object"
    properties:
      TradingExchangeCode:
        type: "string"
      TradingCurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      ContributorPriceSourcePage:
        type: "string"
      FirstTradingDate:
        type: "string"
        format: "date-time"
      LastTradingDate:
        type: "string"
        format: "date-time"
      TradingSymbol:
        type: "string"
      SmallestTradeableUnit:
        type: "number"
      DirtyFlag:
        type: "boolean"
      ListedFlag:
        type: "boolean"
  TradingVenues:
    type: "object"
    properties:
      TradingVenue:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "TradingVenue"
          $ref: "#/definitions/TradingVenue"
  Transaction:
    type: "object"
    properties:
      TradeState:
        type: "string"
        enum:
        - "REQUESTED"
        - "AWAITING_FEEDBACK"
        - "DECLINED"
        - "COMPETITIVE_PRICING"
        - "GREY_MARKET_OPEN"
        - "SUBSCRIPTION_OPEN"
        - "ISSUED"
        - "REDEEMED_EARLY_CALL"
        - "EXPIRED"
        - "INACTIVE"
        - "PRIVATE_PLACEMENT"
        - "UNKNOWN"
        - "NO_FEEDBACK"
        - "DOES_NOT_WORK"
        - "PRIVATE_SUBSCRIPTION"
      MinimumTradeableSize:
        type: "integer"
        format: "int64"
      TransactionTrading:
        $ref: "#/definitions/TransactionTrading"
  TransactionTrading:
    type: "object"
    properties:
      Listing:
        $ref: "#/definitions/Listing"
      Admin:
        $ref: "#/definitions/Admin"
      TradingVenues:
        $ref: "#/definitions/TradingVenues"
  UKTax:
    type: "object"
    properties:
      uktaxType:
        type: "string"
        enum:
        - "CAPITAL_GAIN"
        - "INTEREST"
        - "CAPITAL_GAIN_INTEREST"
      ukunderlyingSitus:
        type: "string"
        enum:
        - "SITUS"
        - "NON_SITUS"
        - "POTENTIALLY_SITUS"
      ukproductType:
        type: "string"
        enum:
        - "WARRANT"
        - "DDS"
        - "EIS"
        - "QCP"
      UKTaxType:
        type: "string"
        enum:
        - "CAPITAL_GAIN"
        - "INTEREST"
        - "CAPITAL_GAIN_INTEREST"
      UKRemittanceFlag:
        type: "boolean"
      UKProductSitusFlag:
        type: "boolean"
      UKUnderlyingSitus:
        type: "string"
        enum:
        - "SITUS"
        - "NON_SITUS"
        - "POTENTIALLY_SITUS"
      UKProductType:
        type: "string"
        enum:
        - "WARRANT"
        - "DDS"
        - "EIS"
        - "QCP"
  USTax:
    type: "object"
    properties:
      ustaxType:
        type: "string"
        enum:
        - "IRS_01_INTEREST_BY_US_OBLIGORS_GENERAL"
        - "IRS_02_INTEREST_ON_REAL_PROPERTY_MORTGAGES"
        - "IRS_04_INTEREST_PAID_BY_FOREIGN_CORPORATIONS"
        - "IRS_05_TAX_FREE_COVENANT_BONDS_PRIOR_TO_01_01_1934"
        - "IRS_06_DIVIDENDS_PAID_BY_U_S_CORPORATIONS_GENERAL"
        - "IRS_30_INCOME_ON_ORIGINAL_ISSUE_DISCOUNT_OID"
      ustaxReportabilityType:
        type: "string"
        enum:
        - "US_IRS_TAXABLE"
        - "US_IRS_NON_TAXABLE"
        - "LIMITED_PARTNERSHIP"
      USTaxType:
        type: "string"
        enum:
        - "IRS_01_INTEREST_BY_US_OBLIGORS_GENERAL"
        - "IRS_02_INTEREST_ON_REAL_PROPERTY_MORTGAGES"
        - "IRS_04_INTEREST_PAID_BY_FOREIGN_CORPORATIONS"
        - "IRS_05_TAX_FREE_COVENANT_BONDS_PRIOR_TO_01_01_1934"
        - "IRS_06_DIVIDENDS_PAID_BY_U_S_CORPORATIONS_GENERAL"
        - "IRS_30_INCOME_ON_ORIGINAL_ISSUE_DISCOUNT_OID"
      USTaxReportabilityType:
        type: "string"
        enum:
        - "US_IRS_TAXABLE"
        - "US_IRS_NON_TAXABLE"
        - "LIMITED_PARTNERSHIP"
      IRS871m:
        $ref: "#/definitions/IRS871M"
  Underlying:
    type: "object"
    properties:
      fxreferenceID:
        type: "object"
      UnderlyingID:
        type: "string"
      ShortName:
        type: "string"
      LongName:
        type: "string"
      UnderlyingIdentifiers:
        $ref: "#/definitions/UnderlyingIdentifiers"
      InitialFixingDate:
        type: "string"
        format: "date-time"
      InitialFixingLevel:
        type: "number"
      AssetType:
        type: "string"
        enum:
        - "EQUITY"
        - "INDEX"
        - "COMMODITY"
        - "CORPORATE_BOND"
        - "CURRENCY"
        - "GOVERNMENT_BOND"
        - "PREFERRED_STOCK"
      SecurityType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "SHARE"
        - "INDEX"
        - "REG_SHARE"
        - "BEARER_SHARE"
        - "DIV_CERT"
        - "ADR"
        - "GDR"
        - "FUTURE"
        - "REIT"
        - "FUND"
        - "PART_CERT"
        - "CERTIFICATE"
        - "HEDGE_FUND"
        - "SDR"
        - "FO_HF"
        - "ETF"
        - "BOND"
        - "SPOT_PRICE"
        - "CURRENCY"
        - "INTEREST_RATE"
        - "PREFERRED_SHARE"
      Weight:
        type: "number"
      CurrencyCode:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BOV"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYN"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHE"
        - "CHF"
        - "CHW"
        - "CLF"
        - "CLP"
        - "CNH"
        - "CNY"
        - "COP"
        - "COU"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EEK"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GBX"
        - "GEL"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GWP"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MXV"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SRD"
        - "SSP"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "USX"
        - "USN"
        - "USS"
        - "UYI"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XAG"
        - "XAU"
        - "XBA"
        - "XBB"
        - "XBC"
        - "XBD"
        - "XCD"
        - "XDR"
        - "XFU"
        - "XOF"
        - "XPD"
        - "XPF"
        - "XPT"
        - "XSU"
        - "XUA"
        - "YER"
        - "ZAR"
        - "ZMK"
        - "ZMW"
        - "ZWL"
      FXReferenceID:
        type: "object"
      UnderlyingHolidayScheduleCountryCode:
        type: "string"
      CountryCode:
        type: "string"
      PhysicalAssetReferenceID:
        type: "object"
      CoverRatio:
        type: "number"
  UnderlyingIdentifiers:
    type: "object"
    properties:
      UnderlyingIdentifier:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "UnderlyingIdentifier"
          $ref: "#/definitions/Identifier"
  UnderlyingInfo:
    type: "object"
    properties:
      UnderlyingID:
        type: "object"
      InitialFixingDate:
        type: "string"
        format: "date-time"
      InitialFixingLevel:
        type: "number"
      StrikeLevel:
        type: "number"
      KnockOutAutocallLevel:
        type: "number"
      InitialPropertyLevel:
        type: "number"
      TriggerBarrierLevel:
        type: "number"
  Underlyings:
    type: "object"
    properties:
      Underlying:
        type: "array"
        readOnly: true
        items:
          xml:
            name: "Underlying"
          $ref: "#/definitions/Underlying"
  RfqSummaryDto:
    type: "object"
    required:
    - "rfq"
    properties:
      rfq:
        $ref: "#/definitions/RfqDto"
  TenantListDto:
    type: "object"
    required:
    - "tenantIds"
    properties:
      tenantIds:
        type: "array"
        items:
          type: "integer"
          format: "int64"
  RfqValidationDto:
    type: "object"
    required:
    - "rfq"
    properties:
      rfq:
        $ref: "#/definitions/RfqDto"
      configProcessorEvent:
        $ref: "#/definitions/ConfigProcessorEvent"
